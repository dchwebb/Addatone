
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2.0.1.281.2

// backanno -o Addatone_ICE40_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui -msgset D:/Eurorack/Addatone/Addatone_ICE40/promote.xml Addatone_ICE40_impl_1.udb 
// Netlist created on Mon Mar 23 16:32:13 2020
// Netlist written on Mon Mar 23 16:32:17 2020
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( i_ADC_CS, i_Clock, o_DAC_CS, o_DAC_SCK, o_DAC_MOSI, test, debug, 
             i_ADC_Clock, i_ADC_Data, reset_n );
  input  i_ADC_CS, i_Clock, i_ADC_Clock, i_ADC_Data, reset_n;
  output o_DAC_CS, o_DAC_SCK, o_DAC_MOSI, test, debug;
  wire   \sample_position.n9007 , \sample_position.n1[10] , 
         \sample_position.n6949 , \sample_position.n1[9] , 
         \sample_position.n87[9] , \sample_position.n87[10] , 
         \sample_position.n6951 , \sample_position.n69[8] , 
         \sample_position.n69[7] , \sample_position.n9061 , 
         \sample_position.n6793 , \sample_position.n6792 , 
         \sample_position.n6895 , \sample_position.n6795 , 
         \sample_position.n6794 , n4717, Main_Clock, 
         \sample_position.Accumulated_Frequency[7] , 
         \sample_position.Accumulated_Frequency[8] , \sample_position.n6897 , 
         \sample_position.n9004 , \sample_position.n1[8] , 
         \sample_position.n6947 , \sample_position.n1[7] , 
         \sample_position.n87[7] , \sample_position.n87[8] , 
         \sample_position.n9001 , \sample_position.n1[6] , 
         \sample_position.n6945 , \sample_position.n1[5] , 
         \sample_position.n87[5] , \sample_position.n87[6] , 
         \sample_position.n8998 , \sample_position.n1[4] , 
         \sample_position.n6943 , \sample_position.n1[3] , 
         \sample_position.n87[3] , \sample_position.n87[4] , 
         \sample_position.n8995 , \sample_position.n1[2] , 
         \sample_position.n6941 , \sample_position.n1[1] , 
         \sample_position.n87[1] , \sample_position.n87[2] , 
         \sample_position.n8992 , \sample_position.n1[0] , VCC_net, 
         \sample_position.n87[0] , \sample_position.n69[6] , 
         \sample_position.n69[5] , \sample_position.n9058 , 
         \sample_position.n6797 , \sample_position.n6796 , 
         \sample_position.n6893 , \sample_position.n6799 , 
         \sample_position.n6798 , \sample_position.Accumulated_Frequency[5] , 
         \sample_position.Accumulated_Frequency[6] , \sample_position.n69[4] , 
         \sample_position.n69[3] , \sample_position.n9055 , 
         \sample_position.n6801 , \sample_position.n6800 , 
         \sample_position.n6891 , \sample_position.n6803 , 
         \sample_position.n6802 , \sample_position.Accumulated_Frequency[3] , 
         \sample_position.Accumulated_Frequency[4] , \sample_position.n69[2] , 
         \sample_position.n69[1] , \sample_position.n9052 , 
         \sample_position.n6805 , \sample_position.n6804 , 
         \sample_position.n6889 , \sample_position.n6807 , 
         \sample_position.n6806 , \sample_position.Accumulated_Frequency[1] , 
         \sample_position.Accumulated_Frequency[2] , \sample_position.n69[0] , 
         \sample_position.n9049 , \sample_position.n6809 , 
         \sample_position.n6808 , \sample_position.Accumulated_Frequency[0] , 
         \sample_position.n69_adj_1099[15] , \sample_position.n9124 , 
         \sample_position.n6920 , 
         \sample_position.Accumulated_Freq_Offset[15] , \Freq_Scale[15] , 
         n4716, \sample_position.n4940 , \sample_position.n69_adj_1099[14] , 
         \sample_position.n69_adj_1099[13] , \sample_position.n9121 , 
         \sample_position.Accumulated_Freq_Offset[14] , \Freq_Scale[14] , 
         \sample_position.n6918 , 
         \sample_position.Accumulated_Freq_Offset[13] , \Freq_Scale[13] , 
         \sample_position.n69_adj_1099[12] , 
         \sample_position.n69_adj_1099[11] , \sample_position.n9118 , 
         \sample_position.Accumulated_Freq_Offset[12] , \Freq_Scale[12] , 
         \sample_position.n6916 , 
         \sample_position.Accumulated_Freq_Offset[11] , \Freq_Scale[11] , 
         \sample_position.n69_adj_1099[10] , \sample_position.n69_adj_1099[9] , 
         \sample_position.n9115 , 
         \sample_position.Accumulated_Freq_Offset[10] , \Freq_Scale[10] , 
         \sample_position.n6914 , \sample_position.Accumulated_Freq_Offset[9] , 
         \Freq_Scale[9] , \sample_position.n69_adj_1099[8] , 
         \sample_position.n69_adj_1099[7] , \sample_position.n9112 , 
         \sample_position.Accumulated_Freq_Offset[8] , \Freq_Scale[8] , 
         \sample_position.n6912 , \sample_position.Accumulated_Freq_Offset[7] , 
         \Freq_Scale[7] , \sample_position.n69_adj_1099[6] , 
         \sample_position.n69_adj_1099[5] , \sample_position.n9109 , 
         \sample_position.Accumulated_Freq_Offset[6] , \Freq_Scale[6] , 
         \sample_position.n6910 , \sample_position.Accumulated_Freq_Offset[5] , 
         \Freq_Scale[5] , \sample_position.n69_adj_1099[4] , 
         \sample_position.n69_adj_1099[3] , \sample_position.n9106 , 
         \sample_position.Accumulated_Freq_Offset[4] , \Freq_Scale[4] , 
         \sample_position.n6908 , \sample_position.Accumulated_Freq_Offset[3] , 
         \Freq_Scale[3] , \sample_position.n69_adj_1099[2] , 
         \sample_position.n69_adj_1099[1] , \sample_position.n9103 , 
         \sample_position.Accumulated_Freq_Offset[2] , \Freq_Scale[2] , 
         \sample_position.n6906 , \sample_position.Accumulated_Freq_Offset[1] , 
         \Freq_Scale[1] , \sample_position.n69_adj_1099[0] , 
         \sample_position.n9100 , \sample_position.Accumulated_Freq_Offset[0] , 
         \Freq_Scale[0] , \sample_position.n69[15] , \sample_position.n9073 , 
         \sample_position.n6903 , \sample_position.n6779 , 
         \sample_position.n6778 , \sample_position.Accumulated_Frequency[15] , 
         \sample_position.n69[14] , \sample_position.n69[13] , 
         \sample_position.n9070 , \sample_position.n6781 , 
         \sample_position.n6780 , \sample_position.n6901 , 
         \sample_position.n6783 , \sample_position.n6782 , 
         \sample_position.Accumulated_Frequency[13] , 
         \sample_position.Accumulated_Frequency[14] , 
         \sample_position.n69[12] , \sample_position.n69[11] , 
         \sample_position.n9067 , \sample_position.n6785 , 
         \sample_position.n6784 , \sample_position.n6899 , 
         \sample_position.n6787 , \sample_position.n6786 , 
         \sample_position.Accumulated_Frequency[11] , 
         \sample_position.Accumulated_Frequency[12] , 
         \sample_position.n69[10] , \sample_position.n69[9] , 
         \sample_position.n9064 , \sample_position.n6789 , 
         \sample_position.n6788 , \sample_position.n6791 , 
         \sample_position.n6790 , \sample_position.Accumulated_Frequency[9] , 
         \sample_position.Accumulated_Frequency[10] , \sample_position.n9016 , 
         \sample_position.n6955 , \sample_position.n1[15] , 
         \sample_position.n87[15] , \sample_position.n9013 , 
         \sample_position.n1[14] , \sample_position.n6953 , 
         \sample_position.n1[13] , \sample_position.n87[13] , 
         \sample_position.n87[14] , \sample_position.n9010 , 
         \sample_position.n1[12] , \sample_position.n1[11] , 
         \sample_position.n87[11] , \sample_position.n87[12] , n75, n76, n9088, 
         \Sample_Timer[10] , n6880, \Sample_Timer[9] , n2660, n6882, n83, n84, 
         n9076, \Sample_Timer[2] , n6872, \Sample_Timer[1] , n6874, n71, n72, 
         n9094, \Sample_Timer[14] , n6884, \Sample_Timer[13] , n6886, n81, n82, 
         n9079, \Sample_Timer[4] , \Sample_Timer[3] , n6876, n85, n9046, 
         \Sample_Timer[0] , n77, n78, n9085, \Sample_Timer[8] , n6878, 
         \Sample_Timer[7] , n38, n9031, n6929, n9, reset_n_N_191, 
         \Harmonic[7] , n39, n40, n9028, n10, n6927, n11, \Harmonic[5] , 
         \Harmonic[6] , n41, n42, n9025, n12_adj_1108, n6925, n13, 
         \Harmonic[3] , \Harmonic[4] , n43, n44, n9022, n14, n6923, n15, 
         \Harmonic[1] , \Harmonic[2] , n45, n9019, n16_adj_1110, n977, 
         \Harmonic[0] , n73, n74, n9091, \Sample_Timer[12] , 
         \Sample_Timer[11] , n70_adj_1104, n9097, \Sample_Timer[15] , n79, n80, 
         n9082, \Sample_Timer[6] , \Sample_Timer[5] , \mult.n47[7] , 
         \mult.n9043 , \mult.n6938 , \mult.Comb_Counter[7] , n2875, 
         \mult.n2914 , \mult.n47[6] , \mult.n47[5] , \mult.n9040 , 
         \mult.Comb_Counter[6] , \mult.n6936 , \mult.Comb_Counter[5] , 
         \mult.n47[4] , \mult.n47[3] , \mult.n9037 , \mult.Comb_Counter[4] , 
         \mult.n6934 , \mult.Comb_Counter[3] , \mult.n47[2] , \mult.n47[1] , 
         \mult.n9034 , \mult.Comb_Counter[2] , \mult.n6932 , 
         \mult.Comb_Counter[1] , \mult.n47[0] , \mult.n8974 , 
         \mult.Comb_Counter[0] , \mult.n8989 , \mult.n6964 , \mult.n1[8] , 
         \Adder_Mult[8] , \mult.n57[9] , \mult.cout , \mult.n8986 , 
         \mult.n1[7] , \Adder_Mult[7] , \mult.n6962 , \mult.n1[6] , 
         \Adder_Mult[6] , \mult.n57[7] , \mult.n57[8] , \mult.n8983 , 
         \mult.n1[5] , \Adder_Mult[5] , \mult.n6960 , \mult.n1[4] , 
         \Adder_Mult[4] , \mult.n57[5] , \mult.n57[6] , \mult.n8980 , 
         \mult.n1[3] , \Adder_Mult[3] , \mult.n6958 , \mult.n1[2] , 
         \Adder_Mult[2] , \mult.n57[3] , \mult.n57[4] , \mult.n8977 , 
         \mult.n1[1] , \Adder_Mult[1] , \mult.n1[0] , \mult.Adder_Mult[0]_2 , 
         \mult.n57[1] , \mult.n57[2] , \ADC_Data[3][1].sig_053.FeedThruLUT , 
         \ADC_Data[3][0].sig_000.FeedThruLUT , \ADC_Data[3][1] , 
         \ADC_Data[3][0] , ADC_Data_Received, 
         \ADC_Data[4][1].sig_038.FeedThruLUT , 
         \ADC_Data[4][0].sig_001.FeedThruLUT , \ADC_Data[4][1] , 
         \ADC_Data[4][0] , \Comb_Interval[0] , \Comb_Interval[1] , test_N_190, 
         test_c, n3572, \Adder_Clear_N_197.sig_002.FeedThruLUT , n982, n66, 
         n308, Adder_Clear_N_197, n979, n1028, n3566, n983, Mult_Ready, 
         Comb_Muted, n978, n987, n1008, n1014, n278, \Adder_Start_1__N_111[0] , 
         \ADC_Data[1][1].sig_020.FeedThruLUT , 
         \ADC_Data[1][0].sig_003.FeedThruLUT , \ADC_Data[1][1] , 
         \ADC_Data[1][0] , \Harmonic_Scale[0] , \Harmonic_Scale[1] , 
         \ADC_Data[0][1].sig_005.FeedThruLUT , 
         \ADC_Data[0][0].sig_004.FeedThruLUT , \ADC_Data[0][1] , 
         \ADC_Data[0][0] , \Frequency[0] , \Frequency[1] , 
         \ADC_Data[0][3].sig_007.FeedThruLUT , 
         \ADC_Data[0][2].sig_006.FeedThruLUT , \ADC_Data[0][3] , 
         \ADC_Data[0][2] , \Frequency[2] , \Frequency[3] , 
         \ADC_Data[0][5].sig_009.FeedThruLUT , 
         \ADC_Data[0][4].sig_008.FeedThruLUT , \ADC_Data[0][5] , 
         \ADC_Data[0][4] , \Frequency[4] , \Frequency[5] , 
         \ADC_Data[0][7].sig_011.FeedThruLUT , 
         \ADC_Data[0][6].sig_010.FeedThruLUT , \ADC_Data[0][7] , 
         \ADC_Data[0][6] , \Frequency[6] , \Frequency[7] , 
         \ADC_Data[0][9].sig_013.FeedThruLUT , 
         \ADC_Data[0][8].sig_012.FeedThruLUT , \ADC_Data[0][9] , 
         \ADC_Data[0][8] , \Frequency[8] , \Frequency[9] , 
         \ADC_Data[0][11].sig_015.FeedThruLUT , 
         \ADC_Data[0][10].sig_014.FeedThruLUT , \ADC_Data[0][11] , 
         \ADC_Data[0][10] , \Frequency[10] , \Frequency[11] , 
         \ADC_Data[0][13].sig_017.FeedThruLUT , 
         \ADC_Data[0][12].sig_016.FeedThruLUT , \ADC_Data[0][13] , 
         \ADC_Data[0][12] , \Frequency[12] , \Frequency[13] , 
         \ADC_Data[0][15].sig_019.FeedThruLUT , 
         \ADC_Data[0][14].sig_018.FeedThruLUT , \ADC_Data[0][15] , 
         \ADC_Data[0][14] , \Frequency[14] , \Frequency[15] , 
         \ADC_Data[1][3].sig_022.FeedThruLUT , 
         \ADC_Data[1][2].sig_021.FeedThruLUT , \ADC_Data[1][3] , 
         \ADC_Data[1][2] , \Harmonic_Scale[2] , \Harmonic_Scale[3] , 
         \ADC_Data[1][5].sig_024.FeedThruLUT , 
         \ADC_Data[1][4].sig_023.FeedThruLUT , \ADC_Data[1][5] , 
         \ADC_Data[1][4] , \Harmonic_Scale[4] , \Harmonic_Scale[5] , 
         \ADC_Data[1][7].sig_026.FeedThruLUT , 
         \ADC_Data[1][6].sig_025.FeedThruLUT , \ADC_Data[1][7] , 
         \ADC_Data[1][6] , \Harmonic_Scale[6] , \Harmonic_Scale[7] , 
         \n1278.sig_029.FeedThruLUT , 
         \sample_position.n1272[1].sig_028.FeedThruLUT , n1278, 
         \sample_position.n1272[1] , n1277, \sample_position.n105[1] , 
         \sample_position.n105[0] , n70, \sample_position.n6094 , 
         \sample_position.n2897 , \sample_position.Accumulated_Offset[0] , 
         \sample_position.Accumulated_Offset[1] , \sample_position.n1294 , 
         \sample_position.n4478 , n1280, o_Freq_Too_High_N_366, Next_Sample, 
         n5279, \sample_position.n105[14] , \sample_position.n105[15] , 
         \sample_position.Accumulated_Offset[15] , 
         \sample_position.Accumulated_Offset[14] , \sample_position.n105[12] , 
         \sample_position.n105[13] , \sample_position.Accumulated_Offset[13] , 
         \sample_position.Accumulated_Offset[12] , \sample_position.n105[10] , 
         \sample_position.n105[11] , \sample_position.Accumulated_Offset[11] , 
         \sample_position.Accumulated_Offset[10] , \sample_position.n105[8] , 
         \sample_position.n105[9] , \sample_position.Accumulated_Offset[9] , 
         \sample_position.Accumulated_Offset[8] , \sample_position.n105[6] , 
         \sample_position.n105[7] , \sample_position.Accumulated_Offset[7] , 
         \sample_position.Accumulated_Offset[6] , \sample_position.n105[4] , 
         \sample_position.n105[5] , \sample_position.Accumulated_Offset[5] , 
         \sample_position.Accumulated_Offset[4] , \sample_position.n105[2] , 
         \sample_position.n105[3] , \sample_position.Accumulated_Offset[3] , 
         \sample_position.Accumulated_Offset[2] , 
         \ADC_Data[4][6].sig_033.FeedThruLUT , 
         \ADC_Data[4][7].sig_032.FeedThruLUT , \ADC_Data[4][6] , 
         \ADC_Data[4][7] , \Comb_Interval[7] , \Comb_Interval[6] , 
         \ADC_Data[4][4].sig_035.FeedThruLUT , 
         \ADC_Data[4][5].sig_034.FeedThruLUT , \ADC_Data[4][4] , 
         \ADC_Data[4][5] , \Comb_Interval[5] , \Comb_Interval[4] , 
         \ADC_Data[4][2].sig_037.FeedThruLUT , 
         \ADC_Data[4][3].sig_036.FeedThruLUT , \ADC_Data[4][2] , 
         \ADC_Data[4][3] , \Comb_Interval[3] , \Comb_Interval[2] , 
         \ADC_Data[3][14].sig_040.FeedThruLUT , 
         \ADC_Data[3][15].sig_039.FeedThruLUT , \ADC_Data[3][14] , 
         \ADC_Data[3][15] , \ADC_Data[3][12].sig_042.FeedThruLUT , 
         \ADC_Data[3][13].sig_041.FeedThruLUT , \ADC_Data[3][12] , 
         \ADC_Data[3][13] , \ADC_Data[3][10].sig_044.FeedThruLUT , 
         \ADC_Data[3][11].sig_043.FeedThruLUT , \ADC_Data[3][10] , 
         \ADC_Data[3][11] , \ADC_Data[3][8].sig_046.FeedThruLUT , 
         \ADC_Data[3][9].sig_045.FeedThruLUT , \ADC_Data[3][8] , 
         \ADC_Data[3][9] , \ADC_Data[3][6].sig_048.FeedThruLUT , 
         \ADC_Data[3][7].sig_047.FeedThruLUT , \ADC_Data[3][6] , 
         \ADC_Data[3][7] , \ADC_Data[3][4].sig_050.FeedThruLUT , 
         \ADC_Data[3][5].sig_049.FeedThruLUT , \ADC_Data[3][4] , 
         \ADC_Data[3][5] , \ADC_Data[3][2].sig_052.FeedThruLUT , 
         \ADC_Data[3][3].sig_051.FeedThruLUT , \ADC_Data[3][2] , 
         \ADC_Data[3][3] , \ADC_Data[2][8].sig_054.FeedThruLUT , 
         \ADC_Data[2][8] , \Scale_Initial[8] , 
         \ADC_Data[2][6].sig_056.FeedThruLUT , 
         \ADC_Data[2][7].sig_055.FeedThruLUT , \ADC_Data[2][6] , 
         \ADC_Data[2][7] , \Scale_Initial[7] , \Scale_Initial[6] , 
         \ADC_Data[2][4].sig_058.FeedThruLUT , 
         \ADC_Data[2][5].sig_057.FeedThruLUT , \ADC_Data[2][4] , 
         \ADC_Data[2][5] , \Scale_Initial[5] , \Scale_Initial[4] , 
         \ADC_Data[2][2].sig_060.FeedThruLUT , 
         \ADC_Data[2][3].sig_059.FeedThruLUT , \ADC_Data[2][2] , 
         \ADC_Data[2][3] , \Scale_Initial[3] , \Scale_Initial[2] , n7531, 
         n7513, \Adder_Start[0] , reset_n_c, n6_adj_1107, n8, \Adder_Start[1] , 
         n5, \ADC_Data[2][0].sig_065.FeedThruLUT , 
         \ADC_Data[2][1].sig_061.FeedThruLUT , \ADC_Data[2][0] , 
         \ADC_Data[2][1] , \Scale_Initial[1] , \Scale_Initial[0] , 
         \genadder[0].adder.r_Multiple_8__N_686[1] , 
         \genadder[0].adder.r_Multiple_8__N_686[0] , 
         \genadder[0].adder.Counter_4__N_652 , 
         \genadder[0].adder.r_Multiple[2] , \genadder[0].adder.n5996 , 
         \genadder[0].adder.r_Multiple[1] , \genadder[0].adder.n4645 , 
         \genadder[0].adder.r_Multiple[0] , \genadder[0].adder.n7725 , 
         \genadder[0].adder.Counter_4__N_642[0] , 
         \genadder[0].adder.Counter[1] , \genadder[0].adder.Counter[0] , 
         \genadder[0].adder.n7722 , \genadder[0].adder.n15 , 
         \genadder[0].adder.o_Done_N_699 , \genadder[0].adder.n2868 , 
         Adder_Clear, \genadder[1].adder.n3038 , \genadder[0].adder.n3023 , 
         \genadder[1].adder.Counter_4__N_652 , \Adder_Ready[1] , 
         \genadder[1].adder.n15 , \genadder[1].adder.o_Done_N_699 , 
         \Adder_Ready[0] , \genadder[0].adder.r_Multiple_8__N_686[6] , 
         \genadder[0].adder.r_Multiple[7] , \genadder[0].adder.r_Multiple[6] , 
         \genadder[0].adder.r_Multiple_8__N_686[4] , 
         \genadder[0].adder.r_Multiple_8__N_686[5] , 
         \genadder[0].adder.r_Multiple[5] , \genadder[0].adder.r_Multiple[4] , 
         \genadder[0].adder.r_Multiple_8__N_686[2] , 
         \genadder[0].adder.r_Multiple_8__N_686[3] , 
         \genadder[0].adder.r_Multiple[3] , \genadder[0].adder.n7723 , 
         \genadder[0].adder.n7726 , \genadder[0].adder.Counter[3] , 
         \genadder[0].adder.n3120 , \genadder[0].adder.Counter[2] , 
         \adc.Data_State.sig_066.FeedThruLUT , \adc.Data_State , \adc.n4554 , 
         \adc.Clock_Stable , \adc.Data_State.sig_067.FeedThruLUT , \adc.n4595 , 
         \adc.Data_State.sig_068.FeedThruLUT , \adc.n4563 , 
         \adc.Data_State.sig_069.FeedThruLUT , \adc.n3984 , 
         \adc.Data_State.sig_070.FeedThruLUT , \adc.n4571 , 
         \adc.Data_State.sig_071.FeedThruLUT , \adc.n4591 , 
         \adc.Data_State.sig_072.FeedThruLUT , \adc.n4590 , 
         \adc.Data_State.sig_073.FeedThruLUT , \adc.n4592 , 
         \adc.Data_State.sig_074.FeedThruLUT , \adc.n4555 , 
         \adc.Data_State.sig_075.FeedThruLUT , \adc.n4593 , 
         \adc.Data_State.sig_076.FeedThruLUT , \adc.n4560 , 
         \adc.Data_State.sig_077.FeedThruLUT , \adc.n4582 , 
         \adc.Data_State.sig_078.FeedThruLUT , \adc.n7368 , \ADC_Data[1][8] , 
         \adc.Data_State.sig_079.FeedThruLUT , \adc.n4575 , 
         \adc.Data_State.sig_081.FeedThruLUT , \adc.n4611 , 
         \adc.Data_State.sig_082.FeedThruLUT , \adc.n4610 , 
         \adc.Data_State.sig_083.FeedThruLUT , \adc.n4556 , 
         \adc.Data_State.sig_084.FeedThruLUT , \adc.n4612 , 
         \adc.Data_State.sig_085.FeedThruLUT , \adc.n4561 , 
         \adc.Data_State.sig_087.FeedThruLUT , \adc.n4568 , 
         \adc.Data_State.sig_088.FeedThruLUT , \adc.n4598 , 
         \adc.Data_State.sig_089.FeedThruLUT , \adc.n7363 , 
         \adc.Data_State.sig_090.FeedThruLUT , \adc.n4573 , 
         \adc.Data_State.sig_091.FeedThruLUT , \adc.n4583 , 
         \adc.Data_State.sig_093.FeedThruLUT , \adc.n4603 , 
         \adc.Data_State.sig_094.FeedThruLUT , \adc.n4557 , 
         \adc.Data_State.sig_095.FeedThruLUT , \adc.n4602 , 
         \adc.Data_State.sig_096.FeedThruLUT , \adc.n4600 , 
         \adc.Data_State.sig_097.FeedThruLUT , \adc.n4601 , 
         \adc.Data_State.sig_098.FeedThruLUT , \adc.n4570 , 
         \adc.Data_State.sig_099.FeedThruLUT , \adc.n4585 , 
         \adc.Data_State.sig_100.FeedThruLUT , \adc.n4586 , 
         \adc.Data_State.sig_101.FeedThruLUT , \adc.n4587 , 
         \adc.Data_State.sig_102.FeedThruLUT , \adc.n4553 , 
         \adc.Data_State.sig_103.FeedThruLUT , \adc.n4588 , 
         \adc.Data_State.sig_104.FeedThruLUT , \adc.n4562 , 
         \adc.Data_State.sig_105.FeedThruLUT , \adc.n4579 , 
         \adc.Data_State.sig_106.FeedThruLUT , \adc.n4576 , 
         \adc.Data_State.sig_107.FeedThruLUT , \adc.n4618 , 
         \adc.Data_State.sig_108.FeedThruLUT , \adc.n4617 , 
         \adc.Data_State.sig_109.FeedThruLUT , \adc.n4616 , 
         \adc.Data_State.sig_110.FeedThruLUT , \adc.n4558 , 
         \adc.Data_State.sig_111.FeedThruLUT , \adc.n4615 , 
         \adc.Data_State.sig_112.FeedThruLUT , \adc.n4564 , 
         \adc.Data_State.sig_113.FeedThruLUT , \adc.n4580 , 
         \adc.Data_State.sig_114.FeedThruLUT , \adc.n4572 , 
         \adc.Data_State.sig_116.FeedThruLUT , \adc.n4605 , 
         \adc.Data_State.sig_117.FeedThruLUT , \adc.n4606 , 
         \adc.Data_State.sig_118.FeedThruLUT , \adc.n4607 , 
         \adc.Data_State.sig_119.FeedThruLUT , \adc.n4552 , 
         \adc.Data_State.sig_120.FeedThruLUT , \adc.n4608 , 
         \adc.Data_State.sig_121.FeedThruLUT , \adc.n4565 , 
         \adc.Data_State.sig_122.FeedThruLUT , \adc.n4581 , \adc.n17[1] , 
         \adc.n17[0] , \adc.Count_Stable[0] , \adc.Count_Stable[1] , 
         \adc.n4948 , \adc.Data_State.sig_123.FeedThruLUT , \adc.n4597 , 
         \i_ADC_Clock_c.sig_126.FeedThruLUT , i_ADC_Clock_c, \adc.n7708 , 
         \adc.n17[2] , \adc.Count_Stable[2] , 
         \adc.Data_State.sig_128.FeedThruLUT , \adc.n4596 , \adc.n370[2] , 
         \adc.n370[1] , \adc.Receive_Bit[1] , \adc.Receive_Bit[0] , 
         \adc.Receive_Bit[2] , \adc.n2857 , \adc.n4926 , \adc.n377[2] , 
         \adc.n377[1] , \adc.Receive_Byte[1] , \Receive_Byte[0] , 
         \adc.Receive_Byte[2] , n4642, n4921, \adc.n377[3] , 
         \adc.Receive_Byte[3] , \mult.o_Mult_8__N_700[7] , 
         \mult.o_Mult_8__N_700[8] , Reset_Mult_Scaler, \mult.n4650 , 
         \mult.o_Mult_8__N_700[5] , \mult.o_Mult_8__N_700[6] , \mult.n7696 , 
         \mult.n1521 , \mult.n1502[0] , o_Comb_Muted_N_739, Start_Mult_Scaler, 
         \mult.n1502[2] , \mult.n15 , \mult.n1836 , \mult.n15_adj_1046 , n1505, 
         \mult.o_Mult_8__N_700[3] , \mult.o_Mult_8__N_700[4] , 
         \mult.o_Mult_8__N_700[1] , \mult.o_Mult_8__N_700[2] , 
         \o_Comb_Muted_N_739.sig_129.FeedThruLUT , \mult.n7744 , 
         \genadder[1].adder.r_Multiple_8__N_686[1] , 
         \genadder[1].adder.r_Multiple_8__N_686[0] , \genadder[1].adder.n5956 , 
         \genadder[1].adder.r_Multiple[2] , \genadder[1].adder.r_Multiple[1] , 
         \genadder[1].adder.n4652 , \genadder[1].adder.r_Multiple[0] , 
         \genadder[1].adder.n7718 , \genadder[1].adder.Counter_4__N_642[0] , 
         \genadder[1].adder.Counter[1] , \genadder[1].adder.Counter[0] , 
         \genadder[1].adder.n6 , \genadder[1].adder.n18 , 
         \genadder[1].adder.n4896 , \genadder[1].adder.n7720 , 
         \genadder[1].adder.n7721 , \genadder[1].adder.Counter[3] , 
         \genadder[1].adder.n3156 , \genadder[1].adder.n7717 , 
         \genadder[1].adder.Counter[2] , 
         \genadder[1].adder.r_Multiple_8__N_686[4] , 
         \genadder[1].adder.r_Multiple_8__N_686[5] , 
         \genadder[1].adder.r_Multiple[5] , \genadder[1].adder.r_Multiple[6] , 
         \genadder[1].adder.r_Multiple[4] , 
         \genadder[1].adder.r_Multiple_8__N_686[2] , 
         \genadder[1].adder.r_Multiple_8__N_686[3] , 
         \genadder[1].adder.r_Multiple[3] , 
         \Adder_Mult[8].sig_130.FeedThruLUT , \genadder[1].adder.n6038 , 
         \genadder[1].adder.r_Multiple[7] , \sample_output.n3 , 
         \Output_Data[15] , DAC_Send_N_931, DAC_Send_N_933, n7593, 
         \sample_output.n4330 , \sample_output.n4328 , 
         \sample_output.Output_Data[20] , DAC_Ready, 
         \sample_output.Output_Data[21] , \sample_output.n4902 , 
         \sample_output.n3586 , \sample_output.n3590 , 
         \sample_output.DAC_Send_N_932 , DAC_Send, 
         \sample_output.DAC_Send_N_930 , \sample_output.SM_Sample_Output[2] , 
         \sample_output.n3939 , \sample_output.n6405$n1 , 
         \sample_output.n5007 , \sample_output.n5003 , \sample_output.n6405 , 
         \r_Sample_L[17] , \r_Sample_L[10] , \sample_output.n4334 , 
         \sample_output.Output_Data[16] , \sample_output.n3_adj_1043 , 
         \sample_output.Output_Data[6] , \sample_output.n7601 , 
         \sample_output.n3_adj_1044 , \Output_Data[8] , n7591, 
         \sample_output.dac.n1 , \sample_output.dac.n25[1] , 
         \sample_output.dac.Current_Bit[0] , 
         \sample_output.dac.Current_Bit[1] , \sample_output.dac.n4719 , 
         \sample_output.dac.n4916 , \sample_output.dac.n25[3] , 
         \sample_output.dac.n25[2] , \sample_output.dac.Current_Bit[3] , 
         \sample_output.dac.Current_Bit[2] , \sample_output.dac.n7412 , 
         \sample_output.dac.o_SPI_Data_N_1028 , \SM_DAC_Out[0] , 
         \sample_output.dac.n2412 , n7519, o_DAC_MOSI_c, 
         \sample_output.dac.n7738 , \sample_output.dac.n6178 , \SM_DAC_Out[2] , 
         \sample_output.DAC_Send_adj_1042 , n7_adj_1102, 
         \sample_output.dac.n2689 , \sample_output.dac.n2697 , n5063, 
         \SM_DAC_Out[1] , \sample_output.dac.n2390[0] , 
         \sample_output.dac.n12 , o_DAC_CS_c, 
         \sample_output.Output_Data[20].sig_132.FeedThruLUT , 
         \sample_output.Output_Data[21].sig_131.FeedThruLUT , 
         \sample_output.dac.n2837 , \sample_output.dac.r_Data_To_Send[2] , 
         \sample_output.dac.r_Data_To_Send[3] , 
         \sample_output.Output_Data[16].sig_134.FeedThruLUT , 
         \sample_output.Output_Data[17].sig_133.FeedThruLUT , 
         \sample_output.Output_Data[17] , 
         \sample_output.dac.r_Data_To_Send[6] , 
         \sample_output.dac.r_Data_To_Send[7] , 
         \Output_Data[8].sig_136.FeedThruLUT , 
         \Output_Data[15].sig_135.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[8] , 
         \sample_output.dac.r_Data_To_Send[15] , \sample_output.n4032 , 
         \sample_output.dac.n9 , Clock_Counter, \SM_DAC_Out[3] , 
         \sample_output.dac.n4_adj_1041 , Sample_Ready, n7_adj_1100, n5269, 
         n8_adj_1101, n2723, n7, \sample_output.n7_c , 
         \sample_output.r_Sample_L[8] , \sample_output.dac.n8612 , 
         \sample_output.dac.n8615 , n24, \sample_output.dac.n7430 , 
         \sample_output.dac.n6190 , n12, n31, Reset_Mult_Scaler_N_201, n7939, 
         n7391, n5_adj_1109, \sample_position.n24 , \sample_position.n22 , 
         \sample_position.n26 , \sample_position.n28 , \sample_position.n30 , 
         \sample_position.n20 , \sample_position.n18 , \sample_position.n16 , 
         \sample_position.n14_adj_1058 , \sample_position.n12_adj_1060 , 
         \sample_position.n10_adj_1063 , \sample_position.n8130 , 
         \sample_position.n8133 , \sample_position.n4628 , 
         \sample_position.n6 , \sample_position.n8136 , 
         \sample_position.n8138 , \sample_position.n8_adj_1067 , 
         \sample_position.n6_adj_1068 , \sample_position.n8_adj_1066 , 
         \sample_position.n4 , n57_2, \sample_position.n8170 , 
         \sample_position.n9_adj_1069 , n17_2, n16, n4, Freq_Too_High, n4548, 
         n6, n4446, \genadder[0].adder.n7931 , \genadder[0].adder.Counter[4] , 
         \genadder[0].adder.n10 , \genadder[0].adder.n14 , \adc.n12 , 
         \adc.n4551 , \adc.n4559 , \adc.n4567 , \adc.Receive_Bit[3] , 
         \adc.n12_adj_1050 , SM_ADC_In, \adc.n6045 , CS_Stable, 
         \adc.n12_adj_1051 , \adc.n8_adj_1055 , \adc.n8 , \adc.n4481 , 
         \adc.n6200 , \adc.n4928 , \adc.n7911 , \adc.n12_adj_1052 , 
         \adc.n12_adj_1053 , \adc.n10 , \adc.n11 , \adc.n4577 , \adc.n4566 , 
         \adc.n9 , \adc.n4599 , \adc.Clock_State , \adc.CS_State_N_586 , 
         \adc.CS_Stable_N_596 , \adc.CS_State , \adc.i_ADC_CS_c , 
         \adc.o_Data_Received_N_577 , \adc.n7 , \adc.n4613 , 
         \adc.n12_adj_1054 , \mult.n14 , \mult.n10 , \mult.n10_adj_1047 , 
         \mult.n11 , \mult.n9 , \mult.n12 , 
         \genadder[1].adder.r_Multiple_8__N_686[6] , 
         \genadder[1].adder.Counter[4] , \genadder[1].adder.n14 , 
         \genadder[1].adder.n10 , \sample_output.dac.n6 , 
         \sample_output.dac.n10 , \sample_output.dac.n8_c , 
         \sample_output.dac.n5986 , \sample_output.dac.Current_Bit[4] , 
         \sample_output.dac.n15 , \sample_output.dac.n7941 , 
         \sample_output.dac.n4 , \sample_output.dac.n14 , 
         \sample_output.dac.n8177 , \sample_output.dac.n8178 , 
         \sample_output.dac.n22 , \sample_output.dac.n7953 , o_DAC_SCK_c, 
         \sample_output.dac.n25[4] , \sample_output.dac.n6847 , 
         \sample_output.dac.n7_c , \sample_output.dac.n4539 , n5005, 
         \sample_output.dac.n7907 , \sample_output.dac.n8_adj_1037 , 
         \sample_output.dac.n4673 , n988, n7587, n7951, \n2660$n0 , n7901, 
         \adc.n370[3] , n7497, n9_adj_1106, n12_adj_1105, n3578, 
         \genadder[0].adder.Counter_4__N_642[4] , \genadder[0].adder.n3127 , 
         \adc.n4578 , \sample_output.dac.n7728 , n3570, n5023, n3559, n2879, 
         n4064, n1018, n4758, \Reset_Mult_Scaler_N_201.sig_031.FeedThruLUT , 
         \sample_output.n1 , \sample_output.n7334 , n5010, \mult.n4469 , 
         \adc.n2 , n5001, n4_adj_1103, n7690, 
         \sample_position.o_Sample_Ready_N_363 , 
         \o_Freq_Too_High_N_366.sig_030.FeedThruLUT , 
         \adc.Data_State.sig_092.FeedThruLUT , \mult.n1522 , GND_net, 
         \Adder_Mult[8].sig_063.FeedThruLUT , \genadder[0].adder.n6058 , 
         \i_ADC_Clock_c.sig_127.FeedThruLUT , \adc.n3537 , 
         \adc.Data_State.sig_086.FeedThruLUT , i_ADC_Data_c, 
         \adc.i_ADC_CS_c.sig_115.FeedThruLUT , \adc.n5962 , 
         \i_ADC_Data_c.sig_125.FeedThruLUT , \adc.n3531 , 
         \adc.i_ADC_CS_c.sig_124.FeedThruLUT , \adc.n3944 , n5016, \adc.n1 , 
         \mult.o_Mult_8__N_700[0] , \ADC_Data[1][8].sig_027.FeedThruLUT , 
         \Harmonic_Scale[8] , \adc.Data_State.sig_080.FeedThruLUT , 
         \Reset_Mult_Scaler_N_201.sig_064.FeedThruLUT , 
         \genadder[1].adder.Counter_4__N_642[4] , \sample_output.n4998 , 
         \sample_output.dac.o_Ready_N_1030 , \sample_output.DAC_Send_N_939 , 
         \sample_output.Output_Data[6].sig_137.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[17] , 
         \sample_output.DAC_Send_N_929 , \sample_output.n7342 , 
         \Adder_Clear_N_197.sig_062.FeedThruLUT , i_Clock_c, 
         \pll_48.lscc_pll_inst.feedback_w ;

  sample_position_SLICE_0 \sample_position.SLICE_0 ( 
    .D1(\sample_position.n9007 ), .C1(\sample_position.n1[10] ), 
    .D0(\sample_position.n6949 ), .C0(\sample_position.n1[9] ), 
    .CIN0(\sample_position.n6949 ), .CIN1(\sample_position.n9007 ), 
    .F0(\sample_position.n87[9] ), .F1(\sample_position.n87[10] ), 
    .COUT1(\sample_position.n6951 ), .COUT0(\sample_position.n9007 ));
  sample_position_SLICE_1 \sample_position.SLICE_1 ( 
    .DI1(\sample_position.n69[8] ), .DI0(\sample_position.n69[7] ), 
    .D1(\sample_position.n9061 ), .C1(\sample_position.n6793 ), 
    .B1(\sample_position.n6792 ), .D0(\sample_position.n6895 ), 
    .C0(\sample_position.n6795 ), .B0(\sample_position.n6794 ), .CE(n4717), 
    .CLK(Main_Clock), .CIN0(\sample_position.n6895 ), 
    .CIN1(\sample_position.n9061 ), 
    .Q0(\sample_position.Accumulated_Frequency[7] ), 
    .Q1(\sample_position.Accumulated_Frequency[8] ), 
    .F0(\sample_position.n69[7] ), .F1(\sample_position.n69[8] ), 
    .COUT1(\sample_position.n6897 ), .COUT0(\sample_position.n9061 ));
  sample_position_SLICE_2 \sample_position.SLICE_2 ( 
    .D1(\sample_position.n9004 ), .C1(\sample_position.n1[8] ), 
    .D0(\sample_position.n6947 ), .C0(\sample_position.n1[7] ), 
    .CIN0(\sample_position.n6947 ), .CIN1(\sample_position.n9004 ), 
    .F0(\sample_position.n87[7] ), .F1(\sample_position.n87[8] ), 
    .COUT1(\sample_position.n6949 ), .COUT0(\sample_position.n9004 ));
  sample_position_SLICE_3 \sample_position.SLICE_3 ( 
    .D1(\sample_position.n9001 ), .C1(\sample_position.n1[6] ), 
    .D0(\sample_position.n6945 ), .C0(\sample_position.n1[5] ), 
    .CIN0(\sample_position.n6945 ), .CIN1(\sample_position.n9001 ), 
    .F0(\sample_position.n87[5] ), .F1(\sample_position.n87[6] ), 
    .COUT1(\sample_position.n6947 ), .COUT0(\sample_position.n9001 ));
  sample_position_SLICE_4 \sample_position.SLICE_4 ( 
    .D1(\sample_position.n8998 ), .C1(\sample_position.n1[4] ), 
    .D0(\sample_position.n6943 ), .C0(\sample_position.n1[3] ), 
    .CIN0(\sample_position.n6943 ), .CIN1(\sample_position.n8998 ), 
    .F0(\sample_position.n87[3] ), .F1(\sample_position.n87[4] ), 
    .COUT1(\sample_position.n6945 ), .COUT0(\sample_position.n8998 ));
  sample_position_SLICE_5 \sample_position.SLICE_5 ( 
    .D1(\sample_position.n8995 ), .C1(\sample_position.n1[2] ), 
    .D0(\sample_position.n6941 ), .C0(\sample_position.n1[1] ), 
    .CIN0(\sample_position.n6941 ), .CIN1(\sample_position.n8995 ), 
    .F0(\sample_position.n87[1] ), .F1(\sample_position.n87[2] ), 
    .COUT1(\sample_position.n6943 ), .COUT0(\sample_position.n8995 ));
  sample_position_SLICE_6 \sample_position.SLICE_6 ( 
    .D1(\sample_position.n8992 ), .C1(\sample_position.n1[0] ), .B1(VCC_net), 
    .CIN1(\sample_position.n8992 ), .F1(\sample_position.n87[0] ), 
    .COUT1(\sample_position.n6941 ), .COUT0(\sample_position.n8992 ));
  sample_position_SLICE_7 \sample_position.SLICE_7 ( 
    .DI1(\sample_position.n69[6] ), .DI0(\sample_position.n69[5] ), 
    .D1(\sample_position.n9058 ), .C1(\sample_position.n6797 ), 
    .B1(\sample_position.n6796 ), .D0(\sample_position.n6893 ), 
    .C0(\sample_position.n6799 ), .B0(\sample_position.n6798 ), .CE(n4717), 
    .CLK(Main_Clock), .CIN0(\sample_position.n6893 ), 
    .CIN1(\sample_position.n9058 ), 
    .Q0(\sample_position.Accumulated_Frequency[5] ), 
    .Q1(\sample_position.Accumulated_Frequency[6] ), 
    .F0(\sample_position.n69[5] ), .F1(\sample_position.n69[6] ), 
    .COUT1(\sample_position.n6895 ), .COUT0(\sample_position.n9058 ));
  sample_position_SLICE_8 \sample_position.SLICE_8 ( 
    .DI1(\sample_position.n69[4] ), .DI0(\sample_position.n69[3] ), 
    .D1(\sample_position.n9055 ), .C1(\sample_position.n6801 ), 
    .B1(\sample_position.n6800 ), .D0(\sample_position.n6891 ), 
    .C0(\sample_position.n6803 ), .B0(\sample_position.n6802 ), .CE(n4717), 
    .CLK(Main_Clock), .CIN0(\sample_position.n6891 ), 
    .CIN1(\sample_position.n9055 ), 
    .Q0(\sample_position.Accumulated_Frequency[3] ), 
    .Q1(\sample_position.Accumulated_Frequency[4] ), 
    .F0(\sample_position.n69[3] ), .F1(\sample_position.n69[4] ), 
    .COUT1(\sample_position.n6893 ), .COUT0(\sample_position.n9055 ));
  sample_position_SLICE_9 \sample_position.SLICE_9 ( 
    .DI1(\sample_position.n69[2] ), .DI0(\sample_position.n69[1] ), 
    .D1(\sample_position.n9052 ), .C1(\sample_position.n6805 ), 
    .B1(\sample_position.n6804 ), .D0(\sample_position.n6889 ), 
    .C0(\sample_position.n6807 ), .B0(\sample_position.n6806 ), .CE(n4717), 
    .CLK(Main_Clock), .CIN0(\sample_position.n6889 ), 
    .CIN1(\sample_position.n9052 ), 
    .Q0(\sample_position.Accumulated_Frequency[1] ), 
    .Q1(\sample_position.Accumulated_Frequency[2] ), 
    .F0(\sample_position.n69[1] ), .F1(\sample_position.n69[2] ), 
    .COUT1(\sample_position.n6891 ), .COUT0(\sample_position.n9052 ));
  sample_position_SLICE_10 \sample_position.SLICE_10 ( 
    .DI1(\sample_position.n69[0] ), .D1(\sample_position.n9049 ), 
    .C1(\sample_position.n6809 ), .B1(\sample_position.n6808 ), .CE(n4717), 
    .CLK(Main_Clock), .CIN1(\sample_position.n9049 ), 
    .Q1(\sample_position.Accumulated_Frequency[0] ), 
    .F1(\sample_position.n69[0] ), .COUT1(\sample_position.n6889 ), 
    .COUT0(\sample_position.n9049 ));
  sample_position_SLICE_11 \sample_position.SLICE_11 ( 
    .DI0(\sample_position.n69_adj_1099[15] ), .D1(\sample_position.n9124 ), 
    .D0(\sample_position.n6920 ), 
    .C0(\sample_position.Accumulated_Freq_Offset[15] ), .B0(\Freq_Scale[15] ), 
    .CE(n4716), .LSR(\sample_position.n4940 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n6920 ), .CIN1(\sample_position.n9124 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .F0(\sample_position.n69_adj_1099[15] ), .COUT0(\sample_position.n9124 ));
  sample_position_SLICE_12 \sample_position.SLICE_12 ( 
    .DI1(\sample_position.n69_adj_1099[14] ), 
    .DI0(\sample_position.n69_adj_1099[13] ), .D1(\sample_position.n9121 ), 
    .C1(\sample_position.Accumulated_Freq_Offset[14] ), .B1(\Freq_Scale[14] ), 
    .D0(\sample_position.n6918 ), 
    .C0(\sample_position.Accumulated_Freq_Offset[13] ), .B0(\Freq_Scale[13] ), 
    .CE(n4716), .LSR(\sample_position.n4940 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n6918 ), .CIN1(\sample_position.n9121 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .F0(\sample_position.n69_adj_1099[13] ), 
    .F1(\sample_position.n69_adj_1099[14] ), .COUT1(\sample_position.n6920 ), 
    .COUT0(\sample_position.n9121 ));
  sample_position_SLICE_13 \sample_position.SLICE_13 ( 
    .DI1(\sample_position.n69_adj_1099[12] ), 
    .DI0(\sample_position.n69_adj_1099[11] ), .D1(\sample_position.n9118 ), 
    .C1(\sample_position.Accumulated_Freq_Offset[12] ), .B1(\Freq_Scale[12] ), 
    .D0(\sample_position.n6916 ), 
    .C0(\sample_position.Accumulated_Freq_Offset[11] ), .B0(\Freq_Scale[11] ), 
    .CE(n4716), .LSR(\sample_position.n4940 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n6916 ), .CIN1(\sample_position.n9118 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .F0(\sample_position.n69_adj_1099[11] ), 
    .F1(\sample_position.n69_adj_1099[12] ), .COUT1(\sample_position.n6918 ), 
    .COUT0(\sample_position.n9118 ));
  sample_position_SLICE_14 \sample_position.SLICE_14 ( 
    .DI1(\sample_position.n69_adj_1099[10] ), 
    .DI0(\sample_position.n69_adj_1099[9] ), .D1(\sample_position.n9115 ), 
    .C1(\sample_position.Accumulated_Freq_Offset[10] ), .B1(\Freq_Scale[10] ), 
    .D0(\sample_position.n6914 ), 
    .C0(\sample_position.Accumulated_Freq_Offset[9] ), .B0(\Freq_Scale[9] ), 
    .CE(n4716), .LSR(\sample_position.n4940 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n6914 ), .CIN1(\sample_position.n9115 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .F0(\sample_position.n69_adj_1099[9] ), 
    .F1(\sample_position.n69_adj_1099[10] ), .COUT1(\sample_position.n6916 ), 
    .COUT0(\sample_position.n9115 ));
  sample_position_SLICE_15 \sample_position.SLICE_15 ( 
    .DI1(\sample_position.n69_adj_1099[8] ), 
    .DI0(\sample_position.n69_adj_1099[7] ), .D1(\sample_position.n9112 ), 
    .C1(\sample_position.Accumulated_Freq_Offset[8] ), .B1(\Freq_Scale[8] ), 
    .D0(\sample_position.n6912 ), 
    .C0(\sample_position.Accumulated_Freq_Offset[7] ), .B0(\Freq_Scale[7] ), 
    .CE(n4716), .LSR(\sample_position.n4940 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n6912 ), .CIN1(\sample_position.n9112 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[8] ), 
    .F0(\sample_position.n69_adj_1099[7] ), 
    .F1(\sample_position.n69_adj_1099[8] ), .COUT1(\sample_position.n6914 ), 
    .COUT0(\sample_position.n9112 ));
  sample_position_SLICE_16 \sample_position.SLICE_16 ( 
    .DI1(\sample_position.n69_adj_1099[6] ), 
    .DI0(\sample_position.n69_adj_1099[5] ), .D1(\sample_position.n9109 ), 
    .C1(\sample_position.Accumulated_Freq_Offset[6] ), .B1(\Freq_Scale[6] ), 
    .D0(\sample_position.n6910 ), 
    .C0(\sample_position.Accumulated_Freq_Offset[5] ), .B0(\Freq_Scale[5] ), 
    .CE(n4716), .LSR(\sample_position.n4940 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n6910 ), .CIN1(\sample_position.n9109 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .F0(\sample_position.n69_adj_1099[5] ), 
    .F1(\sample_position.n69_adj_1099[6] ), .COUT1(\sample_position.n6912 ), 
    .COUT0(\sample_position.n9109 ));
  sample_position_SLICE_17 \sample_position.SLICE_17 ( 
    .DI1(\sample_position.n69_adj_1099[4] ), 
    .DI0(\sample_position.n69_adj_1099[3] ), .D1(\sample_position.n9106 ), 
    .C1(\sample_position.Accumulated_Freq_Offset[4] ), .B1(\Freq_Scale[4] ), 
    .D0(\sample_position.n6908 ), 
    .C0(\sample_position.Accumulated_Freq_Offset[3] ), .B0(\Freq_Scale[3] ), 
    .CE(n4716), .LSR(\sample_position.n4940 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n6908 ), .CIN1(\sample_position.n9106 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .F0(\sample_position.n69_adj_1099[3] ), 
    .F1(\sample_position.n69_adj_1099[4] ), .COUT1(\sample_position.n6910 ), 
    .COUT0(\sample_position.n9106 ));
  sample_position_SLICE_18 \sample_position.SLICE_18 ( 
    .DI1(\sample_position.n69_adj_1099[2] ), 
    .DI0(\sample_position.n69_adj_1099[1] ), .D1(\sample_position.n9103 ), 
    .C1(\sample_position.Accumulated_Freq_Offset[2] ), .B1(\Freq_Scale[2] ), 
    .D0(\sample_position.n6906 ), 
    .C0(\sample_position.Accumulated_Freq_Offset[1] ), .B0(\Freq_Scale[1] ), 
    .CE(n4716), .LSR(\sample_position.n4940 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n6906 ), .CIN1(\sample_position.n9103 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .F0(\sample_position.n69_adj_1099[1] ), 
    .F1(\sample_position.n69_adj_1099[2] ), .COUT1(\sample_position.n6908 ), 
    .COUT0(\sample_position.n9103 ));
  sample_position_SLICE_19 \sample_position.SLICE_19 ( 
    .DI1(\sample_position.n69_adj_1099[0] ), .D1(\sample_position.n9100 ), 
    .C1(\sample_position.Accumulated_Freq_Offset[0] ), .B1(\Freq_Scale[0] ), 
    .CE(n4716), .LSR(\sample_position.n4940 ), .CLK(Main_Clock), 
    .CIN1(\sample_position.n9100 ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[0] ), 
    .F1(\sample_position.n69_adj_1099[0] ), .COUT1(\sample_position.n6906 ), 
    .COUT0(\sample_position.n9100 ));
  sample_position_SLICE_20 \sample_position.SLICE_20 ( 
    .DI0(\sample_position.n69[15] ), .D1(\sample_position.n9073 ), 
    .D0(\sample_position.n6903 ), .C0(\sample_position.n6779 ), 
    .B0(\sample_position.n6778 ), .CE(n4717), .CLK(Main_Clock), 
    .CIN0(\sample_position.n6903 ), .CIN1(\sample_position.n9073 ), 
    .Q0(\sample_position.Accumulated_Frequency[15] ), 
    .F0(\sample_position.n69[15] ), .COUT0(\sample_position.n9073 ));
  sample_position_SLICE_21 \sample_position.SLICE_21 ( 
    .DI1(\sample_position.n69[14] ), .DI0(\sample_position.n69[13] ), 
    .D1(\sample_position.n9070 ), .C1(\sample_position.n6781 ), 
    .B1(\sample_position.n6780 ), .D0(\sample_position.n6901 ), 
    .C0(\sample_position.n6783 ), .B0(\sample_position.n6782 ), .CE(n4717), 
    .CLK(Main_Clock), .CIN0(\sample_position.n6901 ), 
    .CIN1(\sample_position.n9070 ), 
    .Q0(\sample_position.Accumulated_Frequency[13] ), 
    .Q1(\sample_position.Accumulated_Frequency[14] ), 
    .F0(\sample_position.n69[13] ), .F1(\sample_position.n69[14] ), 
    .COUT1(\sample_position.n6903 ), .COUT0(\sample_position.n9070 ));
  sample_position_SLICE_22 \sample_position.SLICE_22 ( 
    .DI1(\sample_position.n69[12] ), .DI0(\sample_position.n69[11] ), 
    .D1(\sample_position.n9067 ), .C1(\sample_position.n6785 ), 
    .B1(\sample_position.n6784 ), .D0(\sample_position.n6899 ), 
    .C0(\sample_position.n6787 ), .B0(\sample_position.n6786 ), .CE(n4717), 
    .CLK(Main_Clock), .CIN0(\sample_position.n6899 ), 
    .CIN1(\sample_position.n9067 ), 
    .Q0(\sample_position.Accumulated_Frequency[11] ), 
    .Q1(\sample_position.Accumulated_Frequency[12] ), 
    .F0(\sample_position.n69[11] ), .F1(\sample_position.n69[12] ), 
    .COUT1(\sample_position.n6901 ), .COUT0(\sample_position.n9067 ));
  sample_position_SLICE_23 \sample_position.SLICE_23 ( 
    .DI1(\sample_position.n69[10] ), .DI0(\sample_position.n69[9] ), 
    .D1(\sample_position.n9064 ), .C1(\sample_position.n6789 ), 
    .B1(\sample_position.n6788 ), .D0(\sample_position.n6897 ), 
    .C0(\sample_position.n6791 ), .B0(\sample_position.n6790 ), .CE(n4717), 
    .CLK(Main_Clock), .CIN0(\sample_position.n6897 ), 
    .CIN1(\sample_position.n9064 ), 
    .Q0(\sample_position.Accumulated_Frequency[9] ), 
    .Q1(\sample_position.Accumulated_Frequency[10] ), 
    .F0(\sample_position.n69[9] ), .F1(\sample_position.n69[10] ), 
    .COUT1(\sample_position.n6899 ), .COUT0(\sample_position.n9064 ));
  sample_position_SLICE_24 \sample_position.SLICE_24 ( 
    .D1(\sample_position.n9016 ), .D0(\sample_position.n6955 ), 
    .C0(\sample_position.n1[15] ), .CIN0(\sample_position.n6955 ), 
    .CIN1(\sample_position.n9016 ), .F0(\sample_position.n87[15] ), 
    .COUT0(\sample_position.n9016 ));
  sample_position_SLICE_25 \sample_position.SLICE_25 ( 
    .D1(\sample_position.n9013 ), .C1(\sample_position.n1[14] ), 
    .D0(\sample_position.n6953 ), .C0(\sample_position.n1[13] ), 
    .CIN0(\sample_position.n6953 ), .CIN1(\sample_position.n9013 ), 
    .F0(\sample_position.n87[13] ), .F1(\sample_position.n87[14] ), 
    .COUT1(\sample_position.n6955 ), .COUT0(\sample_position.n9013 ));
  sample_position_SLICE_26 \sample_position.SLICE_26 ( 
    .D1(\sample_position.n9010 ), .C1(\sample_position.n1[12] ), 
    .D0(\sample_position.n6951 ), .C0(\sample_position.n1[11] ), 
    .CIN0(\sample_position.n6951 ), .CIN1(\sample_position.n9010 ), 
    .F0(\sample_position.n87[11] ), .F1(\sample_position.n87[12] ), 
    .COUT1(\sample_position.n6953 ), .COUT0(\sample_position.n9010 ));
  SLICE_27 SLICE_27( .DI1(n75), .DI0(n76), .D1(n9088), .C1(\Sample_Timer[10] ), 
    .D0(n6880), .C0(\Sample_Timer[9] ), .LSR(n2660), .CLK(Main_Clock), 
    .CIN0(n6880), .CIN1(n9088), .Q0(\Sample_Timer[9] ), 
    .Q1(\Sample_Timer[10] ), .F0(n76), .F1(n75), .COUT1(n6882), .COUT0(n9088));
  SLICE_28 SLICE_28( .DI1(n83), .DI0(n84), .D1(n9076), .C1(\Sample_Timer[2] ), 
    .D0(n6872), .C0(\Sample_Timer[1] ), .LSR(n2660), .CLK(Main_Clock), 
    .CIN0(n6872), .CIN1(n9076), .Q0(\Sample_Timer[1] ), .Q1(\Sample_Timer[2] ), 
    .F0(n84), .F1(n83), .COUT1(n6874), .COUT0(n9076));
  SLICE_29 SLICE_29( .DI1(n71), .DI0(n72), .D1(n9094), .C1(\Sample_Timer[14] ), 
    .D0(n6884), .C0(\Sample_Timer[13] ), .LSR(n2660), .CLK(Main_Clock), 
    .CIN0(n6884), .CIN1(n9094), .Q0(\Sample_Timer[13] ), 
    .Q1(\Sample_Timer[14] ), .F0(n72), .F1(n71), .COUT1(n6886), .COUT0(n9094));
  SLICE_30 SLICE_30( .DI1(n81), .DI0(n82), .D1(n9079), .C1(\Sample_Timer[4] ), 
    .D0(n6874), .C0(\Sample_Timer[3] ), .LSR(n2660), .CLK(Main_Clock), 
    .CIN0(n6874), .CIN1(n9079), .Q0(\Sample_Timer[3] ), .Q1(\Sample_Timer[4] ), 
    .F0(n82), .F1(n81), .COUT1(n6876), .COUT0(n9079));
  SLICE_31 SLICE_31( .DI1(n85), .D1(n9046), .C1(\Sample_Timer[0] ), 
    .B1(VCC_net), .LSR(n2660), .CLK(Main_Clock), .CIN1(n9046), 
    .Q1(\Sample_Timer[0] ), .F1(n85), .COUT1(n6872), .COUT0(n9046));
  SLICE_32 SLICE_32( .DI1(n77), .DI0(n78), .D1(n9085), .C1(\Sample_Timer[8] ), 
    .D0(n6878), .C0(\Sample_Timer[7] ), .LSR(n2660), .CLK(Main_Clock), 
    .CIN0(n6878), .CIN1(n9085), .Q0(\Sample_Timer[7] ), .Q1(\Sample_Timer[8] ), 
    .F0(n78), .F1(n77), .COUT1(n6880), .COUT0(n9085));
  SLICE_33 SLICE_33( .DI0(n38), .D1(n9031), .D0(n6929), .C0(n9), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(n6929), .CIN1(n9031), 
    .Q0(\Harmonic[7] ), .F0(n38), .COUT0(n9031));
  SLICE_34 SLICE_34( .DI1(n39), .DI0(n40), .D1(n9028), .C1(n10), .D0(n6927), 
    .C0(n11), .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(n6927), 
    .CIN1(n9028), .Q0(\Harmonic[5] ), .Q1(\Harmonic[6] ), .F0(n40), .F1(n39), 
    .COUT1(n6929), .COUT0(n9028));
  SLICE_35 SLICE_35( .DI1(n41), .DI0(n42), .D1(n9025), .C1(n12_adj_1108), 
    .D0(n6925), .C0(n13), .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(n6925), 
    .CIN1(n9025), .Q0(\Harmonic[3] ), .Q1(\Harmonic[4] ), .F0(n42), .F1(n41), 
    .COUT1(n6927), .COUT0(n9025));
  SLICE_36 SLICE_36( .DI1(n43), .DI0(n44), .D1(n9022), .C1(n14), .D0(n6923), 
    .C0(n15), .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(n6923), 
    .CIN1(n9022), .Q0(\Harmonic[1] ), .Q1(\Harmonic[2] ), .F0(n44), .F1(n43), 
    .COUT1(n6925), .COUT0(n9022));
  SLICE_37 SLICE_37( .DI1(n45), .D1(n9019), .C1(n16_adj_1110), .B1(n977), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN1(n9019), .Q1(\Harmonic[0] ), 
    .F1(n45), .COUT1(n6923), .COUT0(n9019));
  SLICE_38 SLICE_38( .DI1(n73), .DI0(n74), .D1(n9091), .C1(\Sample_Timer[12] ), 
    .D0(n6882), .C0(\Sample_Timer[11] ), .LSR(n2660), .CLK(Main_Clock), 
    .CIN0(n6882), .CIN1(n9091), .Q0(\Sample_Timer[11] ), 
    .Q1(\Sample_Timer[12] ), .F0(n74), .F1(n73), .COUT1(n6884), .COUT0(n9091));
  SLICE_39 SLICE_39( .DI0(n70_adj_1104), .D1(n9097), .D0(n6886), 
    .C0(\Sample_Timer[15] ), .LSR(n2660), .CLK(Main_Clock), .CIN0(n6886), 
    .CIN1(n9097), .Q0(\Sample_Timer[15] ), .F0(n70_adj_1104), .COUT0(n9097));
  SLICE_40 SLICE_40( .DI1(n79), .DI0(n80), .D1(n9082), .C1(\Sample_Timer[6] ), 
    .D0(n6876), .C0(\Sample_Timer[5] ), .LSR(n2660), .CLK(Main_Clock), 
    .CIN0(n6876), .CIN1(n9082), .Q0(\Sample_Timer[5] ), .Q1(\Sample_Timer[6] ), 
    .F0(n80), .F1(n79), .COUT1(n6878), .COUT0(n9082));
  mult_SLICE_41 \mult.SLICE_41 ( .DI0(\mult.n47[7] ), .D1(\mult.n9043 ), 
    .D0(\mult.n6938 ), .B0(\mult.Comb_Counter[7] ), .CE(n2875), 
    .LSR(\mult.n2914 ), .CLK(Main_Clock), .CIN0(\mult.n6938 ), 
    .CIN1(\mult.n9043 ), .Q0(\mult.Comb_Counter[7] ), .F0(\mult.n47[7] ), 
    .COUT0(\mult.n9043 ));
  mult_SLICE_42 \mult.SLICE_42 ( .DI1(\mult.n47[6] ), .DI0(\mult.n47[5] ), 
    .D1(\mult.n9040 ), .B1(\mult.Comb_Counter[6] ), .D0(\mult.n6936 ), 
    .B0(\mult.Comb_Counter[5] ), .CE(n2875), .LSR(\mult.n2914 ), 
    .CLK(Main_Clock), .CIN0(\mult.n6936 ), .CIN1(\mult.n9040 ), 
    .Q0(\mult.Comb_Counter[5] ), .Q1(\mult.Comb_Counter[6] ), 
    .F0(\mult.n47[5] ), .F1(\mult.n47[6] ), .COUT1(\mult.n6938 ), 
    .COUT0(\mult.n9040 ));
  mult_SLICE_43 \mult.SLICE_43 ( .DI1(\mult.n47[4] ), .DI0(\mult.n47[3] ), 
    .D1(\mult.n9037 ), .B1(\mult.Comb_Counter[4] ), .D0(\mult.n6934 ), 
    .B0(\mult.Comb_Counter[3] ), .CE(n2875), .LSR(\mult.n2914 ), 
    .CLK(Main_Clock), .CIN0(\mult.n6934 ), .CIN1(\mult.n9037 ), 
    .Q0(\mult.Comb_Counter[3] ), .Q1(\mult.Comb_Counter[4] ), 
    .F0(\mult.n47[3] ), .F1(\mult.n47[4] ), .COUT1(\mult.n6936 ), 
    .COUT0(\mult.n9037 ));
  mult_SLICE_44 \mult.SLICE_44 ( .DI1(\mult.n47[2] ), .DI0(\mult.n47[1] ), 
    .D1(\mult.n9034 ), .B1(\mult.Comb_Counter[2] ), .D0(\mult.n6932 ), 
    .B0(\mult.Comb_Counter[1] ), .CE(n2875), .LSR(\mult.n2914 ), 
    .CLK(Main_Clock), .CIN0(\mult.n6932 ), .CIN1(\mult.n9034 ), 
    .Q0(\mult.Comb_Counter[1] ), .Q1(\mult.Comb_Counter[2] ), 
    .F0(\mult.n47[1] ), .F1(\mult.n47[2] ), .COUT1(\mult.n6934 ), 
    .COUT0(\mult.n9034 ));
  mult_SLICE_45 \mult.SLICE_45 ( .DI1(\mult.n47[0] ), .D1(\mult.n8974 ), 
    .C1(VCC_net), .B1(\mult.Comb_Counter[0] ), .CE(n2875), .LSR(\mult.n2914 ), 
    .CLK(Main_Clock), .CIN1(\mult.n8974 ), .Q1(\mult.Comb_Counter[0] ), 
    .F1(\mult.n47[0] ), .COUT1(\mult.n6932 ), .COUT0(\mult.n8974 ));
  mult_SLICE_46 \mult.SLICE_46 ( .D1(\mult.n8989 ), .D0(\mult.n6964 ), 
    .C0(\mult.n1[8] ), .B0(\Adder_Mult[8] ), .CIN0(\mult.n6964 ), 
    .CIN1(\mult.n8989 ), .F0(\mult.n57[9] ), .F1(\mult.cout ), 
    .COUT0(\mult.n8989 ));
  mult_SLICE_47 \mult.SLICE_47 ( .D1(\mult.n8986 ), .C1(\mult.n1[7] ), 
    .B1(\Adder_Mult[7] ), .D0(\mult.n6962 ), .C0(\mult.n1[6] ), 
    .B0(\Adder_Mult[6] ), .CIN0(\mult.n6962 ), .CIN1(\mult.n8986 ), 
    .F0(\mult.n57[7] ), .F1(\mult.n57[8] ), .COUT1(\mult.n6964 ), 
    .COUT0(\mult.n8986 ));
  mult_SLICE_48 \mult.SLICE_48 ( .D1(\mult.n8983 ), .C1(\mult.n1[5] ), 
    .B1(\Adder_Mult[5] ), .D0(\mult.n6960 ), .C0(\mult.n1[4] ), 
    .B0(\Adder_Mult[4] ), .CIN0(\mult.n6960 ), .CIN1(\mult.n8983 ), 
    .F0(\mult.n57[5] ), .F1(\mult.n57[6] ), .COUT1(\mult.n6962 ), 
    .COUT0(\mult.n8983 ));
  mult_SLICE_49 \mult.SLICE_49 ( .D1(\mult.n8980 ), .C1(\mult.n1[3] ), 
    .B1(\Adder_Mult[3] ), .D0(\mult.n6958 ), .C0(\mult.n1[2] ), 
    .B0(\Adder_Mult[2] ), .CIN0(\mult.n6958 ), .CIN1(\mult.n8980 ), 
    .F0(\mult.n57[3] ), .F1(\mult.n57[4] ), .COUT1(\mult.n6960 ), 
    .COUT0(\mult.n8980 ));
  mult_SLICE_50 \mult.SLICE_50 ( .D1(\mult.n8977 ), .C1(\mult.n1[1] ), 
    .B1(\Adder_Mult[1] ), .D0(VCC_net), .C0(\mult.n1[0] ), 
    .B0(\mult.Adder_Mult[0]_2 ), .CIN1(\mult.n8977 ), .F0(\mult.n57[1] ), 
    .F1(\mult.n57[2] ), .COUT1(\mult.n6958 ), .COUT0(\mult.n8977 ));
  SLICE_51 SLICE_51( .DI1(\ADC_Data[3][1].sig_053.FeedThruLUT ), 
    .DI0(\ADC_Data[3][0].sig_000.FeedThruLUT ), .A1(\ADC_Data[3][1] ), 
    .B0(\ADC_Data[3][0] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[0] ), 
    .Q1(\Freq_Scale[1] ), .F0(\ADC_Data[3][0].sig_000.FeedThruLUT ), 
    .F1(\ADC_Data[3][1].sig_053.FeedThruLUT ));
  SLICE_52 SLICE_52( .DI1(\ADC_Data[4][1].sig_038.FeedThruLUT ), 
    .DI0(\ADC_Data[4][0].sig_001.FeedThruLUT ), .D1(\ADC_Data[4][1] ), 
    .D0(\ADC_Data[4][0] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[0] ), 
    .Q1(\Comb_Interval[1] ), .F0(\ADC_Data[4][0].sig_001.FeedThruLUT ), 
    .F1(\ADC_Data[4][1].sig_038.FeedThruLUT ));
  SLICE_53 SLICE_53( .DI0(test_N_190), .B0(test_c), .CLK(ADC_Data_Received), 
    .Q0(test_c), .F0(test_N_190));
  SLICE_54 SLICE_54( .DI1(n3572), 
    .DI0(\Adder_Clear_N_197.sig_002.FeedThruLUT ), .D1(n982), .C1(n66), 
    .B1(n308), .A1(n977), .A0(Adder_Clear_N_197), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(n979), .Q1(n982), 
    .F0(\Adder_Clear_N_197.sig_002.FeedThruLUT ), .F1(n3572));
  SLICE_55 SLICE_55( .DI1(n1028), .DI0(n3566), .D1(n983), .C1(Mult_Ready), 
    .B1(Comb_Muted), .A1(n978), .D0(Mult_Ready), .C0(n987), .B0(n978), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(n978), .Q1(n977), .F0(n3566), 
    .F1(n1028));
  SLICE_57 SLICE_57( .DI1(n1008), .DI0(n1014), .B1(n66), .A1(n977), .C0(n278), 
    .A0(\Adder_Start_1__N_111[0] ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(n983), .Q1(n987), .F0(n1014), .F1(n1008));
  SLICE_58 SLICE_58( .DI1(\ADC_Data[1][1].sig_020.FeedThruLUT ), 
    .DI0(\ADC_Data[1][0].sig_003.FeedThruLUT ), .D1(\ADC_Data[1][1] ), 
    .A0(\ADC_Data[1][0] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[0] ), 
    .Q1(\Harmonic_Scale[1] ), .F0(\ADC_Data[1][0].sig_003.FeedThruLUT ), 
    .F1(\ADC_Data[1][1].sig_020.FeedThruLUT ));
  SLICE_59 SLICE_59( .DI1(\ADC_Data[0][1].sig_005.FeedThruLUT ), 
    .DI0(\ADC_Data[0][0].sig_004.FeedThruLUT ), .B1(\ADC_Data[0][1] ), 
    .D0(\ADC_Data[0][0] ), .CLK(ADC_Data_Received), .Q0(\Frequency[0] ), 
    .Q1(\Frequency[1] ), .F0(\ADC_Data[0][0].sig_004.FeedThruLUT ), 
    .F1(\ADC_Data[0][1].sig_005.FeedThruLUT ));
  SLICE_61 SLICE_61( .DI1(\ADC_Data[0][3].sig_007.FeedThruLUT ), 
    .DI0(\ADC_Data[0][2].sig_006.FeedThruLUT ), .B1(\ADC_Data[0][3] ), 
    .B0(\ADC_Data[0][2] ), .CLK(ADC_Data_Received), .Q0(\Frequency[2] ), 
    .Q1(\Frequency[3] ), .F0(\ADC_Data[0][2].sig_006.FeedThruLUT ), 
    .F1(\ADC_Data[0][3].sig_007.FeedThruLUT ));
  SLICE_63 SLICE_63( .DI1(\ADC_Data[0][5].sig_009.FeedThruLUT ), 
    .DI0(\ADC_Data[0][4].sig_008.FeedThruLUT ), .C1(\ADC_Data[0][5] ), 
    .C0(\ADC_Data[0][4] ), .CLK(ADC_Data_Received), .Q0(\Frequency[4] ), 
    .Q1(\Frequency[5] ), .F0(\ADC_Data[0][4].sig_008.FeedThruLUT ), 
    .F1(\ADC_Data[0][5].sig_009.FeedThruLUT ));
  SLICE_65 SLICE_65( .DI1(\ADC_Data[0][7].sig_011.FeedThruLUT ), 
    .DI0(\ADC_Data[0][6].sig_010.FeedThruLUT ), .C1(\ADC_Data[0][7] ), 
    .B0(\ADC_Data[0][6] ), .CLK(ADC_Data_Received), .Q0(\Frequency[6] ), 
    .Q1(\Frequency[7] ), .F0(\ADC_Data[0][6].sig_010.FeedThruLUT ), 
    .F1(\ADC_Data[0][7].sig_011.FeedThruLUT ));
  SLICE_67 SLICE_67( .DI1(\ADC_Data[0][9].sig_013.FeedThruLUT ), 
    .DI0(\ADC_Data[0][8].sig_012.FeedThruLUT ), .B1(\ADC_Data[0][9] ), 
    .C0(\ADC_Data[0][8] ), .CLK(ADC_Data_Received), .Q0(\Frequency[8] ), 
    .Q1(\Frequency[9] ), .F0(\ADC_Data[0][8].sig_012.FeedThruLUT ), 
    .F1(\ADC_Data[0][9].sig_013.FeedThruLUT ));
  SLICE_69 SLICE_69( .DI1(\ADC_Data[0][11].sig_015.FeedThruLUT ), 
    .DI0(\ADC_Data[0][10].sig_014.FeedThruLUT ), .C1(\ADC_Data[0][11] ), 
    .A0(\ADC_Data[0][10] ), .CLK(ADC_Data_Received), .Q0(\Frequency[10] ), 
    .Q1(\Frequency[11] ), .F0(\ADC_Data[0][10].sig_014.FeedThruLUT ), 
    .F1(\ADC_Data[0][11].sig_015.FeedThruLUT ));
  SLICE_71 SLICE_71( .DI1(\ADC_Data[0][13].sig_017.FeedThruLUT ), 
    .DI0(\ADC_Data[0][12].sig_016.FeedThruLUT ), .C1(\ADC_Data[0][13] ), 
    .A0(\ADC_Data[0][12] ), .CLK(ADC_Data_Received), .Q0(\Frequency[12] ), 
    .Q1(\Frequency[13] ), .F0(\ADC_Data[0][12].sig_016.FeedThruLUT ), 
    .F1(\ADC_Data[0][13].sig_017.FeedThruLUT ));
  SLICE_73 SLICE_73( .DI1(\ADC_Data[0][15].sig_019.FeedThruLUT ), 
    .DI0(\ADC_Data[0][14].sig_018.FeedThruLUT ), .B1(\ADC_Data[0][15] ), 
    .A0(\ADC_Data[0][14] ), .CLK(ADC_Data_Received), .Q0(\Frequency[14] ), 
    .Q1(\Frequency[15] ), .F0(\ADC_Data[0][14].sig_018.FeedThruLUT ), 
    .F1(\ADC_Data[0][15].sig_019.FeedThruLUT ));
  SLICE_76 SLICE_76( .DI1(\ADC_Data[1][3].sig_022.FeedThruLUT ), 
    .DI0(\ADC_Data[1][2].sig_021.FeedThruLUT ), .B1(\ADC_Data[1][3] ), 
    .B0(\ADC_Data[1][2] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[2] ), 
    .Q1(\Harmonic_Scale[3] ), .F0(\ADC_Data[1][2].sig_021.FeedThruLUT ), 
    .F1(\ADC_Data[1][3].sig_022.FeedThruLUT ));
  SLICE_78 SLICE_78( .DI1(\ADC_Data[1][5].sig_024.FeedThruLUT ), 
    .DI0(\ADC_Data[1][4].sig_023.FeedThruLUT ), .D1(\ADC_Data[1][5] ), 
    .B0(\ADC_Data[1][4] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[4] ), 
    .Q1(\Harmonic_Scale[5] ), .F0(\ADC_Data[1][4].sig_023.FeedThruLUT ), 
    .F1(\ADC_Data[1][5].sig_024.FeedThruLUT ));
  SLICE_80 SLICE_80( .DI1(\ADC_Data[1][7].sig_026.FeedThruLUT ), 
    .DI0(\ADC_Data[1][6].sig_025.FeedThruLUT ), .B1(\ADC_Data[1][7] ), 
    .D0(\ADC_Data[1][6] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[6] ), 
    .Q1(\Harmonic_Scale[7] ), .F0(\ADC_Data[1][6].sig_025.FeedThruLUT ), 
    .F1(\ADC_Data[1][7].sig_026.FeedThruLUT ));
  sample_position_SLICE_86 \sample_position.SLICE_86 ( 
    .DI1(\n1278.sig_029.FeedThruLUT ), 
    .DI0(\sample_position.n1272[1].sig_028.FeedThruLUT ), .C1(n1278), 
    .A0(\sample_position.n1272[1] ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(n1278), .Q1(n1277), 
    .F0(\sample_position.n1272[1].sig_028.FeedThruLUT ), 
    .F1(\n1278.sig_029.FeedThruLUT ));
  sample_position_SLICE_89 \sample_position.SLICE_89 ( 
    .DI1(\sample_position.n105[1] ), .DI0(\sample_position.n105[0] ), .D1(n70), 
    .C1(\Harmonic[0] ), .B1(\sample_position.Accumulated_Freq_Offset[1] ), 
    .A1(\sample_position.n87[1] ), .D0(n70), .C0(\Harmonic[0] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[0] ), 
    .A0(\sample_position.n87[0] ), .CE(\sample_position.n6094 ), 
    .LSR(\sample_position.n2897 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Offset[0] ), 
    .Q1(\sample_position.Accumulated_Offset[1] ), 
    .F0(\sample_position.n105[0] ), .F1(\sample_position.n105[1] ));
  sample_position_SLICE_90 \sample_position.SLICE_90 ( 
    .DI1(\sample_position.n1294 ), .DI0(\sample_position.n4478 ), .D1(n1280), 
    .C1(o_Freq_Too_High_N_366), .B1(Next_Sample), .A1(n5279), 
    .D0(o_Freq_Too_High_N_366), .B0(n5279), .A0(Next_Sample), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(n1280), 
    .Q1(\sample_position.n1272[1] ), .F0(\sample_position.n4478 ), 
    .F1(\sample_position.n1294 ));
  sample_position_SLICE_91 \sample_position.SLICE_91 ( 
    .DI1(\sample_position.n105[14] ), .DI0(\sample_position.n105[15] ), 
    .D1(n70), .C1(\sample_position.n87[14] ), .B1(\Harmonic[0] ), 
    .A1(\sample_position.Accumulated_Freq_Offset[14] ), .D0(n70), 
    .C0(\sample_position.n87[15] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[15] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6094 ), .LSR(\sample_position.n2897 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[15] ), 
    .Q1(\sample_position.Accumulated_Offset[14] ), 
    .F0(\sample_position.n105[15] ), .F1(\sample_position.n105[14] ));
  sample_position_SLICE_93 \sample_position.SLICE_93 ( 
    .DI1(\sample_position.n105[12] ), .DI0(\sample_position.n105[13] ), 
    .D1(n70), .C1(\sample_position.n87[12] ), .B1(\Harmonic[0] ), 
    .A1(\sample_position.Accumulated_Freq_Offset[12] ), .D0(n70), 
    .C0(\sample_position.n87[13] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[13] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6094 ), .LSR(\sample_position.n2897 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[13] ), 
    .Q1(\sample_position.Accumulated_Offset[12] ), 
    .F0(\sample_position.n105[13] ), .F1(\sample_position.n105[12] ));
  sample_position_SLICE_95 \sample_position.SLICE_95 ( 
    .DI1(\sample_position.n105[10] ), .DI0(\sample_position.n105[11] ), 
    .D1(n70), .C1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .B1(\sample_position.n87[10] ), .A1(\Harmonic[0] ), .D0(n70), 
    .C0(\sample_position.n87[11] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[11] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6094 ), .LSR(\sample_position.n2897 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[11] ), 
    .Q1(\sample_position.Accumulated_Offset[10] ), 
    .F0(\sample_position.n105[11] ), .F1(\sample_position.n105[10] ));
  sample_position_SLICE_97 \sample_position.SLICE_97 ( 
    .DI1(\sample_position.n105[8] ), .DI0(\sample_position.n105[9] ), .D1(n70), 
    .C1(\sample_position.n87[8] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[8] ), .A1(\Harmonic[0] ), 
    .D0(n70), .C0(\sample_position.n87[9] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[9] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6094 ), .LSR(\sample_position.n2897 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[9] ), 
    .Q1(\sample_position.Accumulated_Offset[8] ), 
    .F0(\sample_position.n105[9] ), .F1(\sample_position.n105[8] ));
  sample_position_SLICE_99 \sample_position.SLICE_99 ( 
    .DI1(\sample_position.n105[6] ), .DI0(\sample_position.n105[7] ), .D1(n70), 
    .C1(\Harmonic[0] ), .B1(\sample_position.n87[6] ), 
    .A1(\sample_position.Accumulated_Freq_Offset[6] ), .D0(n70), 
    .C0(\sample_position.n87[7] ), .B0(\Harmonic[0] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .CE(\sample_position.n6094 ), .LSR(\sample_position.n2897 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[7] ), 
    .Q1(\sample_position.Accumulated_Offset[6] ), 
    .F0(\sample_position.n105[7] ), .F1(\sample_position.n105[6] ));
  sample_position_SLICE_101 \sample_position.SLICE_101 ( 
    .DI1(\sample_position.n105[4] ), .DI0(\sample_position.n105[5] ), .D1(n70), 
    .C1(\sample_position.n87[4] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[4] ), .A1(\Harmonic[0] ), 
    .D0(n70), .C0(\sample_position.n87[5] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[5] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6094 ), .LSR(\sample_position.n2897 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[5] ), 
    .Q1(\sample_position.Accumulated_Offset[4] ), 
    .F0(\sample_position.n105[5] ), .F1(\sample_position.n105[4] ));
  sample_position_SLICE_104 \sample_position.SLICE_104 ( 
    .DI1(\sample_position.n105[2] ), .DI0(\sample_position.n105[3] ), .D1(n70), 
    .C1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .B1(\sample_position.n87[2] ), .A1(\Harmonic[0] ), .D0(n70), 
    .C0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .B0(\sample_position.n87[3] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6094 ), .LSR(\sample_position.n2897 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[3] ), 
    .Q1(\sample_position.Accumulated_Offset[2] ), 
    .F0(\sample_position.n105[3] ), .F1(\sample_position.n105[2] ));
  SLICE_110 SLICE_110( .DI1(\ADC_Data[4][6].sig_033.FeedThruLUT ), 
    .DI0(\ADC_Data[4][7].sig_032.FeedThruLUT ), .C1(\ADC_Data[4][6] ), 
    .A0(\ADC_Data[4][7] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[7] ), 
    .Q1(\Comb_Interval[6] ), .F0(\ADC_Data[4][7].sig_032.FeedThruLUT ), 
    .F1(\ADC_Data[4][6].sig_033.FeedThruLUT ));
  SLICE_112 SLICE_112( .DI1(\ADC_Data[4][4].sig_035.FeedThruLUT ), 
    .DI0(\ADC_Data[4][5].sig_034.FeedThruLUT ), .D1(\ADC_Data[4][4] ), 
    .C0(\ADC_Data[4][5] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[5] ), 
    .Q1(\Comb_Interval[4] ), .F0(\ADC_Data[4][5].sig_034.FeedThruLUT ), 
    .F1(\ADC_Data[4][4].sig_035.FeedThruLUT ));
  SLICE_114 SLICE_114( .DI1(\ADC_Data[4][2].sig_037.FeedThruLUT ), 
    .DI0(\ADC_Data[4][3].sig_036.FeedThruLUT ), .C1(\ADC_Data[4][2] ), 
    .A0(\ADC_Data[4][3] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[3] ), 
    .Q1(\Comb_Interval[2] ), .F0(\ADC_Data[4][3].sig_036.FeedThruLUT ), 
    .F1(\ADC_Data[4][2].sig_037.FeedThruLUT ));
  SLICE_117 SLICE_117( .DI1(\ADC_Data[3][14].sig_040.FeedThruLUT ), 
    .DI0(\ADC_Data[3][15].sig_039.FeedThruLUT ), .C1(\ADC_Data[3][14] ), 
    .D0(\ADC_Data[3][15] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[15] ), 
    .Q1(\Freq_Scale[14] ), .F0(\ADC_Data[3][15].sig_039.FeedThruLUT ), 
    .F1(\ADC_Data[3][14].sig_040.FeedThruLUT ));
  SLICE_119 SLICE_119( .DI1(\ADC_Data[3][12].sig_042.FeedThruLUT ), 
    .DI0(\ADC_Data[3][13].sig_041.FeedThruLUT ), .C1(\ADC_Data[3][12] ), 
    .D0(\ADC_Data[3][13] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[13] ), 
    .Q1(\Freq_Scale[12] ), .F0(\ADC_Data[3][13].sig_041.FeedThruLUT ), 
    .F1(\ADC_Data[3][12].sig_042.FeedThruLUT ));
  SLICE_121 SLICE_121( .DI1(\ADC_Data[3][10].sig_044.FeedThruLUT ), 
    .DI0(\ADC_Data[3][11].sig_043.FeedThruLUT ), .A1(\ADC_Data[3][10] ), 
    .D0(\ADC_Data[3][11] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[11] ), 
    .Q1(\Freq_Scale[10] ), .F0(\ADC_Data[3][11].sig_043.FeedThruLUT ), 
    .F1(\ADC_Data[3][10].sig_044.FeedThruLUT ));
  SLICE_123 SLICE_123( .DI1(\ADC_Data[3][8].sig_046.FeedThruLUT ), 
    .DI0(\ADC_Data[3][9].sig_045.FeedThruLUT ), .D1(\ADC_Data[3][8] ), 
    .B0(\ADC_Data[3][9] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[9] ), 
    .Q1(\Freq_Scale[8] ), .F0(\ADC_Data[3][9].sig_045.FeedThruLUT ), 
    .F1(\ADC_Data[3][8].sig_046.FeedThruLUT ));
  SLICE_125 SLICE_125( .DI1(\ADC_Data[3][6].sig_048.FeedThruLUT ), 
    .DI0(\ADC_Data[3][7].sig_047.FeedThruLUT ), .A1(\ADC_Data[3][6] ), 
    .C0(\ADC_Data[3][7] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[7] ), 
    .Q1(\Freq_Scale[6] ), .F0(\ADC_Data[3][7].sig_047.FeedThruLUT ), 
    .F1(\ADC_Data[3][6].sig_048.FeedThruLUT ));
  SLICE_127 SLICE_127( .DI1(\ADC_Data[3][4].sig_050.FeedThruLUT ), 
    .DI0(\ADC_Data[3][5].sig_049.FeedThruLUT ), .B1(\ADC_Data[3][4] ), 
    .A0(\ADC_Data[3][5] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[5] ), 
    .Q1(\Freq_Scale[4] ), .F0(\ADC_Data[3][5].sig_049.FeedThruLUT ), 
    .F1(\ADC_Data[3][4].sig_050.FeedThruLUT ));
  SLICE_129 SLICE_129( .DI1(\ADC_Data[3][2].sig_052.FeedThruLUT ), 
    .DI0(\ADC_Data[3][3].sig_051.FeedThruLUT ), .B1(\ADC_Data[3][2] ), 
    .D0(\ADC_Data[3][3] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[3] ), 
    .Q1(\Freq_Scale[2] ), .F0(\ADC_Data[3][3].sig_051.FeedThruLUT ), 
    .F1(\ADC_Data[3][2].sig_052.FeedThruLUT ));
  SLICE_132 SLICE_132( .DI0(\ADC_Data[2][8].sig_054.FeedThruLUT ), 
    .A0(\ADC_Data[2][8] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[8] ), 
    .F0(\ADC_Data[2][8].sig_054.FeedThruLUT ));
  SLICE_133 SLICE_133( .DI1(\ADC_Data[2][6].sig_056.FeedThruLUT ), 
    .DI0(\ADC_Data[2][7].sig_055.FeedThruLUT ), .A1(\ADC_Data[2][6] ), 
    .A0(\ADC_Data[2][7] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[7] ), 
    .Q1(\Scale_Initial[6] ), .F0(\ADC_Data[2][7].sig_055.FeedThruLUT ), 
    .F1(\ADC_Data[2][6].sig_056.FeedThruLUT ));
  SLICE_135 SLICE_135( .DI1(\ADC_Data[2][4].sig_058.FeedThruLUT ), 
    .DI0(\ADC_Data[2][5].sig_057.FeedThruLUT ), .A1(\ADC_Data[2][4] ), 
    .A0(\ADC_Data[2][5] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[5] ), 
    .Q1(\Scale_Initial[4] ), .F0(\ADC_Data[2][5].sig_057.FeedThruLUT ), 
    .F1(\ADC_Data[2][4].sig_058.FeedThruLUT ));
  SLICE_137 SLICE_137( .DI1(\ADC_Data[2][2].sig_060.FeedThruLUT ), 
    .DI0(\ADC_Data[2][3].sig_059.FeedThruLUT ), .B1(\ADC_Data[2][2] ), 
    .C0(\ADC_Data[2][3] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[3] ), 
    .Q1(\Scale_Initial[2] ), .F0(\ADC_Data[2][3].sig_059.FeedThruLUT ), 
    .F1(\ADC_Data[2][2].sig_060.FeedThruLUT ));
  SLICE_140 SLICE_140( .DI1(n7531), .DI0(n7513), .D1(\Adder_Start[0] ), 
    .C1(reset_n_c), .B1(n6_adj_1107), .A1(n8), .D0(n8), .C0(reset_n_c), 
    .B0(\Adder_Start[1] ), .A0(n5), .CLK(Main_Clock), .Q0(\Adder_Start[1] ), 
    .Q1(\Adder_Start[0] ), .F0(n7513), .F1(n7531));
  SLICE_142 SLICE_142( .DI1(\ADC_Data[2][0].sig_065.FeedThruLUT ), 
    .DI0(\ADC_Data[2][1].sig_061.FeedThruLUT ), .B1(\ADC_Data[2][0] ), 
    .B0(\ADC_Data[2][1] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[1] ), 
    .Q1(\Scale_Initial[0] ), .F0(\ADC_Data[2][1].sig_061.FeedThruLUT ), 
    .F1(\ADC_Data[2][0].sig_065.FeedThruLUT ));
  genadder_0__adder_SLICE_145 \genadder[0].adder.SLICE_145 ( 
    .DI1(\genadder[0].adder.r_Multiple_8__N_686[1] ), 
    .DI0(\genadder[0].adder.r_Multiple_8__N_686[0] ), 
    .D1(\genadder[0].adder.Counter_4__N_652 ), .C1(\Adder_Mult[2] ), 
    .B1(\genadder[0].adder.r_Multiple[2] ), .A1(\genadder[0].adder.n5996 ), 
    .D0(\genadder[0].adder.n5996 ), .C0(\genadder[0].adder.Counter_4__N_652 ), 
    .B0(\Adder_Mult[1] ), .A0(\genadder[0].adder.r_Multiple[1] ), 
    .CE(\genadder[0].adder.n4645 ), .CLK(Main_Clock), 
    .Q0(\genadder[0].adder.r_Multiple[0] ), 
    .Q1(\genadder[0].adder.r_Multiple[1] ), 
    .F0(\genadder[0].adder.r_Multiple_8__N_686[0] ), 
    .F1(\genadder[0].adder.r_Multiple_8__N_686[1] ));
  genadder_0__adder_SLICE_146 \genadder[0].adder.SLICE_146 ( 
    .DI1(\genadder[0].adder.n7725 ), 
    .DI0(\genadder[0].adder.Counter_4__N_642[0] ), 
    .D1(\genadder[0].adder.Counter[1] ), .B1(\genadder[0].adder.Counter[0] ), 
    .A1(\genadder[0].adder.n7722 ), .D0(\genadder[0].adder.Counter[0] ), 
    .C0(\Adder_Start[0] ), .B0(\genadder[0].adder.n15 ), 
    .A0(\genadder[0].adder.o_Done_N_699 ), .CE(\genadder[0].adder.n2868 ), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\genadder[0].adder.Counter[0] ), 
    .Q1(\genadder[0].adder.Counter[1] ), 
    .F0(\genadder[0].adder.Counter_4__N_642[0] ), 
    .F1(\genadder[0].adder.n7725 ));
  genadder_0__adder_SLICE_147 \genadder[0].adder.SLICE_147 ( 
    .DI1(\genadder[1].adder.n3038 ), .DI0(\genadder[0].adder.n3023 ), 
    .D1(\genadder[1].adder.Counter_4__N_652 ), .C1(\Adder_Ready[1] ), 
    .B1(\genadder[1].adder.n15 ), .A1(\genadder[1].adder.o_Done_N_699 ), 
    .D0(\genadder[0].adder.o_Done_N_699 ), .C0(\Adder_Ready[0] ), 
    .B0(\Adder_Start[0] ), .A0(\genadder[0].adder.n15 ), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Ready[0] ), .Q1(\Adder_Ready[1] ), 
    .F0(\genadder[0].adder.n3023 ), .F1(\genadder[1].adder.n3038 ));
  genadder_0__adder_SLICE_149 \genadder[0].adder.SLICE_149 ( 
    .DI0(\genadder[0].adder.r_Multiple_8__N_686[6] ), 
    .D0(\genadder[0].adder.n5996 ), .C0(\Adder_Mult[7] ), 
    .B0(\genadder[0].adder.r_Multiple[7] ), 
    .A0(\genadder[0].adder.Counter_4__N_652 ), .CE(\genadder[0].adder.n4645 ), 
    .CLK(Main_Clock), .Q0(\genadder[0].adder.r_Multiple[6] ), 
    .F0(\genadder[0].adder.r_Multiple_8__N_686[6] ));
  genadder_0__adder_SLICE_150 \genadder[0].adder.SLICE_150 ( 
    .DI1(\genadder[0].adder.r_Multiple_8__N_686[4] ), 
    .DI0(\genadder[0].adder.r_Multiple_8__N_686[5] ), 
    .D1(\genadder[0].adder.n5996 ), .C1(\genadder[0].adder.Counter_4__N_652 ), 
    .B1(\Adder_Mult[5] ), .A1(\genadder[0].adder.r_Multiple[5] ), 
    .D0(\genadder[0].adder.Counter_4__N_652 ), .C0(\genadder[0].adder.n5996 ), 
    .B0(\genadder[0].adder.r_Multiple[6] ), .A0(\Adder_Mult[6] ), 
    .CE(\genadder[0].adder.n4645 ), .CLK(Main_Clock), 
    .Q0(\genadder[0].adder.r_Multiple[5] ), 
    .Q1(\genadder[0].adder.r_Multiple[4] ), 
    .F0(\genadder[0].adder.r_Multiple_8__N_686[5] ), 
    .F1(\genadder[0].adder.r_Multiple_8__N_686[4] ));
  genadder_0__adder_SLICE_152 \genadder[0].adder.SLICE_152 ( 
    .DI1(\genadder[0].adder.r_Multiple_8__N_686[2] ), 
    .DI0(\genadder[0].adder.r_Multiple_8__N_686[3] ), 
    .D1(\genadder[0].adder.r_Multiple[3] ), 
    .C1(\genadder[0].adder.Counter_4__N_652 ), .B1(\genadder[0].adder.n5996 ), 
    .A1(\Adder_Mult[3] ), .D0(\genadder[0].adder.Counter_4__N_652 ), 
    .C0(\genadder[0].adder.n5996 ), .B0(\Adder_Mult[4] ), 
    .A0(\genadder[0].adder.r_Multiple[4] ), .CE(\genadder[0].adder.n4645 ), 
    .CLK(Main_Clock), .Q0(\genadder[0].adder.r_Multiple[3] ), 
    .Q1(\genadder[0].adder.r_Multiple[2] ), 
    .F0(\genadder[0].adder.r_Multiple_8__N_686[3] ), 
    .F1(\genadder[0].adder.r_Multiple_8__N_686[2] ));
  genadder_0__adder_SLICE_156 \genadder[0].adder.SLICE_156 ( 
    .DI1(\genadder[0].adder.n7723 ), .DI0(\genadder[0].adder.n7726 ), 
    .D1(\genadder[0].adder.Counter[3] ), .C1(\genadder[0].adder.n3120 ), 
    .B1(\genadder[0].adder.Counter_4__N_652 ), .A1(\genadder[0].adder.n15 ), 
    .D0(\genadder[0].adder.Counter[0] ), .C0(\genadder[0].adder.Counter[2] ), 
    .B0(\genadder[0].adder.n7722 ), .A0(\genadder[0].adder.Counter[1] ), 
    .CE(\genadder[0].adder.n2868 ), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q0(\genadder[0].adder.Counter[2] ), .Q1(\genadder[0].adder.Counter[3] ), 
    .F0(\genadder[0].adder.n7726 ), .F1(\genadder[0].adder.n7723 ));
  adc_SLICE_162 \adc.SLICE_162 ( .DI0(\adc.Data_State.sig_066.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4554 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][12] ), .F0(\adc.Data_State.sig_066.FeedThruLUT ));
  adc_SLICE_163 \adc.SLICE_163 ( .DI0(\adc.Data_State.sig_067.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4595 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][13] ), .F0(\adc.Data_State.sig_067.FeedThruLUT ));
  adc_SLICE_164 \adc.SLICE_164 ( .DI0(\adc.Data_State.sig_068.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n4563 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][14] ), .F0(\adc.Data_State.sig_068.FeedThruLUT ));
  adc_SLICE_165 \adc.SLICE_165 ( .DI0(\adc.Data_State.sig_069.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n3984 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][15] ), .F0(\adc.Data_State.sig_069.FeedThruLUT ));
  adc_SLICE_166 \adc.SLICE_166 ( .DI0(\adc.Data_State.sig_070.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4571 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][0] ), .F0(\adc.Data_State.sig_070.FeedThruLUT ));
  adc_SLICE_167 \adc.SLICE_167 ( .DI0(\adc.Data_State.sig_071.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4591 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][1] ), .F0(\adc.Data_State.sig_071.FeedThruLUT ));
  adc_SLICE_168 \adc.SLICE_168 ( .DI0(\adc.Data_State.sig_072.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4590 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][2] ), .F0(\adc.Data_State.sig_072.FeedThruLUT ));
  adc_SLICE_169 \adc.SLICE_169 ( .DI0(\adc.Data_State.sig_073.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4592 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][3] ), .F0(\adc.Data_State.sig_073.FeedThruLUT ));
  adc_SLICE_170 \adc.SLICE_170 ( .DI0(\adc.Data_State.sig_074.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4555 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][4] ), .F0(\adc.Data_State.sig_074.FeedThruLUT ));
  adc_SLICE_171 \adc.SLICE_171 ( .DI0(\adc.Data_State.sig_075.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4593 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][5] ), .F0(\adc.Data_State.sig_075.FeedThruLUT ));
  adc_SLICE_172 \adc.SLICE_172 ( .DI0(\adc.Data_State.sig_076.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4560 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][6] ), .F0(\adc.Data_State.sig_076.FeedThruLUT ));
  adc_SLICE_173 \adc.SLICE_173 ( .DI0(\adc.Data_State.sig_077.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4582 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][7] ), .F0(\adc.Data_State.sig_077.FeedThruLUT ));
  adc_SLICE_174 \adc.SLICE_174 ( .DI0(\adc.Data_State.sig_078.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n7368 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][8] ), .F0(\adc.Data_State.sig_078.FeedThruLUT ));
  adc_SLICE_175 \adc.SLICE_175 ( .DI0(\adc.Data_State.sig_079.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4575 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][0] ), .F0(\adc.Data_State.sig_079.FeedThruLUT ));
  adc_SLICE_177 \adc.SLICE_177 ( .DI0(\adc.Data_State.sig_081.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4611 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][2] ), .F0(\adc.Data_State.sig_081.FeedThruLUT ));
  adc_SLICE_178 \adc.SLICE_178 ( .DI0(\adc.Data_State.sig_082.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4610 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][3] ), .F0(\adc.Data_State.sig_082.FeedThruLUT ));
  adc_SLICE_179 \adc.SLICE_179 ( .DI0(\adc.Data_State.sig_083.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4556 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][4] ), .F0(\adc.Data_State.sig_083.FeedThruLUT ));
  adc_SLICE_180 \adc.SLICE_180 ( .DI0(\adc.Data_State.sig_084.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4612 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][5] ), .F0(\adc.Data_State.sig_084.FeedThruLUT ));
  adc_SLICE_181 \adc.SLICE_181 ( .DI0(\adc.Data_State.sig_085.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4561 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][6] ), .F0(\adc.Data_State.sig_085.FeedThruLUT ));
  adc_SLICE_183 \adc.SLICE_183 ( .DI0(\adc.Data_State.sig_087.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4568 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][0] ), .F0(\adc.Data_State.sig_087.FeedThruLUT ));
  adc_SLICE_184 \adc.SLICE_184 ( .DI0(\adc.Data_State.sig_088.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4598 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][9] ), .F0(\adc.Data_State.sig_088.FeedThruLUT ));
  adc_SLICE_185 \adc.SLICE_185 ( .DI0(\adc.Data_State.sig_089.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n7363 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][8] ), .F0(\adc.Data_State.sig_089.FeedThruLUT ));
  adc_SLICE_186 \adc.SLICE_186 ( .DI0(\adc.Data_State.sig_090.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4573 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][8] ), .F0(\adc.Data_State.sig_090.FeedThruLUT ));
  adc_SLICE_187 \adc.SLICE_187 ( .DI0(\adc.Data_State.sig_091.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n4583 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][7] ), .F0(\adc.Data_State.sig_091.FeedThruLUT ));
  adc_SLICE_189 \adc.SLICE_189 ( .DI0(\adc.Data_State.sig_093.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4603 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][5] ), .F0(\adc.Data_State.sig_093.FeedThruLUT ));
  adc_SLICE_190 \adc.SLICE_190 ( .DI0(\adc.Data_State.sig_094.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4557 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][4] ), .F0(\adc.Data_State.sig_094.FeedThruLUT ));
  adc_SLICE_191 \adc.SLICE_191 ( .DI0(\adc.Data_State.sig_095.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n4602 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][3] ), .F0(\adc.Data_State.sig_095.FeedThruLUT ));
  adc_SLICE_192 \adc.SLICE_192 ( .DI0(\adc.Data_State.sig_096.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4600 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][2] ), .F0(\adc.Data_State.sig_096.FeedThruLUT ));
  adc_SLICE_193 \adc.SLICE_193 ( .DI0(\adc.Data_State.sig_097.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4601 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][1] ), .F0(\adc.Data_State.sig_097.FeedThruLUT ));
  adc_SLICE_194 \adc.SLICE_194 ( .DI0(\adc.Data_State.sig_098.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4570 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][0] ), .F0(\adc.Data_State.sig_098.FeedThruLUT ));
  adc_SLICE_195 \adc.SLICE_195 ( .DI0(\adc.Data_State.sig_099.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4585 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][1] ), .F0(\adc.Data_State.sig_099.FeedThruLUT ));
  adc_SLICE_196 \adc.SLICE_196 ( .DI0(\adc.Data_State.sig_100.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4586 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][2] ), .F0(\adc.Data_State.sig_100.FeedThruLUT ));
  adc_SLICE_197 \adc.SLICE_197 ( .DI0(\adc.Data_State.sig_101.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4587 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][3] ), .F0(\adc.Data_State.sig_101.FeedThruLUT ));
  adc_SLICE_198 \adc.SLICE_198 ( .DI0(\adc.Data_State.sig_102.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4553 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][4] ), .F0(\adc.Data_State.sig_102.FeedThruLUT ));
  adc_SLICE_199 \adc.SLICE_199 ( .DI0(\adc.Data_State.sig_103.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4588 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][5] ), .F0(\adc.Data_State.sig_103.FeedThruLUT ));
  adc_SLICE_200 \adc.SLICE_200 ( .DI0(\adc.Data_State.sig_104.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4562 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][6] ), .F0(\adc.Data_State.sig_104.FeedThruLUT ));
  adc_SLICE_201 \adc.SLICE_201 ( .DI0(\adc.Data_State.sig_105.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4579 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][7] ), .F0(\adc.Data_State.sig_105.FeedThruLUT ));
  adc_SLICE_202 \adc.SLICE_202 ( .DI0(\adc.Data_State.sig_106.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4576 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][8] ), .F0(\adc.Data_State.sig_106.FeedThruLUT ));
  adc_SLICE_203 \adc.SLICE_203 ( .DI0(\adc.Data_State.sig_107.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4618 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][9] ), .F0(\adc.Data_State.sig_107.FeedThruLUT ));
  adc_SLICE_204 \adc.SLICE_204 ( .DI0(\adc.Data_State.sig_108.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4617 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][10] ), .F0(\adc.Data_State.sig_108.FeedThruLUT ));
  adc_SLICE_205 \adc.SLICE_205 ( .DI0(\adc.Data_State.sig_109.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4616 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][11] ), .F0(\adc.Data_State.sig_109.FeedThruLUT ));
  adc_SLICE_209 \adc.SLICE_209 ( .DI0(\adc.Data_State.sig_110.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4558 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][12] ), .F0(\adc.Data_State.sig_110.FeedThruLUT ));
  adc_SLICE_210 \adc.SLICE_210 ( .DI0(\adc.Data_State.sig_111.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n4615 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][13] ), .F0(\adc.Data_State.sig_111.FeedThruLUT ));
  adc_SLICE_211 \adc.SLICE_211 ( .DI0(\adc.Data_State.sig_112.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4564 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][14] ), .F0(\adc.Data_State.sig_112.FeedThruLUT ));
  adc_SLICE_212 \adc.SLICE_212 ( .DI0(\adc.Data_State.sig_113.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4580 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][15] ), .F0(\adc.Data_State.sig_113.FeedThruLUT ));
  adc_SLICE_213 \adc.SLICE_213 ( .DI0(\adc.Data_State.sig_114.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4572 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][0] ), .F0(\adc.Data_State.sig_114.FeedThruLUT ));
  adc_SLICE_215 \adc.SLICE_215 ( .DI0(\adc.Data_State.sig_116.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4605 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][1] ), .F0(\adc.Data_State.sig_116.FeedThruLUT ));
  adc_SLICE_216 \adc.SLICE_216 ( .DI0(\adc.Data_State.sig_117.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4606 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][2] ), .F0(\adc.Data_State.sig_117.FeedThruLUT ));
  adc_SLICE_217 \adc.SLICE_217 ( .DI0(\adc.Data_State.sig_118.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4607 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][3] ), .F0(\adc.Data_State.sig_118.FeedThruLUT ));
  adc_SLICE_218 \adc.SLICE_218 ( .DI0(\adc.Data_State.sig_119.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n4552 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][4] ), .F0(\adc.Data_State.sig_119.FeedThruLUT ));
  adc_SLICE_219 \adc.SLICE_219 ( .DI0(\adc.Data_State.sig_120.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n4608 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][5] ), .F0(\adc.Data_State.sig_120.FeedThruLUT ));
  adc_SLICE_220 \adc.SLICE_220 ( .DI0(\adc.Data_State.sig_121.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4565 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][6] ), .F0(\adc.Data_State.sig_121.FeedThruLUT ));
  adc_SLICE_221 \adc.SLICE_221 ( .DI0(\adc.Data_State.sig_122.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4581 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][7] ), .F0(\adc.Data_State.sig_122.FeedThruLUT ));
  adc_SLICE_222 \adc.SLICE_222 ( .DI1(\adc.n17[1] ), .DI0(\adc.n17[0] ), 
    .C1(\adc.Count_Stable[0] ), .A1(\adc.Count_Stable[1] ), 
    .B0(\adc.Count_Stable[0] ), .CE(reset_n_c), .LSR(\adc.n4948 ), 
    .CLK(Main_Clock), .Q0(\adc.Count_Stable[0] ), .Q1(\adc.Count_Stable[1] ), 
    .F0(\adc.n17[0] ), .F1(\adc.n17[1] ));
  adc_SLICE_223 \adc.SLICE_223 ( .DI0(\adc.Data_State.sig_123.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4597 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][10] ), .F0(\adc.Data_State.sig_123.FeedThruLUT ));
  SLICE_226 SLICE_226( .DI0(\i_ADC_Clock_c.sig_126.FeedThruLUT ), 
    .A0(i_ADC_Clock_c), .CE(\adc.n7708 ), .CLK(Main_Clock), 
    .Q0(\adc.Clock_Stable ), .F0(\i_ADC_Clock_c.sig_126.FeedThruLUT ));
  adc_SLICE_229 \adc.SLICE_229 ( .DI0(\adc.n17[2] ), 
    .D0(\adc.Count_Stable[0] ), .C0(\adc.Count_Stable[2] ), 
    .B0(\adc.Count_Stable[1] ), .CE(reset_n_c), .LSR(\adc.n4948 ), 
    .CLK(Main_Clock), .Q0(\adc.Count_Stable[2] ), .F0(\adc.n17[2] ));
  adc_SLICE_230 \adc.SLICE_230 ( .DI0(\adc.Data_State.sig_128.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4596 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][11] ), .F0(\adc.Data_State.sig_128.FeedThruLUT ));
  adc_SLICE_231 \adc.SLICE_231 ( .DI1(\adc.n370[2] ), .DI0(\adc.n370[1] ), 
    .D1(\adc.Receive_Bit[1] ), .C1(\adc.Receive_Bit[0] ), 
    .B1(\adc.Receive_Bit[2] ), .D0(\adc.Receive_Bit[0] ), 
    .A0(\adc.Receive_Bit[1] ), .CE(\adc.n2857 ), .LSR(\adc.n4926 ), 
    .CLK(\adc.Clock_Stable ), .Q0(\adc.Receive_Bit[1] ), 
    .Q1(\adc.Receive_Bit[2] ), .F0(\adc.n370[1] ), .F1(\adc.n370[2] ));
  adc_SLICE_234 \adc.SLICE_234 ( .DI1(\adc.n377[2] ), .DI0(\adc.n377[1] ), 
    .D1(\adc.Receive_Byte[1] ), .C1(\Receive_Byte[0] ), 
    .B1(\adc.Receive_Byte[2] ), .D0(\Receive_Byte[0] ), 
    .A0(\adc.Receive_Byte[1] ), .CE(n4642), .LSR(n4921), 
    .CLK(\adc.Clock_Stable ), .Q0(\adc.Receive_Byte[1] ), 
    .Q1(\adc.Receive_Byte[2] ), .F0(\adc.n377[1] ), .F1(\adc.n377[2] ));
  adc_SLICE_236 \adc.SLICE_236 ( .DI0(\adc.n377[3] ), .D0(\Receive_Byte[0] ), 
    .C0(\adc.Receive_Byte[1] ), .B0(\adc.Receive_Byte[3] ), 
    .A0(\adc.Receive_Byte[2] ), .CE(n4642), .LSR(n4921), 
    .CLK(\adc.Clock_Stable ), .Q0(\adc.Receive_Byte[3] ), .F0(\adc.n377[3] ));
  mult_SLICE_240 \mult.SLICE_240 ( .DI1(\mult.o_Mult_8__N_700[7] ), 
    .DI0(\mult.o_Mult_8__N_700[8] ), .D1(Reset_Mult_Scaler), 
    .C1(\Scale_Initial[7] ), .B1(\mult.cout ), .A1(\mult.n57[8] ), 
    .D0(\Scale_Initial[8] ), .C0(\mult.cout ), .B0(\mult.n57[9] ), 
    .A0(Reset_Mult_Scaler), .CE(\mult.n4650 ), .CLK(Main_Clock), 
    .Q0(\Adder_Mult[8] ), .Q1(\Adder_Mult[7] ), .F0(\mult.o_Mult_8__N_700[8] ), 
    .F1(\mult.o_Mult_8__N_700[7] ));
  mult_SLICE_242 \mult.SLICE_242 ( .DI1(\mult.o_Mult_8__N_700[5] ), 
    .DI0(\mult.o_Mult_8__N_700[6] ), .D1(\mult.cout ), .C1(\mult.n57[6] ), 
    .B1(Reset_Mult_Scaler), .A1(\Scale_Initial[5] ), .D0(\mult.n57[7] ), 
    .C0(Reset_Mult_Scaler), .B0(\Scale_Initial[6] ), .A0(\mult.cout ), 
    .CE(\mult.n4650 ), .CLK(Main_Clock), .Q0(\Adder_Mult[6] ), 
    .Q1(\Adder_Mult[5] ), .F0(\mult.o_Mult_8__N_700[6] ), 
    .F1(\mult.o_Mult_8__N_700[5] ));
  mult_SLICE_244 \mult.SLICE_244 ( .DI1(\mult.n7696 ), .DI0(\mult.n1521 ), 
    .D1(\mult.n1502[0] ), .C1(o_Comb_Muted_N_739), .B1(Start_Mult_Scaler), 
    .A1(\mult.n1502[2] ), .D0(\mult.n15 ), .C0(\mult.n1836 ), 
    .B0(\mult.n15_adj_1046 ), .A0(n1505), .LSR(Reset_Mult_Scaler), 
    .CLK(Main_Clock), .Q0(\mult.n1502[2] ), .Q1(\mult.n1502[0] ), 
    .F0(\mult.n1521 ), .F1(\mult.n7696 ));
  mult_SLICE_246 \mult.SLICE_246 ( .DI1(\mult.o_Mult_8__N_700[3] ), 
    .DI0(\mult.o_Mult_8__N_700[4] ), .D1(\mult.cout ), .C1(\mult.n57[4] ), 
    .B1(\Scale_Initial[3] ), .A1(Reset_Mult_Scaler), .D0(Reset_Mult_Scaler), 
    .C0(\mult.cout ), .B0(\Scale_Initial[4] ), .A0(\mult.n57[5] ), 
    .CE(\mult.n4650 ), .CLK(Main_Clock), .Q0(\Adder_Mult[4] ), 
    .Q1(\Adder_Mult[3] ), .F0(\mult.o_Mult_8__N_700[4] ), 
    .F1(\mult.o_Mult_8__N_700[3] ));
  mult_SLICE_248 \mult.SLICE_248 ( .DI1(\mult.o_Mult_8__N_700[1] ), 
    .DI0(\mult.o_Mult_8__N_700[2] ), .D1(Reset_Mult_Scaler), 
    .C1(\Scale_Initial[1] ), .B1(\mult.cout ), .A1(\mult.n57[2] ), 
    .D0(\Scale_Initial[2] ), .C0(\mult.cout ), .B0(\mult.n57[3] ), 
    .A0(Reset_Mult_Scaler), .CE(\mult.n4650 ), .CLK(Main_Clock), 
    .Q0(\Adder_Mult[2] ), .Q1(\Adder_Mult[1] ), .F0(\mult.o_Mult_8__N_700[2] ), 
    .F1(\mult.o_Mult_8__N_700[1] ));
  SLICE_252 SLICE_252( .DI0(\o_Comb_Muted_N_739.sig_129.FeedThruLUT ), 
    .A0(o_Comb_Muted_N_739), .CE(\mult.n7744 ), .LSR(Reset_Mult_Scaler), 
    .CLK(Main_Clock), .Q0(Comb_Muted), 
    .F0(\o_Comb_Muted_N_739.sig_129.FeedThruLUT ));
  genadder_1__adder_SLICE_255 \genadder[1].adder.SLICE_255 ( 
    .DI1(\genadder[1].adder.r_Multiple_8__N_686[1] ), 
    .DI0(\genadder[1].adder.r_Multiple_8__N_686[0] ), 
    .D1(\genadder[1].adder.Counter_4__N_652 ), .C1(\genadder[1].adder.n5956 ), 
    .B1(\genadder[1].adder.r_Multiple[2] ), .A1(\Adder_Mult[2] ), 
    .D0(\genadder[1].adder.n5956 ), .C0(\genadder[1].adder.Counter_4__N_652 ), 
    .B0(\Adder_Mult[1] ), .A0(\genadder[1].adder.r_Multiple[1] ), 
    .CE(\genadder[1].adder.n4652 ), .CLK(Main_Clock), 
    .Q0(\genadder[1].adder.r_Multiple[0] ), 
    .Q1(\genadder[1].adder.r_Multiple[1] ), 
    .F0(\genadder[1].adder.r_Multiple_8__N_686[0] ), 
    .F1(\genadder[1].adder.r_Multiple_8__N_686[1] ));
  genadder_1__adder_SLICE_256 \genadder[1].adder.SLICE_256 ( 
    .DI1(\genadder[1].adder.n7718 ), 
    .DI0(\genadder[1].adder.Counter_4__N_642[0] ), 
    .D1(\genadder[1].adder.Counter[1] ), 
    .C1(\genadder[1].adder.Counter_4__N_652 ), 
    .B1(\genadder[1].adder.Counter[0] ), .A1(\genadder[1].adder.n15 ), 
    .D0(\genadder[1].adder.n6 ), .C0(\genadder[1].adder.n18 ), 
    .B0(\genadder[1].adder.n15 ), .A0(\genadder[1].adder.Counter[0] ), 
    .CE(\genadder[1].adder.n4896 ), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q0(\genadder[1].adder.Counter[0] ), .Q1(\genadder[1].adder.Counter[1] ), 
    .F0(\genadder[1].adder.Counter_4__N_642[0] ), 
    .F1(\genadder[1].adder.n7718 ));
  genadder_1__adder_SLICE_257 \genadder[1].adder.SLICE_257 ( 
    .DI1(\genadder[1].adder.n7720 ), .DI0(\genadder[1].adder.n7721 ), 
    .D1(\genadder[1].adder.Counter[3] ), .C1(\genadder[1].adder.n15 ), 
    .B1(\genadder[1].adder.n3156 ), .A1(\genadder[1].adder.Counter_4__N_652 ), 
    .D0(\genadder[1].adder.n7717 ), .C0(\genadder[1].adder.Counter[2] ), 
    .B0(\genadder[1].adder.Counter[0] ), .A0(\genadder[1].adder.Counter[1] ), 
    .CE(\genadder[1].adder.n4896 ), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q0(\genadder[1].adder.Counter[2] ), .Q1(\genadder[1].adder.Counter[3] ), 
    .F0(\genadder[1].adder.n7721 ), .F1(\genadder[1].adder.n7720 ));
  genadder_1__adder_SLICE_261 \genadder[1].adder.SLICE_261 ( 
    .DI1(\genadder[1].adder.r_Multiple_8__N_686[4] ), 
    .DI0(\genadder[1].adder.r_Multiple_8__N_686[5] ), 
    .D1(\genadder[1].adder.r_Multiple[5] ), .C1(\genadder[1].adder.n5956 ), 
    .B1(\genadder[1].adder.Counter_4__N_652 ), .A1(\Adder_Mult[5] ), 
    .D0(\genadder[1].adder.r_Multiple[6] ), .C0(\Adder_Mult[6] ), 
    .B0(\genadder[1].adder.n5956 ), .A0(\genadder[1].adder.Counter_4__N_652 ), 
    .CE(\genadder[1].adder.n4652 ), .CLK(Main_Clock), 
    .Q0(\genadder[1].adder.r_Multiple[5] ), 
    .Q1(\genadder[1].adder.r_Multiple[4] ), 
    .F0(\genadder[1].adder.r_Multiple_8__N_686[5] ), 
    .F1(\genadder[1].adder.r_Multiple_8__N_686[4] ));
  genadder_1__adder_SLICE_263 \genadder[1].adder.SLICE_263 ( 
    .DI1(\genadder[1].adder.r_Multiple_8__N_686[2] ), 
    .DI0(\genadder[1].adder.r_Multiple_8__N_686[3] ), 
    .D1(\genadder[1].adder.Counter_4__N_652 ), 
    .C1(\genadder[1].adder.r_Multiple[3] ), .B1(\Adder_Mult[3] ), 
    .A1(\genadder[1].adder.n5956 ), .D0(\genadder[1].adder.n5956 ), 
    .C0(\genadder[1].adder.r_Multiple[4] ), .B0(\Adder_Mult[4] ), 
    .A0(\genadder[1].adder.Counter_4__N_652 ), .CE(\genadder[1].adder.n4652 ), 
    .CLK(Main_Clock), .Q0(\genadder[1].adder.r_Multiple[3] ), 
    .Q1(\genadder[1].adder.r_Multiple[2] ), 
    .F0(\genadder[1].adder.r_Multiple_8__N_686[3] ), 
    .F1(\genadder[1].adder.r_Multiple_8__N_686[2] ));
  SLICE_266 SLICE_266( .DI0(\Adder_Mult[8].sig_130.FeedThruLUT ), 
    .A0(\Adder_Mult[8] ), .CE(\genadder[1].adder.n4652 ), 
    .LSR(\genadder[1].adder.n6038 ), .CLK(Main_Clock), 
    .Q0(\genadder[1].adder.r_Multiple[7] ), 
    .F0(\Adder_Mult[8].sig_130.FeedThruLUT ));
  sample_output_SLICE_269 \sample_output.SLICE_269 ( .DI0(\sample_output.n3 ), 
    .C0(\Output_Data[15] ), .B0(DAC_Send_N_931), .A0(DAC_Send_N_933), 
    .CE(reset_n_c), .LSR(n7593), .CLK(Main_Clock), .Q0(\Output_Data[15] ), 
    .F0(\sample_output.n3 ));
  sample_output_SLICE_271 \sample_output.SLICE_271 ( 
    .DI1(\sample_output.n4330 ), .DI0(\sample_output.n4328 ), 
    .D1(\sample_output.Output_Data[20] ), .C1(DAC_Send_N_933), 
    .B1(DAC_Send_N_931), .A1(DAC_Ready), .D0(DAC_Ready), 
    .C0(\sample_output.Output_Data[21] ), .B0(DAC_Send_N_933), 
    .A0(DAC_Send_N_931), .CE(reset_n_c), .LSR(\sample_output.n4902 ), 
    .CLK(Main_Clock), .Q0(\sample_output.Output_Data[21] ), 
    .Q1(\sample_output.Output_Data[20] ), .F0(\sample_output.n4328 ), 
    .F1(\sample_output.n4330 ));
  sample_output_SLICE_273 \sample_output.SLICE_273 ( 
    .DI1(\sample_output.n3586 ), .DI0(\sample_output.n3590 ), 
    .D1(DAC_Send_N_931), .C1(\sample_output.DAC_Send_N_932 ), .B1(DAC_Ready), 
    .D0(DAC_Send), .C0(DAC_Ready), .B0(\sample_output.DAC_Send_N_930 ), 
    .A0(\sample_output.SM_Sample_Output[2] ), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\sample_output.DAC_Send_N_930 ), 
    .Q1(\sample_output.DAC_Send_N_932 ), .F0(\sample_output.n3590 ), 
    .F1(\sample_output.n3586 ));
  sample_output_SLICE_274 \sample_output.SLICE_274 ( 
    .DI1(\sample_output.n3939 ), .DI0(\sample_output.n6405$n1 ), 
    .C1(DAC_Send_N_933), .B1(DAC_Ready), .A1(\sample_output.DAC_Send_N_932 ), 
    .D0(DAC_Send), .C0(DAC_Ready), .B0(\sample_output.DAC_Send_N_930 ), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(DAC_Send_N_931), 
    .Q1(DAC_Send_N_933), .F0(\sample_output.n6405$n1 ), 
    .F1(\sample_output.n3939 ));
  sample_output_SLICE_278 \sample_output.SLICE_278 ( 
    .DI1(\sample_output.n5007 ), .DI0(\sample_output.n5003 ), 
    .D1(\sample_output.n6405 ), .B1(\r_Sample_L[17] ), .A1(reset_n_c), 
    .D0(reset_n_c), .C0(\sample_output.n6405 ), .A0(\r_Sample_L[10] ), 
    .CLK(Main_Clock), .Q0(\r_Sample_L[10] ), .Q1(\r_Sample_L[17] ), 
    .F0(\sample_output.n5003 ), .F1(\sample_output.n5007 ));
  sample_output_SLICE_280 \sample_output.SLICE_280 ( 
    .DI0(\sample_output.n4334 ), .D0(DAC_Send_N_933), 
    .C0(\sample_output.Output_Data[16] ), .B0(DAC_Ready), .A0(DAC_Send_N_931), 
    .CE(reset_n_c), .LSR(\sample_output.n4902 ), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[16] ), .F0(\sample_output.n4334 ));
  sample_output_SLICE_281 \sample_output.SLICE_281 ( 
    .DI0(\sample_output.n3_adj_1043 ), .C0(\sample_output.Output_Data[6] ), 
    .B0(DAC_Send_N_933), .A0(DAC_Send_N_931), .CE(reset_n_c), 
    .LSR(\sample_output.n7601 ), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[6] ), .F0(\sample_output.n3_adj_1043 ));
  sample_output_SLICE_282 \sample_output.SLICE_282 ( 
    .DI0(\sample_output.n3_adj_1044 ), .D0(DAC_Send_N_931), 
    .C0(DAC_Send_N_933), .B0(\Output_Data[8] ), .CE(reset_n_c), .LSR(n7591), 
    .CLK(Main_Clock), .Q0(\Output_Data[8] ), .F0(\sample_output.n3_adj_1044 ));
  sample_output_dac_SLICE_284 \sample_output.dac.SLICE_284 ( 
    .DI1(\sample_output.dac.n1 ), .DI0(\sample_output.dac.n25[1] ), 
    .D1(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.Current_Bit[0] ), 
    .A0(\sample_output.dac.Current_Bit[1] ), .CE(\sample_output.dac.n4719 ), 
    .LSR(\sample_output.dac.n4916 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.Current_Bit[1] ), 
    .Q1(\sample_output.dac.Current_Bit[0] ), .F0(\sample_output.dac.n25[1] ), 
    .F1(\sample_output.dac.n1 ));
  sample_output_dac_SLICE_285 \sample_output.dac.SLICE_285 ( 
    .DI1(\sample_output.dac.n25[3] ), .DI0(\sample_output.dac.n25[2] ), 
    .D1(\sample_output.dac.Current_Bit[1] ), 
    .C1(\sample_output.dac.Current_Bit[0] ), 
    .B1(\sample_output.dac.Current_Bit[3] ), 
    .A1(\sample_output.dac.Current_Bit[2] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.Current_Bit[1] ), 
    .B0(\sample_output.dac.Current_Bit[2] ), .CE(\sample_output.dac.n4719 ), 
    .LSR(\sample_output.dac.n4916 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.Current_Bit[2] ), 
    .Q1(\sample_output.dac.Current_Bit[3] ), .F0(\sample_output.dac.n25[2] ), 
    .F1(\sample_output.dac.n25[3] ));
  sample_output_dac_SLICE_287 \sample_output.dac.SLICE_287 ( 
    .DI0(\sample_output.dac.n7412 ), 
    .D0(\sample_output.dac.o_SPI_Data_N_1028 ), .B0(\SM_DAC_Out[0] ), 
    .A0(\sample_output.dac.n2412 ), .CE(n7519), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(o_DAC_MOSI_c), .F0(\sample_output.dac.n7412 ));
  sample_output_dac_SLICE_289 \sample_output.dac.SLICE_289 ( 
    .DI1(\sample_output.dac.n7738 ), .DI0(\sample_output.dac.n6178 ), 
    .D1(\SM_DAC_Out[2] ), .C1(\SM_DAC_Out[0] ), 
    .B1(\sample_output.DAC_Send_adj_1042 ), .A1(n7_adj_1102), 
    .D0(\sample_output.dac.n2689 ), .C0(\sample_output.dac.n2697 ), 
    .B0(n7_adj_1102), .A0(\SM_DAC_Out[2] ), .CE(n5063), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\SM_DAC_Out[2] ), .Q1(\SM_DAC_Out[1] ), 
    .F0(\sample_output.dac.n6178 ), .F1(\sample_output.dac.n7738 ));
  sample_output_dac_SLICE_292 \sample_output.dac.SLICE_292 ( 
    .DI0(\sample_output.dac.n2390[0] ), .C0(\SM_DAC_Out[2] ), 
    .CE(\sample_output.dac.n12 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(o_DAC_CS_c), .F0(\sample_output.dac.n2390[0] ));
  sample_output_SLICE_294 \sample_output.SLICE_294 ( 
    .DI1(\sample_output.Output_Data[20].sig_132.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[21].sig_131.FeedThruLUT ), 
    .C1(\sample_output.Output_Data[20] ), .C0(\sample_output.Output_Data[21] ), 
    .CE(\sample_output.dac.n2837 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[2] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[3] ), 
    .F0(\sample_output.Output_Data[21].sig_131.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[20].sig_132.FeedThruLUT ));
  sample_output_SLICE_296 \sample_output.SLICE_296 ( 
    .DI1(\sample_output.Output_Data[16].sig_134.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[17].sig_133.FeedThruLUT ), 
    .A1(\sample_output.Output_Data[16] ), .C0(\sample_output.Output_Data[17] ), 
    .CE(\sample_output.dac.n2837 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[6] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[7] ), 
    .F0(\sample_output.Output_Data[17].sig_133.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[16].sig_134.FeedThruLUT ));
  SLICE_298 SLICE_298( .DI1(\Output_Data[8].sig_136.FeedThruLUT ), 
    .DI0(\Output_Data[15].sig_135.FeedThruLUT ), .A1(\Output_Data[8] ), 
    .C0(\Output_Data[15] ), .CE(\sample_output.dac.n2837 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[8] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[15] ), 
    .F0(\Output_Data[15].sig_135.FeedThruLUT ), 
    .F1(\Output_Data[8].sig_136.FeedThruLUT ));
  sample_output_SLICE_304 \sample_output.SLICE_304 ( 
    .DI0(\sample_output.n4032 ), .C0(\sample_output.SM_Sample_Output[2] ), 
    .B0(DAC_Send_N_933), .A0(DAC_Ready), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(\sample_output.SM_Sample_Output[2] ), .F0(\sample_output.n4032 ));
  sample_output_dac_SLICE_305 \sample_output.dac.SLICE_305 ( 
    .D1(\sample_output.DAC_Send_adj_1042 ), .C1(\SM_DAC_Out[0] ), 
    .D0(\SM_DAC_Out[0] ), .C0(\sample_output.DAC_Send_adj_1042 ), 
    .B0(\SM_DAC_Out[2] ), .A0(\sample_output.dac.n2412 ), 
    .F0(\sample_output.dac.n9 ), .F1(\sample_output.dac.n2689 ));
  sample_output_dac_SLICE_306 \sample_output.dac.SLICE_306 ( 
    .D1(\SM_DAC_Out[2] ), .C1(\sample_output.dac.n2412 ), .B1(Clock_Counter), 
    .A1(\SM_DAC_Out[0] ), .D0(\SM_DAC_Out[1] ), .C0(\SM_DAC_Out[3] ), 
    .B0(\SM_DAC_Out[0] ), .A0(\SM_DAC_Out[2] ), .F0(\sample_output.dac.n2412 ), 
    .F1(\sample_output.dac.n4_adj_1041 ));
  SLICE_307 SLICE_307( .D1(\Adder_Start_1__N_111[0] ), .C1(n278), 
    .A1(\Harmonic[0] ), .D0(\Adder_Ready[1] ), .C0(\Adder_Ready[0] ), 
    .B0(\Harmonic[0] ), .A0(Sample_Ready), .F0(n278), .F1(n5));
  SLICE_309 SLICE_309( .D1(\r_Sample_L[10] ), .C1(n7_adj_1100), .B1(reset_n_c), 
    .A1(DAC_Send_N_931), .D0(DAC_Ready), .C0(DAC_Send_N_933), 
    .B0(\Output_Data[8] ), .A0(\r_Sample_L[10] ), .F0(n7_adj_1100), .F1(n7591));
  SLICE_311 SLICE_311( .D1(reset_n_c), .C1(n5269), .B1(o_Freq_Too_High_N_366), 
    .A1(n1278), .D0(n1280), .C0(Next_Sample), .A0(o_Freq_Too_High_N_366), 
    .F0(n5269), .F1(n4717));
  SLICE_313 SLICE_313( .DI1(n8_adj_1101), .D1(reset_n_c), .C1(n7_adj_1102), 
    .B1(\SM_DAC_Out[0] ), .A1(n2723), .D0(\SM_DAC_Out[1] ), 
    .C0(\SM_DAC_Out[3] ), .B0(\SM_DAC_Out[0] ), .A0(\SM_DAC_Out[2] ), 
    .CLK(Main_Clock), .Q1(\SM_DAC_Out[0] ), .F0(n7_adj_1102), .F1(n8_adj_1101));
  sample_output_dac_SLICE_314 \sample_output.dac.SLICE_314 ( .C1(n2723), 
    .A1(reset_n_c), .D0(Clock_Counter), .C0(\sample_output.dac.n2697 ), 
    .B0(n7_adj_1102), .A0(\SM_DAC_Out[2] ), .F0(n2723), .F1(n5063));
  SLICE_315 SLICE_315( .D1(reset_n_c), .C1(n7), .B1(\r_Sample_L[17] ), 
    .A1(DAC_Send_N_931), .D0(DAC_Ready), .C0(\Output_Data[15] ), 
    .B0(\r_Sample_L[17] ), .A0(DAC_Send_N_933), .F0(n7), .F1(n7593));
  sample_output_SLICE_317 \sample_output.SLICE_317 ( .D1(reset_n_c), 
    .C1(\sample_output.n7_c ), .B1(DAC_Send_N_931), 
    .A1(\sample_output.r_Sample_L[8] ), .D0(\sample_output.r_Sample_L[8] ), 
    .C0(\sample_output.Output_Data[6] ), .B0(DAC_Send_N_933), .A0(DAC_Ready), 
    .F0(\sample_output.n7_c ), .F1(\sample_output.n7601 ));
  sample_output_dac_SLICE_319 \sample_output.dac.SLICE_319 ( 
    .D1(\sample_output.dac.r_Data_To_Send[2] ), .C1(\sample_output.dac.n8612 ), 
    .B1(\sample_output.dac.r_Data_To_Send[3] ), 
    .A1(\sample_output.dac.Current_Bit[2] ), 
    .D0(\sample_output.dac.r_Data_To_Send[7] ), 
    .C0(\sample_output.dac.Current_Bit[0] ), 
    .B0(\sample_output.dac.Current_Bit[2] ), 
    .A0(\sample_output.dac.r_Data_To_Send[6] ), .F0(\sample_output.dac.n8612 ), 
    .F1(\sample_output.dac.n8615 ));
  sample_output_dac_SLICE_321 \sample_output.dac.SLICE_321 ( 
    .D1(\SM_DAC_Out[2] ), .C1(n24), .A1(\sample_output.dac.n7430 ), 
    .D0(\SM_DAC_Out[3] ), .C0(\SM_DAC_Out[1] ), .B0(\SM_DAC_Out[0] ), 
    .A0(\SM_DAC_Out[2] ), .F0(n24), .F1(\sample_output.dac.n6190 ));
  SLICE_323 SLICE_323( .D1(n24), .C1(n12), .B1(Clock_Counter), .A1(reset_n_c), 
    .D0(\SM_DAC_Out[3] ), .C0(\SM_DAC_Out[1] ), .B0(\SM_DAC_Out[0] ), 
    .A0(\SM_DAC_Out[2] ), .F0(n12), .F1(n7519));
  SLICE_325 SLICE_325( .D1(n31), .C1(n977), .B1(Reset_Mult_Scaler_N_201), 
    .A1(\Harmonic[3] ), .D0(n977), .C0(Reset_Mult_Scaler_N_201), .B0(n31), 
    .A0(\Harmonic[7] ), .F0(n9), .F1(n13));
  SLICE_326 SLICE_326( .C1(n31), .B1(reset_n_c), .A1(Reset_Mult_Scaler_N_201), 
    .D0(n7939), .C0(n7391), .B0(\Sample_Timer[5] ), .A0(\Sample_Timer[3] ), 
    .F0(n31), .F1(n2660));
  SLICE_327 SLICE_327( .D1(\sample_position.Accumulated_Frequency[0] ), 
    .C1(n5_adj_1109), .D0(n1280), .C0(o_Freq_Too_High_N_366), .B0(n1278), 
    .A0(reset_n_c), .F0(n5_adj_1109), .F1(\sample_position.n6809 ));
  sample_position_SLICE_328 \sample_position.SLICE_328 ( .D1(n5_adj_1109), 
    .A1(\sample_position.Accumulated_Frequency[3] ), 
    .D0(\sample_position.Accumulated_Frequency[6] ), .C0(n5_adj_1109), 
    .F0(\sample_position.n6797 ), .F1(\sample_position.n6803 ));
  sample_position_SLICE_329 \sample_position.SLICE_329 ( 
    .D1(\sample_position.Accumulated_Frequency[12] ), 
    .C1(\sample_position.n24 ), 
    .A1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .D0(\sample_position.Accumulated_Frequency[11] ), 
    .C0(\sample_position.n22 ), 
    .A0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .F0(\sample_position.n24 ), .F1(\sample_position.n26 ));
  sample_position_SLICE_330 \sample_position.SLICE_330 ( 
    .D1(\sample_position.Accumulated_Frequency[14] ), 
    .C1(\sample_position.n28 ), 
    .B1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .D0(\sample_position.Accumulated_Frequency[13] ), 
    .C0(\sample_position.n26 ), 
    .A0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .F0(\sample_position.n28 ), .F1(\sample_position.n30 ));
  sample_position_SLICE_332 \sample_position.SLICE_332 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .C1(\sample_position.n20 ), 
    .B1(\sample_position.Accumulated_Frequency[10] ), 
    .D0(\sample_position.Accumulated_Frequency[9] ), 
    .C0(\sample_position.n18 ), 
    .A0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .F0(\sample_position.n20 ), .F1(\sample_position.n22 ));
  sample_position_SLICE_334 \sample_position.SLICE_334 ( 
    .C1(\sample_position.n16 ), 
    .B1(\sample_position.Accumulated_Freq_Offset[8] ), 
    .A1(\sample_position.Accumulated_Frequency[8] ), 
    .D0(\sample_position.Accumulated_Frequency[7] ), 
    .C0(\sample_position.n14_adj_1058 ), 
    .B0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .F0(\sample_position.n16 ), .F1(\sample_position.n18 ));
  sample_position_SLICE_336 \sample_position.SLICE_336 ( 
    .D1(\sample_position.Accumulated_Frequency[6] ), 
    .C1(\sample_position.n12_adj_1060 ), 
    .B1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .D0(\sample_position.Accumulated_Frequency[5] ), 
    .C0(\sample_position.n10_adj_1063 ), 
    .A0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .F0(\sample_position.n12_adj_1060 ), .F1(\sample_position.n14_adj_1058 ));
  sample_position_SLICE_337 \sample_position.SLICE_337 ( .D1(n1280), 
    .C1(\sample_position.n8130 ), .B1(o_Freq_Too_High_N_366), .A1(reset_n_c), 
    .D0(\sample_position.Accumulated_Frequency[15] ), 
    .C0(\sample_position.n8133 ), 
    .B0(\sample_position.Accumulated_Frequency[14] ), 
    .A0(\sample_position.Accumulated_Frequency[13] ), 
    .F0(\sample_position.n8130 ), .F1(\sample_position.n4628 ));
  sample_position_SLICE_339 \sample_position.SLICE_339 ( 
    .D1(\sample_position.n6 ), .C1(\sample_position.n8136 ), 
    .B1(\sample_position.Accumulated_Frequency[10] ), 
    .A1(\sample_position.Accumulated_Frequency[12] ), 
    .D0(\sample_position.Accumulated_Frequency[8] ), 
    .C0(\sample_position.n8138 ), 
    .B0(\sample_position.Accumulated_Frequency[7] ), 
    .A0(\sample_position.Accumulated_Frequency[6] ), 
    .F0(\sample_position.n8136 ), .F1(\sample_position.n8133 ));
  sample_position_SLICE_340 \sample_position.SLICE_340 ( .D1(n5_adj_1109), 
    .B1(\sample_position.Accumulated_Frequency[11] ), 
    .B0(\sample_position.Accumulated_Frequency[9] ), 
    .A0(\sample_position.Accumulated_Frequency[11] ), 
    .F0(\sample_position.n6 ), .F1(\sample_position.n6787 ));
  sample_position_SLICE_342 \sample_position.SLICE_342 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .C1(\sample_position.n8_adj_1067 ), 
    .A1(\sample_position.Accumulated_Frequency[4] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .C0(\sample_position.n6_adj_1068 ), 
    .B0(\sample_position.Accumulated_Frequency[3] ), 
    .F0(\sample_position.n8_adj_1067 ), .F1(\sample_position.n10_adj_1063 ));
  sample_position_SLICE_344 \sample_position.SLICE_344 ( 
    .D1(\sample_position.Accumulated_Frequency[5] ), 
    .C1(\sample_position.n8_adj_1066 ), 
    .B1(\sample_position.Accumulated_Frequency[2] ), 
    .A1(\sample_position.Accumulated_Frequency[0] ), 
    .D0(\sample_position.Accumulated_Frequency[1] ), 
    .C0(\sample_position.Accumulated_Frequency[3] ), 
    .B0(\sample_position.Accumulated_Frequency[4] ), 
    .F0(\sample_position.n8_adj_1066 ), .F1(\sample_position.n8138 ));
  sample_position_SLICE_346 \sample_position.SLICE_346 ( 
    .D1(\sample_position.Accumulated_Frequency[2] ), .C1(\sample_position.n4 ), 
    .B1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .D0(\sample_position.Accumulated_Frequency[0] ), 
    .C0(\sample_position.Accumulated_Freq_Offset[0] ), 
    .B0(\sample_position.Accumulated_Frequency[1] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .F0(\sample_position.n4 ), .F1(\sample_position.n6_adj_1068 ));
  sample_position_SLICE_347 \sample_position.SLICE_347 ( .D1(reset_n_c), 
    .C1(n57_2), .B1(n1278), .A1(n1277), 
    .D0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .C0(\sample_position.n30 ), 
    .B0(\sample_position.Accumulated_Frequency[15] ), .A0(\Harmonic[0] ), 
    .F0(n57_2), .F1(\sample_position.n6094 ));
  sample_position_SLICE_349 \sample_position.SLICE_349 ( .D1(Next_Sample), 
    .C1(\sample_position.n8170 ), .B1(o_Freq_Too_High_N_366), .A1(reset_n_c), 
    .C0(n1278), .A0(n1280), .F0(\sample_position.n8170 ), 
    .F1(\sample_position.n9_adj_1069 ));
  sample_position_SLICE_351 \sample_position.SLICE_351 ( 
    .C1(\sample_position.Accumulated_Freq_Offset[15] ), 
    .D0(\sample_position.n30 ), 
    .C0(\sample_position.Accumulated_Frequency[15] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[15] ), .F0(n70), 
    .F1(\sample_position.n1[15] ));
  SLICE_353 SLICE_353( .D1(\Sample_Timer[10] ), .C1(n17_2), .B1(n16), 
    .A1(\Sample_Timer[4] ), .D0(\Sample_Timer[12] ), .C0(\Sample_Timer[1] ), 
    .B0(\Sample_Timer[15] ), .A0(\Sample_Timer[0] ), .F0(n17_2), .F1(n7391));
  SLICE_354 SLICE_354( .D0(\Sample_Timer[14] ), .C0(\Sample_Timer[13] ), 
    .B0(\Sample_Timer[11] ), .A0(\Sample_Timer[2] ), .F0(n16));
  SLICE_355 SLICE_355( .D1(\Harmonic[5] ), .C1(n4), .B1(Freq_Too_High), 
    .A1(n4548), .D0(\Harmonic[3] ), .C0(\Harmonic[4] ), .B0(\Harmonic[1] ), 
    .A0(\Harmonic[2] ), .F0(n4), .F1(n66));
  SLICE_357 SLICE_357( .D1(\Harmonic[4] ), .C1(n6), .B1(n4446), 
    .A1(\Harmonic[0] ), .D0(\Harmonic[6] ), .C0(\Harmonic[5] ), 
    .B0(\Harmonic[7] ), .F0(n6), .F1(n5279));
  genadder_0__adder_SLICE_359 \genadder[0].adder.SLICE_359 ( 
    .C0(\genadder[0].adder.o_Done_N_699 ), .A0(\Adder_Start[0] ), 
    .F0(\genadder[0].adder.Counter_4__N_652 ));
  genadder_0__adder_SLICE_360 \genadder[0].adder.SLICE_360 ( 
    .D1(\genadder[0].adder.Counter[1] ), .C1(\genadder[0].adder.n7931 ), 
    .B1(\genadder[0].adder.Counter[3] ), .A1(\genadder[0].adder.Counter[0] ), 
    .C0(\genadder[0].adder.Counter[4] ), .A0(\genadder[0].adder.Counter[2] ), 
    .F0(\genadder[0].adder.n7931 ), .F1(\genadder[0].adder.o_Done_N_699 ));
  genadder_0__adder_SLICE_361 \genadder[0].adder.SLICE_361 ( 
    .D0(\genadder[0].adder.o_Done_N_699 ), .C0(\genadder[0].adder.n15 ), 
    .F0(\genadder[0].adder.n5996 ));
  genadder_0__adder_SLICE_362 \genadder[0].adder.SLICE_362 ( 
    .D1(\genadder[0].adder.n10 ), .C1(\genadder[0].adder.n14 ), 
    .B1(\genadder[0].adder.r_Multiple[6] ), 
    .A1(\genadder[0].adder.r_Multiple[0] ), 
    .D0(\genadder[0].adder.r_Multiple[3] ), 
    .C0(\genadder[0].adder.r_Multiple[5] ), 
    .B0(\genadder[0].adder.r_Multiple[1] ), 
    .A0(\genadder[0].adder.r_Multiple[7] ), .F0(\genadder[0].adder.n14 ), 
    .F1(\genadder[0].adder.n15 ));
  adc_SLICE_363 \adc.SLICE_363 ( .D1(\adc.n12 ), .B1(\adc.n4551 ), 
    .C0(\adc.n4559 ), .A0(\adc.n12 ), .F0(\adc.n4560 ), .F1(\adc.n4555 ));
  adc_SLICE_364 \adc.SLICE_364 ( .C1(\adc.n12 ), .B1(\adc.n4567 ), 
    .D0(\adc.Receive_Bit[3] ), .C0(\adc.Receive_Byte[1] ), 
    .B0(\adc.Receive_Byte[2] ), .A0(\Receive_Byte[0] ), .F0(\adc.n12 ), 
    .F1(\adc.n4571 ));
  adc_SLICE_365 \adc.SLICE_365 ( .D1(\adc.n4567 ), .C1(\adc.n12_adj_1050 ), 
    .D0(\adc.Receive_Bit[3] ), .C0(\adc.Receive_Byte[1] ), 
    .B0(\adc.Receive_Byte[2] ), .A0(\Receive_Byte[0] ), 
    .F0(\adc.n12_adj_1050 ), .F1(\adc.n4575 ));
  adc_SLICE_366 \adc.SLICE_366 ( .D1(SM_ADC_In), .C1(\adc.n6045 ), 
    .B1(CS_Stable), .A1(\adc.Receive_Bit[0] ), .C0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[2] ), .F0(\adc.n6045 ), .F1(\adc.n4567 ));
  adc_SLICE_367 \adc.SLICE_367 ( .B1(\adc.n4567 ), .A1(\adc.n12_adj_1051 ), 
    .D0(\adc.n12_adj_1051 ), .C0(\adc.n4551 ), .F0(\adc.n4553 ), 
    .F1(\adc.n4570 ));
  adc_SLICE_368 \adc.SLICE_368 ( .D1(CS_Stable), .C1(\adc.n8_adj_1055 ), 
    .B1(SM_ADC_In), .A1(\adc.Receive_Bit[0] ), .D0(\adc.Receive_Bit[2] ), 
    .C0(\adc.Receive_Bit[1] ), .F0(\adc.n8_adj_1055 ), .F1(\adc.n4551 ));
  adc_SLICE_369 \adc.SLICE_369 ( .D1(\adc.n12_adj_1050 ), .B1(\adc.n4559 ), 
    .C0(\adc.n12_adj_1050 ), .A0(\adc.n4551 ), .F0(\adc.n4556 ), 
    .F1(\adc.n4561 ));
  adc_SLICE_371 \adc.SLICE_371 ( .D1(\adc.n12_adj_1050 ), .C1(\adc.n8 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.n4481 ), .D0(\adc.Receive_Bit[1] ), 
    .B0(\adc.Receive_Bit[2] ), .F0(\adc.n8 ), .F1(\adc.n4611 ));
  adc_SLICE_373 \adc.SLICE_373 ( .C1(\adc.n6200 ), .B1(reset_n_c), 
    .D0(\adc.Count_Stable[1] ), .C0(\adc.n4928 ), .B0(\adc.Count_Stable[0] ), 
    .A0(\adc.Count_Stable[2] ), .F0(\adc.n6200 ), .F1(\adc.n7911 ));
  adc_SLICE_376 \adc.SLICE_376 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n4481 ), 
    .B1(\adc.Receive_Bit[2] ), .A1(\adc.Receive_Bit[1] ), .D0(CS_Stable), 
    .A0(SM_ADC_In), .F0(\adc.n4481 ), .F1(\adc.n4559 ));
  adc_SLICE_377 \adc.SLICE_377 ( .C1(\adc.n12_adj_1051 ), .A1(\adc.n4559 ), 
    .D0(\Receive_Byte[0] ), .C0(\adc.Receive_Bit[3] ), 
    .B0(\adc.Receive_Byte[1] ), .A0(\adc.Receive_Byte[2] ), 
    .F0(\adc.n12_adj_1051 ), .F1(\adc.n4562 ));
  adc_SLICE_379 \adc.SLICE_379 ( .C1(\adc.n12_adj_1052 ), .A1(\adc.n4567 ), 
    .D0(\adc.Receive_Bit[3] ), .C0(\Receive_Byte[0] ), 
    .B0(\adc.Receive_Byte[2] ), .A0(\adc.Receive_Byte[1] ), 
    .F0(\adc.n12_adj_1052 ), .F1(\adc.n4576 ));
  adc_SLICE_382 \adc.SLICE_382 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n6045 ), 
    .B1(\adc.n12_adj_1052 ), .A1(\adc.n4481 ), .D0(\adc.n4481 ), 
    .C0(\adc.n12_adj_1053 ), .B0(\adc.n6045 ), .A0(\adc.Receive_Bit[0] ), 
    .F0(\adc.n4605 ), .F1(\adc.n4618 ));
  adc_SLICE_383 \adc.SLICE_383 ( .D1(\adc.n4567 ), .C1(\adc.n10 ), 
    .B1(\adc.Receive_Byte[1] ), .A1(\adc.Receive_Byte[2] ), 
    .D0(\adc.Receive_Bit[3] ), .C0(\Receive_Byte[0] ), .F0(\adc.n10 ), 
    .F1(\adc.n7363 ));
  adc_SLICE_385 \adc.SLICE_385 ( .D1(\adc.Receive_Bit[3] ), 
    .C1(\Receive_Byte[0] ), .B1(\adc.n11 ), .A1(\adc.n4567 ), .D0(\adc.n4567 ), 
    .C0(\adc.n11 ), .B0(\Receive_Byte[0] ), .A0(\adc.Receive_Bit[3] ), 
    .F0(\adc.n7368 ), .F1(\adc.n4568 ));
  adc_SLICE_386 \adc.SLICE_386 ( .D1(\adc.n4559 ), .C1(\adc.n11 ), 
    .B1(\Receive_Byte[0] ), .A1(\adc.Receive_Bit[3] ), 
    .D0(\adc.Receive_Byte[1] ), .A0(\adc.Receive_Byte[2] ), .F0(\adc.n11 ), 
    .F1(\adc.n4563 ));
  adc_SLICE_387 \adc.SLICE_387 ( .D1(\Receive_Byte[0] ), .C1(\adc.n11 ), 
    .B1(\adc.n4559 ), .A1(\adc.Receive_Bit[3] ), .D0(\adc.Receive_Bit[3] ), 
    .C0(\adc.n4577 ), .B0(\adc.n11 ), .A0(\Receive_Byte[0] ), .F0(\adc.n4583 ), 
    .F1(\adc.n4566 ));
  adc_SLICE_388 \adc.SLICE_388 ( .D1(CS_Stable), .C1(\adc.n9 ), .A1(SM_ADC_In), 
    .D0(\adc.Receive_Bit[2] ), .B0(\adc.Receive_Bit[0] ), 
    .A0(\adc.Receive_Bit[1] ), .F0(\adc.n9 ), .F1(\adc.n4577 ));
  adc_SLICE_389 \adc.SLICE_389 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n4599 ), 
    .B1(\adc.Receive_Bit[1] ), .A1(\adc.Receive_Bit[2] ), .D0(\adc.n4481 ), 
    .C0(\adc.n11 ), .B0(\Receive_Byte[0] ), .A0(\adc.Receive_Bit[3] ), 
    .F0(\adc.n4599 ), .F1(\adc.n4603 ));
  adc_SLICE_391 \adc.SLICE_391 ( .D1(\adc.Clock_State ), 
    .C1(\adc.CS_State_N_586 ), .B1(i_ADC_Clock_c), .A1(\adc.CS_Stable_N_596 ), 
    .D0(\adc.CS_State ), .A0(\adc.i_ADC_CS_c ), .F0(\adc.CS_State_N_586 ), 
    .F1(\adc.n4928 ));
  adc_SLICE_393 \adc.SLICE_393 ( .C1(\adc.n12_adj_1053 ), .B1(\adc.n4551 ), 
    .D0(\adc.Receive_Byte[2] ), .C0(\Receive_Byte[0] ), 
    .B0(\adc.Receive_Bit[3] ), .A0(\adc.Receive_Byte[1] ), 
    .F0(\adc.n12_adj_1053 ), .F1(\adc.n4552 ));
  adc_SLICE_395 \adc.SLICE_395 ( .D1(\adc.o_Data_Received_N_577 ), 
    .C1(\adc.n7 ), .B1(CS_Stable), .A1(SM_ADC_In), .D0(\Receive_Byte[0] ), 
    .C0(\adc.Receive_Byte[1] ), .B0(\adc.Receive_Byte[3] ), 
    .A0(\adc.Receive_Byte[2] ), .F0(\adc.n7 ), .F1(\adc.n4926 ));
  adc_SLICE_396 \adc.SLICE_396 ( .D1(SM_ADC_In), 
    .C1(\adc.o_Data_Received_N_577 ), .B1(CS_Stable), .A1(\adc.n7 ), 
    .D0(\adc.Receive_Bit[2] ), .C0(\adc.Receive_Bit[0] ), 
    .B0(\adc.Receive_Bit[1] ), .A0(\adc.Receive_Bit[3] ), 
    .F0(\adc.o_Data_Received_N_577 ), .F1(n4921));
  adc_SLICE_397 \adc.SLICE_397 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n6045 ), 
    .B1(\adc.n4481 ), .A1(\adc.n12 ), .D0(\adc.n12_adj_1050 ), 
    .C0(\adc.Receive_Bit[0] ), .B0(\adc.n6045 ), .A0(\adc.n4481 ), 
    .F0(\adc.n4613 ), .F1(\adc.n4591 ));
  adc_SLICE_400 \adc.SLICE_400 ( .D1(SM_ADC_In), .C1(\adc.n9 ), 
    .B1(\adc.n12_adj_1054 ), .A1(CS_Stable), .D0(CS_Stable), .C0(SM_ADC_In), 
    .B0(\adc.n9 ), .A0(\adc.n12 ), .F0(\adc.n4582 ), .F1(\adc.n3984 ));
  adc_SLICE_402 \adc.SLICE_402 ( .C1(\adc.n12_adj_1054 ), .A1(\adc.n4551 ), 
    .D0(\adc.Receive_Byte[1] ), .C0(\adc.Receive_Byte[2] ), 
    .B0(\Receive_Byte[0] ), .A0(\adc.Receive_Bit[3] ), .F0(\adc.n12_adj_1054 ), 
    .F1(\adc.n4554 ));
  adc_SLICE_403 \adc.SLICE_403 ( .D0(\adc.Receive_Bit[0] ), .C0(\adc.n4481 ), 
    .B0(\adc.n12_adj_1053 ), .A0(\adc.n8_adj_1055 ), .F0(\adc.n4608 ));
  mult_SLICE_407 \mult.SLICE_407 ( .D1(\Comb_Interval[0] ), .C1(\mult.n14 ), 
    .B1(\mult.n10 ), .A1(\Comb_Interval[6] ), .D0(\Comb_Interval[5] ), 
    .C0(\Comb_Interval[3] ), .B0(\Comb_Interval[7] ), .A0(\Comb_Interval[1] ), 
    .F0(\mult.n14 ), .F1(\mult.n15 ));
  mult_SLICE_408 \mult.SLICE_408 ( .D1(\Comb_Interval[4] ), 
    .C1(\mult.Comb_Counter[2] ), .B1(\Comb_Interval[2] ), 
    .A1(\mult.Comb_Counter[4] ), .C0(\Comb_Interval[2] ), 
    .A0(\Comb_Interval[4] ), .F0(\mult.n10 ), .F1(\mult.n10_adj_1047 ));
  mult_SLICE_409 \mult.SLICE_409 ( .D1(\mult.n11 ), .C1(\mult.n9 ), 
    .B1(\mult.n10_adj_1047 ), .A1(\mult.n12 ), .D0(\mult.Comb_Counter[0] ), 
    .C0(\Comb_Interval[0] ), .B0(\mult.Comb_Counter[6] ), 
    .A0(\Comb_Interval[6] ), .F0(\mult.n9 ), .F1(\mult.n15_adj_1046 ));
  mult_SLICE_410 \mult.SLICE_410 ( .D1(\mult.Comb_Counter[5] ), 
    .C1(\Comb_Interval[5] ), .B1(\Comb_Interval[3] ), 
    .A1(\mult.Comb_Counter[3] ), .D0(\mult.Comb_Counter[1] ), 
    .C0(\Comb_Interval[7] ), .B0(\mult.Comb_Counter[7] ), 
    .A0(\Comb_Interval[1] ), .F0(\mult.n12 ), .F1(\mult.n11 ));
  genadder_1__adder_SLICE_411 \genadder[1].adder.SLICE_411 ( 
    .D1(\genadder[1].adder.Counter_4__N_652 ), .C1(\genadder[1].adder.n5956 ), 
    .A1(Adder_Clear), .D0(\genadder[1].adder.n18 ), 
    .C0(\genadder[1].adder.n15 ), .B0(\genadder[1].adder.Counter[1] ), 
    .A0(\genadder[1].adder.Counter[0] ), .F0(\genadder[1].adder.n5956 ), 
    .F1(\genadder[1].adder.n4652 ));
  genadder_1__adder_SLICE_412 \genadder[1].adder.SLICE_412 ( 
    .DI1(\genadder[1].adder.r_Multiple_8__N_686[6] ), 
    .D1(\genadder[1].adder.n5956 ), .C1(\Adder_Mult[7] ), 
    .B1(\genadder[1].adder.Counter_4__N_652 ), 
    .A1(\genadder[1].adder.r_Multiple[7] ), .C0(\genadder[1].adder.n5956 ), 
    .B0(Adder_Clear), .A0(\genadder[1].adder.Counter_4__N_652 ), 
    .CE(\genadder[1].adder.n4652 ), .CLK(Main_Clock), 
    .Q1(\genadder[1].adder.r_Multiple[6] ), .F0(\genadder[1].adder.n6038 ), 
    .F1(\genadder[1].adder.r_Multiple_8__N_686[6] ));
  genadder_1__adder_SLICE_414 \genadder[1].adder.SLICE_414 ( 
    .D1(\genadder[1].adder.Counter[3] ), .C1(\genadder[1].adder.n6 ), 
    .B1(\genadder[1].adder.Counter[2] ), .A1(\genadder[1].adder.Counter[4] ), 
    .D0(\Adder_Start[1] ), .B0(\genadder[1].adder.Counter[0] ), 
    .A0(\genadder[1].adder.Counter[1] ), .F0(\genadder[1].adder.n6 ), 
    .F1(\genadder[1].adder.Counter_4__N_652 ));
  genadder_1__adder_SLICE_415 \genadder[1].adder.SLICE_415 ( 
    .D1(\genadder[1].adder.Counter[0] ), .C1(\genadder[1].adder.n18 ), 
    .A1(\genadder[1].adder.Counter[1] ), .C0(\genadder[1].adder.Counter[3] ), 
    .B0(\genadder[1].adder.Counter[2] ), .A0(\genadder[1].adder.Counter[4] ), 
    .F0(\genadder[1].adder.n18 ), .F1(\genadder[1].adder.o_Done_N_699 ));
  genadder_1__adder_SLICE_417 \genadder[1].adder.SLICE_417 ( 
    .D1(\genadder[1].adder.Counter[1] ), 
    .C1(\genadder[1].adder.Counter_4__N_652 ), .B1(\genadder[1].adder.n18 ), 
    .A1(\genadder[1].adder.Counter[0] ), .D0(\genadder[1].adder.n15 ), 
    .C0(\genadder[1].adder.Counter_4__N_652 ), .F0(\genadder[1].adder.n7717 ), 
    .F1(\genadder[1].adder.n4896 ));
  genadder_1__adder_SLICE_418 \genadder[1].adder.SLICE_418 ( 
    .D1(\genadder[1].adder.r_Multiple[6] ), .C1(\genadder[1].adder.n14 ), 
    .B1(\genadder[1].adder.r_Multiple[0] ), .A1(\genadder[1].adder.n10 ), 
    .D0(\genadder[1].adder.r_Multiple[5] ), 
    .C0(\genadder[1].adder.r_Multiple[1] ), 
    .B0(\genadder[1].adder.r_Multiple[7] ), 
    .A0(\genadder[1].adder.r_Multiple[3] ), .F0(\genadder[1].adder.n14 ), 
    .F1(\genadder[1].adder.n15 ));
  sample_output_dac_SLICE_419 \sample_output.dac.SLICE_419 ( 
    .D1(\sample_output.dac.n6 ), .C1(\sample_output.dac.n10 ), 
    .B1(\SM_DAC_Out[3] ), .A1(\SM_DAC_Out[2] ), .C0(\SM_DAC_Out[1] ), 
    .B0(\sample_output.DAC_Send_adj_1042 ), .A0(\SM_DAC_Out[0] ), 
    .F0(\sample_output.dac.n10 ), .F1(\sample_output.dac.n4719 ));
  sample_output_dac_SLICE_421 \sample_output.dac.SLICE_421 ( 
    .D1(\sample_output.dac.n4719 ), .C1(\sample_output.dac.n8_c ), 
    .B1(\SM_DAC_Out[1] ), .A1(\SM_DAC_Out[0] ), .D0(\SM_DAC_Out[2] ), 
    .A0(\SM_DAC_Out[3] ), .F0(\sample_output.dac.n8_c ), 
    .F1(\sample_output.dac.n4916 ));
  sample_output_dac_SLICE_423 \sample_output.dac.SLICE_423 ( 
    .D1(\sample_output.dac.n5986 ), .C1(\sample_output.dac.n6 ), 
    .B1(\sample_output.dac.n2689 ), .A1(\SM_DAC_Out[3] ), .B0(Clock_Counter), 
    .A0(reset_n_c), .F0(\sample_output.dac.n6 ), 
    .F1(\sample_output.dac.n2837 ));
  sample_output_dac_SLICE_425 \sample_output.dac.SLICE_425 ( 
    .D1(\sample_output.dac.Current_Bit[4] ), .C1(\sample_output.dac.n15 ), 
    .B1(\sample_output.dac.n7941 ), .A1(\sample_output.dac.n4 ), 
    .D0(\sample_output.dac.Current_Bit[3] ), .C0(\sample_output.dac.n8615 ), 
    .B0(\sample_output.dac.n14 ), .A0(\sample_output.dac.Current_Bit[1] ), 
    .F0(\sample_output.dac.n15 ), .F1(\sample_output.dac.o_SPI_Data_N_1028 ));
  sample_output_dac_SLICE_426 \sample_output.dac.SLICE_426 ( 
    .D1(\sample_output.dac.Current_Bit[1] ), 
    .A1(\sample_output.dac.r_Data_To_Send[15] ), 
    .D0(\sample_output.dac.Current_Bit[3] ), 
    .B0(\sample_output.dac.Current_Bit[2] ), 
    .A0(\sample_output.dac.Current_Bit[1] ), .F0(\sample_output.dac.n7941 ), 
    .F1(\sample_output.dac.n8177 ));
  sample_output_dac_SLICE_428 \sample_output.dac.SLICE_428 ( 
    .D1(\sample_output.dac.n8177 ), .C1(\sample_output.dac.n8178 ), 
    .B1(\sample_output.dac.Current_Bit[0] ), 
    .A1(\sample_output.dac.Current_Bit[2] ), 
    .D0(\sample_output.dac.r_Data_To_Send[8] ), 
    .A0(\sample_output.dac.Current_Bit[1] ), .F0(\sample_output.dac.n8178 ), 
    .F1(\sample_output.dac.n14 ));
  sample_output_dac_SLICE_429 \sample_output.dac.SLICE_429 ( 
    .D1(\sample_output.dac.Current_Bit[0] ), .C1(\sample_output.dac.n22 ), 
    .B1(Clock_Counter), .A1(\sample_output.dac.n7953 ), .D0(\SM_DAC_Out[2] ), 
    .C0(\SM_DAC_Out[1] ), .B0(\SM_DAC_Out[3] ), .A0(\SM_DAC_Out[0] ), 
    .F0(\sample_output.dac.n22 ), .F1(o_DAC_SCK_c));
  sample_output_dac_SLICE_430 \sample_output.dac.SLICE_430 ( 
    .DI1(\sample_output.dac.n25[4] ), .D1(\sample_output.dac.Current_Bit[3] ), 
    .C1(\sample_output.dac.Current_Bit[4] ), .B1(\sample_output.dac.n6847 ), 
    .A1(\sample_output.dac.Current_Bit[2] ), 
    .D0(\sample_output.dac.Current_Bit[4] ), 
    .C0(\sample_output.dac.Current_Bit[3] ), 
    .B0(\sample_output.dac.Current_Bit[2] ), 
    .A0(\sample_output.dac.Current_Bit[1] ), .CE(\sample_output.dac.n4719 ), 
    .LSR(\sample_output.dac.n4916 ), .CLK(Main_Clock), 
    .Q1(\sample_output.dac.Current_Bit[4] ), .F0(\sample_output.dac.n7953 ), 
    .F1(\sample_output.dac.n25[4] ));
  sample_output_dac_SLICE_431 \sample_output.dac.SLICE_431 ( 
    .D1(\SM_DAC_Out[3] ), .C1(\sample_output.dac.n5986 ), 
    .B1(\sample_output.DAC_Send_adj_1042 ), .A1(\SM_DAC_Out[0] ), 
    .C0(\SM_DAC_Out[2] ), .A0(\SM_DAC_Out[1] ), .F0(\sample_output.dac.n5986 ), 
    .F1(\sample_output.dac.n7_c ));
  sample_output_dac_SLICE_433 \sample_output.dac.SLICE_433 ( 
    .C1(o_Freq_Too_High_N_366), .B1(reset_n_c), .A1(n1280), 
    .D0(\sample_output.dac.n4539 ), .C0(\sample_output.dac.n6190 ), 
    .B0(reset_n_c), .A0(\sample_output.dac.n7_c ), 
    .F0(\sample_output.dac.n12 ), .F1(\sample_position.n4940 ));
  sample_output_dac_SLICE_434 \sample_output.dac.SLICE_434 ( .DI1(n5005), 
    .D1(Clock_Counter), .C1(reset_n_c), .D0(\SM_DAC_Out[0] ), 
    .C0(Clock_Counter), .A0(\sample_output.dac.n2412 ), .CLK(Main_Clock), 
    .Q1(Clock_Counter), .F0(\sample_output.dac.n4539 ), .F1(n5005));
  sample_output_dac_SLICE_435 \sample_output.dac.SLICE_435 ( 
    .D1(\SM_DAC_Out[0] ), .C1(\sample_output.dac.n7907 ), 
    .B1(\sample_output.DAC_Send_adj_1042 ), 
    .A1(\sample_output.dac.n8_adj_1037 ), 
    .D0(\sample_output.dac.Current_Bit[2] ), 
    .A0(\sample_output.dac.Current_Bit[1] ), .F0(\sample_output.dac.n7907 ), 
    .F1(\sample_output.dac.n2697 ));
  sample_output_dac_SLICE_436 \sample_output.dac.SLICE_436 ( 
    .D1(\sample_output.dac.Current_Bit[1] ), 
    .A1(\sample_output.dac.Current_Bit[0] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.Current_Bit[4] ), 
    .B0(\sample_output.dac.Current_Bit[3] ), 
    .F0(\sample_output.dac.n8_adj_1037 ), .F1(\sample_output.dac.n6847 ));
  sample_output_dac_SLICE_438 \sample_output.dac.SLICE_438 ( .D0(n24), 
    .C0(\sample_output.dac.n4_adj_1041 ), .B0(reset_n_c), 
    .A0(\sample_output.DAC_Send_adj_1042 ), .F0(\sample_output.dac.n4673 ));
  SLICE_439 SLICE_439( .D1(reset_n_c), .C1(n982), .B1(n987), .A1(n988), 
    .D0(n988), .C0(n31), .B0(reset_n_c), .A0(Reset_Mult_Scaler_N_201), 
    .F0(n7587), .F1(n7951));
  SLICE_440 SLICE_440( .DI1(\n2660$n0 ), .D1(reset_n_c), 
    .C1(Reset_Mult_Scaler_N_201), .A1(n31), .D0(n31), .C0(n988), 
    .B0(Reset_Mult_Scaler_N_201), .A0(reset_n_c), .CLK(Main_Clock), .Q1(n988), 
    .F0(n7901), .F1(\n2660$n0 ));
  adc_SLICE_441 \adc.SLICE_441 ( .D1(\adc.Receive_Bit[0] ), 
    .C1(\adc.Receive_Bit[2] ), .B1(\adc.n4599 ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[2] ), .C0(\adc.Receive_Bit[0] ), 
    .B0(\adc.Receive_Bit[1] ), .A0(\adc.n4599 ), .F0(\adc.n4601 ), 
    .F1(\adc.n4602 ));
  adc_SLICE_445 \adc.SLICE_445 ( .D1(\adc.n12_adj_1053 ), .C1(\adc.n8 ), 
    .B1(\adc.n4481 ), .A1(\adc.Receive_Bit[0] ), .D0(\adc.Receive_Bit[0] ), 
    .C0(\adc.n4481 ), .B0(\adc.n8 ), .A0(\adc.n12_adj_1053 ), .F0(\adc.n4607 ), 
    .F1(\adc.n4606 ));
  adc_SLICE_447 \adc.SLICE_447 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n4481 ), 
    .B1(\adc.n12_adj_1054 ), .A1(\adc.n8 ), .D0(\adc.n8 ), 
    .C0(\adc.Receive_Bit[0] ), .B0(\adc.n4481 ), .A0(\adc.n12_adj_1054 ), 
    .F0(\adc.n4597 ), .F1(\adc.n4596 ));
  adc_SLICE_449 \adc.SLICE_449 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n12 ), 
    .B1(\adc.n4481 ), .A1(\adc.n8 ), .D0(\adc.n8 ), .C0(\adc.Receive_Bit[0] ), 
    .B0(\adc.n12 ), .A0(\adc.n4481 ), .F0(\adc.n4590 ), .F1(\adc.n4592 ));
  adc_SLICE_451 \adc.SLICE_451 ( .D1(\adc.Receive_Bit[0] ), 
    .C1(\adc.n12_adj_1052 ), .B1(\adc.n8 ), .A1(\adc.n4481 ), .D0(\adc.n4481 ), 
    .C0(\adc.n8 ), .B0(\adc.n12_adj_1052 ), .A0(\adc.Receive_Bit[0] ), 
    .F0(\adc.n4617 ), .F1(\adc.n4616 ));
  adc_SLICE_454 \adc.SLICE_454 ( .DI1(\adc.n370[3] ), 
    .D1(\adc.Receive_Bit[2] ), .C1(\adc.Receive_Bit[3] ), 
    .B1(\adc.Receive_Bit[1] ), .A1(\adc.Receive_Bit[0] ), 
    .D0(\Receive_Byte[0] ), .C0(\adc.n4567 ), .B0(\adc.Receive_Bit[3] ), 
    .A0(\adc.n11 ), .CE(\adc.n2857 ), .LSR(\adc.n4926 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\adc.Receive_Bit[3] ), .F0(\adc.n4573 ), 
    .F1(\adc.n370[3] ));
  adc_SLICE_455 \adc.SLICE_455 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n4481 ), 
    .B1(\adc.n12_adj_1051 ), .A1(\adc.n8 ), .D0(\adc.n8 ), 
    .C0(\adc.Receive_Bit[0] ), .B0(\adc.n4481 ), .A0(\adc.n12_adj_1051 ), 
    .F0(\adc.n4586 ), .F1(\adc.n4587 ));
  SLICE_457 SLICE_457( .DI1(n7497), .D1(n9_adj_1106), .C1(n12_adj_1105), 
    .B1(n7951), .A1(Next_Sample), .D0(Next_Sample), 
    .C0(Reset_Mult_Scaler_N_201), .B0(n31), .A0(reset_n_c), .CLK(Main_Clock), 
    .Q1(Next_Sample), .F0(n12_adj_1105), .F1(n7497));
  SLICE_459 SLICE_459( .DI1(n3578), .D1(Next_Sample), 
    .C1(o_Freq_Too_High_N_366), .A1(n1277), .D0(reset_n_c), .C0(Next_Sample), 
    .B0(o_Freq_Too_High_N_366), .A0(n1280), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(o_Freq_Too_High_N_366), .F0(n4716), .F1(n3578));
  SLICE_461 SLICE_461( .D1(n977), .B1(reset_n_c), .D0(n31), 
    .C0(Reset_Mult_Scaler_N_201), .B0(\Harmonic[5] ), .A0(n977), .F0(n11), 
    .F1(n9_adj_1106));
  SLICE_463 SLICE_463( .D1(n31), .C1(\Harmonic[0] ), 
    .B1(Reset_Mult_Scaler_N_201), .A1(n977), .D0(n31), .C0(\Harmonic[6] ), 
    .B0(n977), .A0(Reset_Mult_Scaler_N_201), .F0(n10), .F1(n16_adj_1110));
  SLICE_465 SLICE_465( .D1(Reset_Mult_Scaler_N_201), .C1(n31), .B1(n977), 
    .A1(\Harmonic[2] ), .D0(n31), .C0(Reset_Mult_Scaler_N_201), 
    .B0(\Harmonic[4] ), .A0(n977), .F0(n12_adj_1108), .F1(n14));
  genadder_0__adder_SLICE_467 \genadder[0].adder.SLICE_467 ( 
    .DI1(\genadder[0].adder.Counter_4__N_642[4] ), 
    .D1(\genadder[0].adder.Counter[4] ), .C1(\genadder[0].adder.n7722 ), 
    .B1(\genadder[0].adder.n3127 ), .A1(\genadder[0].adder.o_Done_N_699 ), 
    .D0(\genadder[0].adder.o_Done_N_699 ), .B0(\genadder[0].adder.n15 ), 
    .A0(\Adder_Start[0] ), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q1(\genadder[0].adder.Counter[4] ), .F0(\genadder[0].adder.n7722 ), 
    .F1(\genadder[0].adder.Counter_4__N_642[4] ));
  genadder_0__adder_SLICE_468 \genadder[0].adder.SLICE_468 ( 
    .C1(\Adder_Start[0] ), .A1(\genadder[0].adder.o_Done_N_699 ), 
    .D0(\genadder[0].adder.o_Done_N_699 ), .C0(\Adder_Start[0] ), 
    .B0(\genadder[0].adder.n15 ), .A0(Adder_Clear), 
    .F0(\genadder[0].adder.n4645 ), .F1(\genadder[0].adder.n2868 ));
  genadder_0__adder_SLICE_469 \genadder[0].adder.SLICE_469 ( 
    .C1(\genadder[0].adder.Counter[2] ), .B1(\genadder[0].adder.Counter[0] ), 
    .A1(\genadder[0].adder.Counter[1] ), .D0(\genadder[0].adder.Counter[2] ), 
    .C0(\genadder[0].adder.Counter[0] ), .B0(\genadder[0].adder.Counter[1] ), 
    .A0(\genadder[0].adder.Counter[3] ), .F0(\genadder[0].adder.n3127 ), 
    .F1(\genadder[0].adder.n3120 ));
  adc_SLICE_472 \adc.SLICE_472 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n6045 ), 
    .B1(\adc.n12_adj_1054 ), .A1(\adc.n4481 ), .D0(\adc.n6045 ), 
    .C0(\adc.n12_adj_1051 ), .B0(\adc.n4481 ), .A0(\adc.Receive_Bit[0] ), 
    .F0(\adc.n4585 ), .F1(\adc.n4598 ));
  adc_SLICE_475 \adc.SLICE_475 ( .D1(\adc.n8_adj_1055 ), 
    .C1(\adc.n12_adj_1051 ), .B1(\adc.n4481 ), .A1(\adc.Receive_Bit[0] ), 
    .D0(\adc.n4481 ), .C0(\adc.n12_adj_1054 ), .B0(\adc.Receive_Bit[0] ), 
    .A0(\adc.n8_adj_1055 ), .F0(\adc.n4595 ), .F1(\adc.n4588 ));
  adc_SLICE_477 \adc.SLICE_477 ( .D1(\adc.n4481 ), .C1(\adc.n8_adj_1055 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.n12_adj_1052 ), .D0(\adc.n12 ), 
    .C0(\adc.Receive_Bit[0] ), .B0(\adc.n8_adj_1055 ), .A0(\adc.n4481 ), 
    .F0(\adc.n4593 ), .F1(\adc.n4615 ));
  adc_SLICE_479 \adc.SLICE_479 ( .D1(\adc.n12_adj_1050 ), .C1(\adc.n8 ), 
    .B1(\adc.n4481 ), .A1(\adc.Receive_Bit[0] ), .D0(\adc.n12_adj_1050 ), 
    .C0(\adc.n4481 ), .B0(\adc.Receive_Bit[0] ), .A0(\adc.n8_adj_1055 ), 
    .F0(\adc.n4612 ), .F1(\adc.n4610 ));
  adc_SLICE_481 \adc.SLICE_481 ( .D1(\adc.n9 ), .C1(SM_ADC_In), 
    .B1(\adc.n12_adj_1051 ), .A1(CS_Stable), .D0(\adc.n12_adj_1050 ), 
    .C0(CS_Stable), .B0(SM_ADC_In), .A0(\adc.n9 ), .F0(\adc.n4578 ), 
    .F1(\adc.n4579 ));
  adc_SLICE_483 \adc.SLICE_483 ( .D1(CS_Stable), .C1(\adc.n12_adj_1052 ), 
    .B1(SM_ADC_In), .A1(\adc.n9 ), .D0(\adc.n12_adj_1053 ), .C0(CS_Stable), 
    .B0(\adc.n9 ), .A0(SM_ADC_In), .F0(\adc.n4581 ), .F1(\adc.n4580 ));
  mult_SLICE_485 \mult.SLICE_485 ( .D1(Reset_Mult_Scaler), 
    .C1(Start_Mult_Scaler), .B1(\mult.n1502[0] ), .A1(o_Comb_Muted_N_739), 
    .C0(Reset_Mult_Scaler), .B0(Start_Mult_Scaler), .A0(\mult.n1502[0] ), 
    .F0(\mult.n4650 ), .F1(\mult.n7744 ));
  sample_output_dac_SLICE_488 \sample_output.dac.SLICE_488 ( 
    .DI1(\sample_output.dac.n7728 ), .D1(\SM_DAC_Out[1] ), 
    .C1(\SM_DAC_Out[2] ), .B1(\SM_DAC_Out[0] ), .A1(\SM_DAC_Out[3] ), 
    .D0(\SM_DAC_Out[3] ), .C0(\SM_DAC_Out[1] ), .A0(\SM_DAC_Out[0] ), 
    .CE(n5063), .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(\SM_DAC_Out[3] ), 
    .F0(\sample_output.dac.n7430 ), .F1(\sample_output.dac.n7728 ));
  SLICE_489 SLICE_489( .D0(\Sample_Timer[7] ), .C0(\Sample_Timer[6] ), 
    .B0(\Sample_Timer[8] ), .A0(\Sample_Timer[9] ), .F0(n7939));
  SLICE_490 SLICE_490( .DI1(n3570), .D1(n31), .C1(n979), 
    .B1(Reset_Mult_Scaler_N_201), .D0(n31), .C0(Reset_Mult_Scaler_N_201), 
    .B0(n977), .A0(\Harmonic[1] ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(Reset_Mult_Scaler_N_201), .F0(n15), .F1(n3570));
  SLICE_493 SLICE_493( .DI1(n5023), .D1(Mult_Ready), .C1(Start_Mult_Scaler), 
    .B1(n3559), .A1(n2879), .C0(n978), .B0(Comb_Muted), .A0(Mult_Ready), 
    .CLK(Main_Clock), .Q1(Mult_Ready), .F0(n4064), .F1(n5023));
  SLICE_494 SLICE_494( .DI1(n1018), .D1(n982), .B1(\Adder_Ready[1] ), 
    .A1(\Adder_Ready[0] ), .D0(reset_n_c), .C0(n988), .B0(Adder_Clear_N_197), 
    .A0(n979), .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(Adder_Clear_N_197), 
    .F0(n4758), .F1(n1018));
  sample_output_SLICE_495 \sample_output.SLICE_495 ( 
    .DI1(\Reset_Mult_Scaler_N_201.sig_031.FeedThruLUT ), 
    .B1(Reset_Mult_Scaler_N_201), .D0(DAC_Send), 
    .B0(\sample_output.DAC_Send_N_930 ), .A0(DAC_Ready), .CE(n7901), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(DAC_Send), 
    .F0(\sample_output.n6405 ), 
    .F1(\Reset_Mult_Scaler_N_201.sig_031.FeedThruLUT ));
  sample_output_dac_SLICE_496 \sample_output.dac.SLICE_496 ( 
    .DI1(\sample_output.n1 ), .C1(DAC_Ready), 
    .B1(\sample_output.Output_Data[17] ), .A1(DAC_Send_N_933), 
    .D0(DAC_Send_N_933), .C0(DAC_Send_N_931), .B0(reset_n_c), 
    .A0(\sample_output.Output_Data[17] ), .CE(reset_n_c), 
    .LSR(\sample_output.n7334 ), .CLK(Main_Clock), 
    .Q1(\sample_output.Output_Data[17] ), .F0(\sample_output.n7334 ), 
    .F1(\sample_output.n1 ));
  mult_SLICE_497 \mult.SLICE_497 ( .DI1(n5010), .D1(reset_n_c), 
    .C1(Start_Mult_Scaler), .B1(n978), .A1(n987), .D0(\mult.n1502[0] ), 
    .B0(Start_Mult_Scaler), .CLK(Main_Clock), .Q1(Start_Mult_Scaler), 
    .F0(\mult.n1836 ), .F1(n5010));
  mult_SLICE_498 \mult.SLICE_498 ( .DI1(\mult.n4469 ), .D1(Start_Mult_Scaler), 
    .C1(\mult.n15 ), .B1(\mult.n1502[0] ), .C0(n1505), .A0(Reset_Mult_Scaler), 
    .LSR(Reset_Mult_Scaler), .CLK(Main_Clock), .Q1(n1505), .F0(n2879), 
    .F1(\mult.n4469 ));
  adc_SLICE_499 \adc.SLICE_499 ( .DI1(\adc.n2 ), 
    .D1(\adc.o_Data_Received_N_577 ), .B1(SM_ADC_In), .A1(\adc.n7 ), 
    .D0(CS_Stable), .C0(SM_ADC_In), .A0(\adc.o_Data_Received_N_577 ), 
    .LSR(CS_Stable), .CLK(\adc.Clock_Stable ), .Q1(SM_ADC_In), .F0(n4642), 
    .F1(\adc.n2 ));
  adc_SLICE_500 \adc.SLICE_500 ( .DI1(n5001), .D1(SM_ADC_In), .C1(n4_adj_1103), 
    .B1(CS_Stable), .A1(ADC_Data_Received), .C0(\adc.o_Data_Received_N_577 ), 
    .A0(\adc.n7 ), .CLK(\adc.Clock_Stable ), .Q1(ADC_Data_Received), 
    .F0(n4_adj_1103), .F1(n5001));
  SLICE_501 SLICE_501( .D0(\Adder_Ready[0] ), .A0(\Adder_Ready[1] ), .F0(n308));
  SLICE_503 SLICE_503( .C0(n983), .B0(n987), .A0(\Adder_Start_1__N_111[0] ), 
    .F0(n8));
  SLICE_504 SLICE_504( .DI1(n7690), .D1(n4064), .C1(\Adder_Start_1__N_111[0] ), 
    .B1(n278), .A1(n988), .D0(\Harmonic[0] ), .C0(\Adder_Ready[0] ), 
    .B0(\Adder_Start_1__N_111[0] ), .A0(Sample_Ready), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(\Adder_Start_1__N_111[0] ), .F0(n6_adj_1107), 
    .F1(n7690));
  SLICE_505 SLICE_505( .F0(VCC_net));
  sample_position_SLICE_507 \sample_position.SLICE_507 ( 
    .D1(\sample_position.Accumulated_Offset[12] ), .C1(o_Freq_Too_High_N_366), 
    .B1(\Frequency[12] ), .D0(o_Freq_Too_High_N_366), .C0(\Frequency[7] ), 
    .A0(\sample_position.Accumulated_Offset[7] ), .F0(\sample_position.n6794 ), 
    .F1(\sample_position.n6784 ));
  sample_position_SLICE_508 \sample_position.SLICE_508 ( .D1(n5_adj_1109), 
    .B1(\sample_position.Accumulated_Frequency[15] ), .C0(n5_adj_1109), 
    .A0(\sample_position.Accumulated_Frequency[7] ), 
    .F0(\sample_position.n6795 ), .F1(\sample_position.n6779 ));
  sample_position_SLICE_509 \sample_position.SLICE_509 ( 
    .D1(o_Freq_Too_High_N_366), .B1(\sample_position.Accumulated_Offset[3] ), 
    .A1(\Frequency[3] ), .D0(o_Freq_Too_High_N_366), 
    .C0(\sample_position.Accumulated_Offset[1] ), .A0(\Frequency[1] ), 
    .F0(\sample_position.n6806 ), .F1(\sample_position.n6802 ));
  sample_position_SLICE_510 \sample_position.SLICE_510 ( .D1(n5_adj_1109), 
    .B1(\sample_position.Accumulated_Frequency[10] ), 
    .D0(\sample_position.Accumulated_Frequency[1] ), .C0(n5_adj_1109), 
    .F0(\sample_position.n6807 ), .F1(\sample_position.n6789 ));
  sample_position_SLICE_511 \sample_position.SLICE_511 ( 
    .D1(o_Freq_Too_High_N_366), .C1(\Frequency[6] ), 
    .B1(\sample_position.Accumulated_Offset[6] ), .D0(o_Freq_Too_High_N_366), 
    .B0(\sample_position.Accumulated_Offset[2] ), .A0(\Frequency[2] ), 
    .F0(\sample_position.n6804 ), .F1(\sample_position.n6796 ));
  sample_position_SLICE_512 \sample_position.SLICE_512 ( .D1(n5_adj_1109), 
    .B1(\sample_position.Accumulated_Frequency[12] ), .D0(n5_adj_1109), 
    .B0(\sample_position.Accumulated_Frequency[2] ), 
    .F0(\sample_position.n6805 ), .F1(\sample_position.n6785 ));
  sample_position_SLICE_513 \sample_position.SLICE_513 ( 
    .D1(o_Freq_Too_High_N_366), .C1(\sample_position.Accumulated_Offset[4] ), 
    .A1(\Frequency[4] ), .C0(\sample_position.Accumulated_Offset[8] ), 
    .B0(\Frequency[8] ), .A0(o_Freq_Too_High_N_366), 
    .F0(\sample_position.n6792 ), .F1(\sample_position.n6800 ));
  sample_position_SLICE_514 \sample_position.SLICE_514 ( .B1(n5_adj_1109), 
    .A1(\sample_position.Accumulated_Frequency[14] ), .C0(n5_adj_1109), 
    .B0(\sample_position.Accumulated_Frequency[8] ), 
    .F0(\sample_position.n6793 ), .F1(\sample_position.n6781 ));
  sample_position_SLICE_515 \sample_position.SLICE_515 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .F0(\sample_position.n1[7] ), .F1(\sample_position.n1[14] ));
  sample_position_SLICE_516 \sample_position.SLICE_516 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .C0(\sample_position.Accumulated_Freq_Offset[8] ), 
    .F0(\sample_position.n1[8] ), .F1(\sample_position.n1[4] ));
  sample_position_SLICE_517 \sample_position.SLICE_517 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .C0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .F0(\sample_position.n1[5] ), .F1(\sample_position.n1[6] ));
  sample_position_SLICE_520 \sample_position.SLICE_520 ( 
    .C1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .F0(\sample_position.n1[3] ), .F1(\sample_position.n1[12] ));
  sample_position_SLICE_521 \sample_position.SLICE_521 ( .D1(n5_adj_1109), 
    .A1(\sample_position.Accumulated_Frequency[13] ), 
    .D0(\sample_position.Accumulated_Frequency[4] ), .C0(n5_adj_1109), 
    .F0(\sample_position.n6801 ), .F1(\sample_position.n6783 ));
  sample_position_SLICE_524 \sample_position.SLICE_524 ( 
    .D1(o_Freq_Too_High_N_366), .B1(\sample_position.Accumulated_Offset[13] ), 
    .A1(\Frequency[13] ), .C0(\Frequency[15] ), 
    .B0(\sample_position.Accumulated_Offset[15] ), .A0(o_Freq_Too_High_N_366), 
    .F0(\sample_position.n6778 ), .F1(\sample_position.n6782 ));
  sample_position_SLICE_528 \sample_position.SLICE_528 ( 
    .C1(\sample_position.Accumulated_Offset[11] ), .B1(\Frequency[11] ), 
    .A1(o_Freq_Too_High_N_366), .D0(o_Freq_Too_High_N_366), 
    .B0(\Frequency[14] ), .A0(\sample_position.Accumulated_Offset[14] ), 
    .F0(\sample_position.n6780 ), .F1(\sample_position.n6786 ));
  sample_position_SLICE_531 \sample_position.SLICE_531 ( .C1(reset_n_c), 
    .D0(reset_n_c), .C0(n1278), .B0(n1277), .F0(\sample_position.n2897 ), 
    .F1(reset_n_N_191));
  sample_position_SLICE_536 \sample_position.SLICE_536 ( 
    .DI1(\sample_position.o_Sample_Ready_N_363 ), .D1(o_Freq_Too_High_N_366), 
    .B1(n1278), .D0(\Frequency[9] ), .C0(o_Freq_Too_High_N_366), 
    .B0(\sample_position.Accumulated_Offset[9] ), 
    .CE(\sample_position.n9_adj_1069 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(Sample_Ready), .F0(\sample_position.n6790 ), 
    .F1(\sample_position.o_Sample_Ready_N_363 ));
  sample_position_SLICE_537 \sample_position.SLICE_537 ( 
    .D1(\sample_position.Accumulated_Frequency[5] ), .B1(n5_adj_1109), 
    .C0(n5_adj_1109), .B0(\sample_position.Accumulated_Frequency[9] ), 
    .F0(\sample_position.n6791 ), .F1(\sample_position.n6799 ));
  sample_position_SLICE_538 \sample_position.SLICE_538 ( 
    .DI1(\o_Freq_Too_High_N_366.sig_030.FeedThruLUT ), 
    .C1(o_Freq_Too_High_N_366), .D0(\sample_position.Accumulated_Offset[10] ), 
    .C0(\Frequency[10] ), .B0(o_Freq_Too_High_N_366), 
    .CE(\sample_position.n4628 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(Freq_Too_High), .F0(\sample_position.n6788 ), 
    .F1(\o_Freq_Too_High_N_366.sig_030.FeedThruLUT ));
  sample_position_SLICE_540 \sample_position.SLICE_540 ( 
    .C1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .C0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .F0(\sample_position.n1[1] ), .F1(\sample_position.n1[2] ));
  sample_position_SLICE_542 \sample_position.SLICE_542 ( 
    .D0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .F0(\sample_position.n1[13] ));
  sample_position_SLICE_544 \sample_position.SLICE_544 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[0] ), 
    .C0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .F0(\sample_position.n1[11] ), .F1(\sample_position.n1[0] ));
  sample_position_SLICE_547 \sample_position.SLICE_547 ( 
    .D0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .F0(\sample_position.n1[9] ));
  sample_position_SLICE_548 \sample_position.SLICE_548 ( 
    .DI1(\adc.Data_State.sig_092.FeedThruLUT ), .A1(\adc.Data_State ), 
    .D0(\sample_position.Accumulated_Freq_Offset[10] ), .CE(\adc.n4566 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\ADC_Data[0][6] ), 
    .F0(\sample_position.n1[10] ), .F1(\adc.Data_State.sig_092.FeedThruLUT ));
  sample_position_SLICE_550 \sample_position.SLICE_550 ( 
    .D1(o_Freq_Too_High_N_366), .C1(\Frequency[0] ), 
    .B1(\sample_position.Accumulated_Offset[0] ), .D0(o_Freq_Too_High_N_366), 
    .B0(\Frequency[5] ), .A0(\sample_position.Accumulated_Offset[5] ), 
    .F0(\sample_position.n6798 ), .F1(\sample_position.n6808 ));
  SLICE_559 SLICE_559( .DI1(\mult.n1522 ), .D1(n1505), 
    .C1(\mult.n15_adj_1046 ), .D0(o_Comb_Muted_N_739), .C0(n1505), 
    .A0(Reset_Mult_Scaler), .LSR(Reset_Mult_Scaler), .CLK(Main_Clock), 
    .Q1(o_Comb_Muted_N_739), .F0(n2875), .F1(\mult.n1522 ));
  SLICE_561 SLICE_561( .F0(GND_net));
  SLICE_562 SLICE_562( .D0(\Harmonic[6] ), .A0(\Harmonic[7] ), .F0(n4548));
  SLICE_563 SLICE_563( .D0(\Harmonic[3] ), .C0(\Harmonic[2] ), 
    .B0(\Harmonic[1] ), .F0(n4446));
  genadder_0__adder_SLICE_565 \genadder[0].adder.SLICE_565 ( 
    .DI1(\Adder_Mult[8].sig_063.FeedThruLUT ), .B1(\Adder_Mult[8] ), 
    .D0(\genadder[0].adder.r_Multiple[4] ), 
    .C0(\genadder[0].adder.r_Multiple[2] ), .CE(\genadder[0].adder.n4645 ), 
    .LSR(\genadder[0].adder.n6058 ), .CLK(Main_Clock), 
    .Q1(\genadder[0].adder.r_Multiple[7] ), .F0(\genadder[0].adder.n10 ), 
    .F1(\Adder_Mult[8].sig_063.FeedThruLUT ));
  adc_SLICE_568 \adc.SLICE_568 ( .DI1(\i_ADC_Clock_c.sig_127.FeedThruLUT ), 
    .C1(i_ADC_Clock_c), .D0(i_ADC_Clock_c), .C0(reset_n_c), 
    .B0(\adc.Clock_State ), .CE(\adc.n3537 ), .CLK(Main_Clock), 
    .Q1(\adc.Clock_State ), .F0(\adc.n3537 ), 
    .F1(\i_ADC_Clock_c.sig_127.FeedThruLUT ));
  adc_SLICE_569 \adc.SLICE_569 ( .A0(CS_Stable), .F0(\adc.n2857 ));
  adc_SLICE_570 \adc.SLICE_570 ( .DI1(\adc.Data_State.sig_086.FeedThruLUT ), 
    .C1(\adc.Data_State ), .D0(\adc.Data_State ), .B0(i_ADC_Data_c), 
    .CE(\adc.n4578 ), .CLK(\adc.Clock_Stable ), .Q1(\ADC_Data[2][7] ), 
    .F0(\adc.CS_Stable_N_596 ), .F1(\adc.Data_State.sig_086.FeedThruLUT ));
  adc_SLICE_571 \adc.SLICE_571 ( .DI1(\adc.i_ADC_CS_c.sig_115.FeedThruLUT ), 
    .B1(\adc.i_ADC_CS_c ), .D0(SM_ADC_In), .B0(CS_Stable), .CE(\adc.n7911 ), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(CS_Stable), .F0(\adc.n5962 ), 
    .F1(\adc.i_ADC_CS_c.sig_115.FeedThruLUT ));
  adc_SLICE_572 \adc.SLICE_572 ( .DI1(\i_ADC_Data_c.sig_125.FeedThruLUT ), 
    .B1(i_ADC_Data_c), .D0(\adc.Data_State ), .B0(reset_n_c), 
    .A0(i_ADC_Data_c), .CE(\adc.n3531 ), .CLK(Main_Clock), 
    .Q1(\adc.Data_State ), .F0(\adc.n3531 ), 
    .F1(\i_ADC_Data_c.sig_125.FeedThruLUT ));
  adc_SLICE_573 \adc.SLICE_573 ( .DI1(\adc.i_ADC_CS_c.sig_124.FeedThruLUT ), 
    .B1(\adc.i_ADC_CS_c ), .D0(reset_n_c), .C0(\adc.i_ADC_CS_c ), 
    .A0(\adc.CS_State ), .CE(\adc.n3944 ), .CLK(Main_Clock), 
    .Q1(\adc.CS_State ), .F0(\adc.n3944 ), 
    .F1(\adc.i_ADC_CS_c.sig_124.FeedThruLUT ));
  adc_SLICE_574 \adc.SLICE_574 ( .DI1(n5016), .D1(n4642), 
    .C1(\Receive_Byte[0] ), .B1(SM_ADC_In), .A1(\adc.n7 ), 
    .D0(\Receive_Byte[0] ), .C0(\adc.n11 ), .B0(\adc.n4551 ), 
    .A0(\adc.Receive_Bit[3] ), .CLK(\adc.Clock_Stable ), 
    .Q1(\Receive_Byte[0] ), .F0(\adc.n4557 ), .F1(n5016));
  adc_SLICE_575 \adc.SLICE_575 ( .DI1(\adc.n1 ), .B1(\adc.Receive_Bit[0] ), 
    .D0(\adc.Receive_Bit[2] ), .C0(\adc.n4599 ), .B0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[0] ), .CE(\adc.n2857 ), .LSR(\adc.n5962 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\adc.Receive_Bit[0] ), .F0(\adc.n4600 ), 
    .F1(\adc.n1 ));
  adc_SLICE_576 \adc.SLICE_576 ( .C1(\adc.n12_adj_1052 ), .A1(\adc.n4559 ), 
    .B0(\adc.n12_adj_1052 ), .A0(\adc.n4551 ), .F0(\adc.n4558 ), 
    .F1(\adc.n4564 ));
  adc_SLICE_577 \adc.SLICE_577 ( .B1(\adc.n4567 ), .A1(\adc.n12_adj_1053 ), 
    .D0(\adc.n12_adj_1053 ), .B0(\adc.n4559 ), .F0(\adc.n4565 ), 
    .F1(\adc.n4572 ));
  adc_SLICE_578 \adc.SLICE_578 ( .C1(reset_n_c), .A1(\adc.n6200 ), 
    .D0(reset_n_c), .B0(\adc.n4928 ), .F0(\adc.n4948 ), .F1(\adc.n7708 ));
  mult_SLICE_589 \mult.SLICE_589 ( .DI1(\mult.o_Mult_8__N_700[0] ), 
    .D1(\Scale_Initial[0] ), .C1(Reset_Mult_Scaler), .B1(\mult.cout ), 
    .A1(\mult.n57[1] ), .D0(Reset_Mult_Scaler), .B0(\mult.n1502[0] ), 
    .CE(\mult.n4650 ), .CLK(Main_Clock), .Q1(\mult.Adder_Mult[0]_2 ), 
    .F0(n3559), .F1(\mult.o_Mult_8__N_700[0] ));
  mult_SLICE_591 \mult.SLICE_591 ( .DI1(\ADC_Data[1][8].sig_027.FeedThruLUT ), 
    .D1(\ADC_Data[1][8] ), .A0(\Harmonic_Scale[8] ), .CLK(ADC_Data_Received), 
    .Q1(\Harmonic_Scale[8] ), .F0(\mult.n1[8] ), 
    .F1(\ADC_Data[1][8].sig_027.FeedThruLUT ));
  mult_SLICE_592 \mult.SLICE_592 ( .A0(\Harmonic_Scale[6] ), .F0(\mult.n1[6] ));
  mult_SLICE_593 \mult.SLICE_593 ( .DI1(\adc.Data_State.sig_080.FeedThruLUT ), 
    .A1(\adc.Data_State ), .D0(\Harmonic_Scale[7] ), .CE(\adc.n4613 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\ADC_Data[2][1] ), .F0(\mult.n1[7] ), 
    .F1(\adc.Data_State.sig_080.FeedThruLUT ));
  mult_SLICE_594 \mult.SLICE_594 ( .C1(\Harmonic_Scale[1] ), 
    .C0(\Harmonic_Scale[4] ), .F0(\mult.n1[4] ), .F1(\mult.n1[1] ));
  mult_SLICE_595 \mult.SLICE_595 ( .B0(\Harmonic_Scale[5] ), .F0(\mult.n1[5] ));
  mult_SLICE_596 \mult.SLICE_596 ( .A0(\Harmonic_Scale[2] ), .F0(\mult.n1[2] ));
  mult_SLICE_597 \mult.SLICE_597 ( .B0(\Harmonic_Scale[3] ), .F0(\mult.n1[3] ));
  mult_SLICE_598 \mult.SLICE_598 ( .C0(\Harmonic_Scale[0] ), .F0(\mult.n1[0] ));
  mult_SLICE_600 \mult.SLICE_600 ( 
    .DI1(\Reset_Mult_Scaler_N_201.sig_064.FeedThruLUT ), 
    .D1(Reset_Mult_Scaler_N_201), .D0(o_Comb_Muted_N_739), 
    .B0(Reset_Mult_Scaler), .CE(n7587), .CLK(Main_Clock), 
    .Q1(Reset_Mult_Scaler), .F0(\mult.n2914 ), 
    .F1(\Reset_Mult_Scaler_N_201.sig_064.FeedThruLUT ));
  genadder_1__adder_SLICE_601 \genadder[1].adder.SLICE_601 ( 
    .DI1(\genadder[1].adder.Counter_4__N_642[4] ), 
    .D1(\genadder[1].adder.Counter[4] ), .C1(\genadder[1].adder.n3156 ), 
    .B1(\genadder[1].adder.n7717 ), .A1(\genadder[1].adder.Counter[3] ), 
    .D0(\genadder[1].adder.Counter[1] ), .C0(\genadder[1].adder.Counter[0] ), 
    .B0(\genadder[1].adder.Counter[2] ), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q1(\genadder[1].adder.Counter[4] ), .F0(\genadder[1].adder.n3156 ), 
    .F1(\genadder[1].adder.Counter_4__N_642[4] ));
  genadder_1__adder_SLICE_603 \genadder[1].adder.SLICE_603 ( 
    .B0(\genadder[1].adder.r_Multiple[2] ), 
    .A0(\genadder[1].adder.r_Multiple[4] ), .F0(\genadder[1].adder.n10 ));
  sample_output_SLICE_604 \sample_output.SLICE_604 ( 
    .DI1(\sample_output.n4998 ), .D1(\sample_output.n6405 ), 
    .C1(\sample_output.r_Sample_L[8] ), .A1(reset_n_c), .D0(reset_n_c), 
    .B0(DAC_Send_N_931), .CLK(Main_Clock), .Q1(\sample_output.r_Sample_L[8] ), 
    .F0(\sample_output.n4902 ), .F1(\sample_output.n4998 ));
  sample_output_SLICE_605 \sample_output.SLICE_605 ( 
    .DI1(\sample_output.dac.o_Ready_N_1030 ), .D1(n24), .B1(Clock_Counter), 
    .A1(\sample_output.dac.n9 ), .D0(\sample_output.DAC_Send_adj_1042 ), 
    .C0(DAC_Ready), .CE(\sample_output.dac.n4673 ), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(DAC_Ready), .F0(\sample_output.DAC_Send_N_939 ), 
    .F1(\sample_output.dac.o_Ready_N_1030 ));
  sample_output_dac_SLICE_607 \sample_output.dac.SLICE_607 ( 
    .DI1(\sample_output.Output_Data[6].sig_137.FeedThruLUT ), 
    .D1(\sample_output.Output_Data[6] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.r_Data_To_Send[17] ), 
    .CE(\sample_output.dac.n2837 ), .CLK(Main_Clock), 
    .Q1(\sample_output.dac.r_Data_To_Send[17] ), .F0(\sample_output.dac.n4 ), 
    .F1(\sample_output.Output_Data[6].sig_137.FeedThruLUT ));
  sample_output_dac_SLICE_610 \sample_output.dac.SLICE_610 ( 
    .DI1(\sample_output.DAC_Send_N_929 ), .D1(\sample_output.DAC_Send_N_939 ), 
    .C1(\sample_output.n7342 ), .B1(DAC_Send_N_933), .A1(DAC_Send_N_931), 
    .D0(\sample_output.DAC_Send_N_932 ), .C0(DAC_Ready), 
    .B0(\sample_output.SM_Sample_Output[2] ), 
    .A0(\sample_output.DAC_Send_adj_1042 ), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(\sample_output.DAC_Send_adj_1042 ), 
    .F0(\sample_output.n7342 ), .F1(\sample_output.DAC_Send_N_929 ));
  genadder_0__adder_SLICE_613 \genadder[0].adder.SLICE_613 ( 
    .DI1(\Adder_Clear_N_197.sig_062.FeedThruLUT ), .C1(Adder_Clear_N_197), 
    .D0(\genadder[0].adder.o_Done_N_699 ), .B0(\genadder[0].adder.n15 ), 
    .A0(Adder_Clear), .CE(n4758), .CLK(Main_Clock), .Q1(Adder_Clear), 
    .F0(\genadder[0].adder.n6058 ), 
    .F1(\Adder_Clear_N_197.sig_062.FeedThruLUT ));
  pll_48_lscc_pll_inst_u_PLL_B \pll_48.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(i_Clock_c), .FEEDBACK(\pll_48.lscc_pll_inst.feedback_w ), 
    .RESET_N(reset_n_c), .INTFBOUT(\pll_48.lscc_pll_inst.feedback_w ), 
    .OUTCORE(Main_Clock));
  i_ADC_CS i_ADC_CS_I( .PADDI(\adc.i_ADC_CS_c ), .i_ADC_CS(i_ADC_CS));
  i_Clock i_Clock_I( .PADDI(i_Clock_c), .i_Clock(i_Clock));
  o_DAC_CS o_DAC_CS_I( .PADDO(o_DAC_CS_c), .o_DAC_CS(o_DAC_CS));
  o_DAC_SCK o_DAC_SCK_I( .PADDO(o_DAC_SCK_c), .o_DAC_SCK(o_DAC_SCK));
  o_DAC_MOSI o_DAC_MOSI_I( .PADDO(o_DAC_MOSI_c), .o_DAC_MOSI(o_DAC_MOSI));
  test test_I( .PADDO(test_c), .test(test));
  debug debug_I( .PADDO(GND_net), .debug(debug));
  i_ADC_Clock i_ADC_Clock_I( .PADDI(i_ADC_Clock_c), .i_ADC_Clock(i_ADC_Clock));
  i_ADC_Data i_ADC_Data_I( .PADDI(i_ADC_Data_c), .i_ADC_Data(i_ADC_Data));
  reset_n reset_n_I( .PADDI(reset_n_c), .reset_n(reset_n));
endmodule

module sample_position_SLICE_0 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_11 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module sample_position_SLICE_1 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_831_add_4_9 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_831__i7 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_831__i8 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module sample_position_SLICE_2 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_9 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_3 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_7 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_4 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_5 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_5 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_3 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_6 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module sample_position_SLICE_7 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_831_add_4_7 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_831__i5 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_831__i6 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_8 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_831_add_4_5 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_831__i3 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_831__i4 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_9 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_831_add_4_3 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_831__i1 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_831__i2 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_10 ( input DI1, D1, C1, B1, CE, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_831_add_4_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_position/Accumulated_Frequency_831__i0 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_11 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_position/Accumulated_Freq_Offset_833_add_4_17 ( .A0(GNDI), 
    .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i15 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_12 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/Accumulated_Freq_Offset_833_add_4_15 ( .A0(GNDI), 
    .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i13 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i14 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_13 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/Accumulated_Freq_Offset_833_add_4_13 ( .A0(GNDI), 
    .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i11 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i12 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_14 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/Accumulated_Freq_Offset_833_add_4_11 ( .A0(GNDI), 
    .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i9 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i10 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_15 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/Accumulated_Freq_Offset_833_add_4_9 ( .A0(GNDI), 
    .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i7 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i8 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_16 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/Accumulated_Freq_Offset_833_add_4_7 ( .A0(GNDI), 
    .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i5 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i6 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_17 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/Accumulated_Freq_Offset_833_add_4_5 ( .A0(GNDI), 
    .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i3 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i4 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_18 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/Accumulated_Freq_Offset_833_add_4_3 ( .A0(GNDI), 
    .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i1 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i2 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_19 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_position/Accumulated_Freq_Offset_833_add_4_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_833__i0 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_20 ( input DI0, D1, D0, C0, B0, CE, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_831_add_4_17 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_831__i15 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_21 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_831_add_4_15 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_831__i13 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_831__i14 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_22 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_831_add_4_13 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_831__i11 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_831__i12 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_23 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_831_add_4_11 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_831__i9 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_831__i10 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_24 ( input D1, D0, C0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_17 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_25 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_15 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_26 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_13 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_27 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_830_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_830__i9( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_830__i10( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_28 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_830_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_830__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_830__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_29 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_830_add_4_15( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_830__i13( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_830__i14( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_30 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_830_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_830__i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_830__i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_31 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 Sample_Timer_830_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_830__i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_32 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_830_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_830__i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_830__i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_33 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 Harmonic_836_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Harmonic_836__i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_34 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Harmonic_836_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Harmonic_836__i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_836__i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_35 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Harmonic_836_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Harmonic_836__i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_836__i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_36 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Harmonic_836_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Harmonic_836__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_836__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_37 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 Harmonic_836_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_836__i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_38 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_830_add_4_13( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_830__i11( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_830__i12( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_39 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 Sample_Timer_830_add_4_17( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_830__i15( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_40 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_830_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_830__i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_830__i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mult_SLICE_41 ( input DI0, D1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \mult/add_12_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/Comb_Counter__i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mult_SLICE_42 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \mult/add_12_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/Comb_Counter__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \mult/Comb_Counter__i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mult_SLICE_43 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \mult/add_12_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/Comb_Counter__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \mult/Comb_Counter__i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mult_SLICE_44 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \mult/add_12_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/Comb_Counter__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \mult/Comb_Counter__i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mult_SLICE_45 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \mult/add_12_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mult/Comb_Counter__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mult_SLICE_46 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1386_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_47 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1386_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_48 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1386_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_49 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1386_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_50 ( input D1, C1, B1, D0, C0, B0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mult/add_1386_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_51 ( input DI1, DI0, A1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_51_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_51_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_52 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_52_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_52_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Comb_Interval_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_53 ( input DI0, B0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40004 test_I_101_1_lut( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 test_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_54 ( input DI1, DI0, D1, C1, B1, A1, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40005 i79_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 SLICE_54_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 SM_Top_FSM_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 SM_Top_FSM_i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xB3A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_55 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40007 reduce_or_172_i1_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40008 i1465_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 SM_Top_FSM_i10( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 SM_Top_FSM_i9( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xF0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_57 ( input DI1, DI0, B1, A1, C0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40009 i1_2_lut_adj_489( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 i159_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 SM_Top_FSM_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 SM_Top_FSM_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_58 ( input DI1, DI0, D1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_58_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_58_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Harmonic_Scale_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_59 ( input DI1, DI0, B1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_59_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_59_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Frequency_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_61 ( input DI1, DI0, B1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_61_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_61_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_63 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 SLICE_63_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_63_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_65 ( input DI1, DI0, C1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 SLICE_65_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_65_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_67 ( input DI1, DI0, B1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_67_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_67_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i9( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_69 ( input DI1, DI0, C1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 SLICE_69_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_69_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i11( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i10( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_71 ( input DI1, DI0, C1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 SLICE_71_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_71_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i13( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i12( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_73 ( input DI1, DI0, B1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_73_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_73_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i15( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i14( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_76 ( input DI1, DI0, B1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_76_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_76_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Harmonic_Scale_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_78 ( input DI1, DI0, D1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_78_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_78_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Harmonic_Scale_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_80 ( input DI1, DI0, B1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_80_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_80_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Harmonic_Scale_i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module sample_position_SLICE_86 ( input DI1, DI0, C1, A0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 \sample_position.SLICE_86_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \sample_position.SLICE_86_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_position/SM_Sample_Position_FSM_i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_position/SM_Sample_Position_FSM_i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_89 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \sample_position/mux_8_i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40015 \sample_position/mux_8_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xCAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xCAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_90 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, A0, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40016 \sample_position/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40017 \sample_position/i1_2_lut_3_lut_adj_478 ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/SM_Sample_Position_FSM_i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20018 \sample_position/SM_Sample_Position_FSM_i1 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xFF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x2200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20018 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module sample_position_SLICE_91 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40019 \sample_position/mux_8_i15_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 \sample_position/mux_8_i16_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset__i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset__i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xB888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xD888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_93 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40019 \sample_position/mux_8_i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 \sample_position/mux_8_i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset__i13 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_95 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40021 \sample_position/mux_8_i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 \sample_position/mux_8_i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xE4A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_97 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40022 \sample_position/mux_8_i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 \sample_position/mux_8_i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xD888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_99 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40023 \sample_position/mux_8_i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 \sample_position/mux_8_i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xACA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xB888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_101 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40022 \sample_position/mux_8_i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 \sample_position/mux_8_i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_104 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40021 \sample_position/mux_8_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40025 \sample_position/mux_8_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xE4A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_110 ( input DI1, DI0, C1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 SLICE_110_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_110_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_112 ( input DI1, DI0, D1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_112_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_112_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_114 ( input DI1, DI0, C1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 SLICE_114_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_114_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_117 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 SLICE_117_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_117_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Freq_Scale_i14( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i15( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_119 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 SLICE_119_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_119_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Freq_Scale_i12( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i13( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_121 ( input DI1, DI0, A1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_121_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_121_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Freq_Scale_i10( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i11( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_123 ( input DI1, DI0, D1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_123_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_123_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i9( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_125 ( input DI1, DI0, A1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_125_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_125_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_127 ( input DI1, DI0, B1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_127_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_127_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_129 ( input DI1, DI0, B1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_129_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_129_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Freq_Scale_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_132 ( input DI0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40006 SLICE_132_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Scale_Initial_i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_133 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_133_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_133_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_135 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_135_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_135_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_137 ( input DI1, DI0, B1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_137_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_137_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_140 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40026 i1_4_lut_adj_481( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i1_4_lut_adj_479( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 Adder_Start__i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Adder_Start__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xE0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xE0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_142 ( input DI1, DI0, B1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 SLICE_142_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_142_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module genadder_0__adder_SLICE_145 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40028 \genadder[0].adder/mux_516_i2_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40015 \genadder[0].adder/mux_516_i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/r_Multiple__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \genadder[0].adder/r_Multiple__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xF088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_146 ( input DI1, DI0, D1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40029 \genadder[0].adder/i1_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 \genadder[0].adder/i3864_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20031 \genadder[0].adder/Counter_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20031 \genadder[0].adder/Counter_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x2288") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x50DC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20031 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module genadder_0__adder_SLICE_147 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40032 \genadder[1].adder/i3852_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40033 \genadder[0].adder/i3909_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20034 \genadder[1].adder/o_Done ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20034 \genadder[0].adder/o_Done ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x00F2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xF530") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20034 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module genadder_0__adder_SLICE_149 ( input DI0, D0, C0, B0, A0, CE, CLK, 
    output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40025 \genadder[0].adder/mux_516_i7_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/r_Multiple__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module genadder_0__adder_SLICE_150 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40014 \genadder[0].adder/mux_516_i5_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40035 \genadder[0].adder/mux_516_i6_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/r_Multiple__i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \genadder[0].adder/r_Multiple__i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xAAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_152 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40036 \genadder[0].adder/mux_516_i3_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40037 \genadder[0].adder/mux_516_i4_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/r_Multiple__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \genadder[0].adder/r_Multiple__i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xACA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_156 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40038 \genadder[0].adder/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40039 \genadder[0].adder/i1_3_lut_4_lut_adj_477 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20031 \genadder[0].adder/Counter_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20031 \genadder[0].adder/Counter_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x0220") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x48C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_162 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_162_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i13 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_163 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_163_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i14 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_164 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40013 \adc.SLICE_164_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i15 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_165 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_165_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i16 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_166 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_166_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i17 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_167 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_167_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i18 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_168 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_168_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i19 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_169 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_169_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i20 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_170 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_170_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i21 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_171 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_171_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i22 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_172 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_172_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i23 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_173 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_173_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i24 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_174 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_174_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i25 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_175 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_175_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i33 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_177 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_177_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i35 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_178 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_178_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i36 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_179 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_179_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i37 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_180 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_180_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i38 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_181 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_181_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i39 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_183 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_183_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_184 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_184_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_185 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_185_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i41 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_186 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_186_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_187 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40013 \adc.SLICE_187_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_189 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_189_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_190 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_190_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_191 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40013 \adc.SLICE_191_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_192 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_192_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_193 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_193_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_194 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_194_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i49 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_195 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_195_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i50 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_196 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_196_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i51 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_197 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_197_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i52 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_198 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_198_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i53 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_199 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_199_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i54 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_200 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_200_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i55 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_201 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_201_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i56 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_202 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_202_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i57 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_203 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_203_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i58 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_204 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_204_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i59 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_205 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_205_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i60 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_209 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_209_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i61 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_210 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40013 \adc.SLICE_210_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i62 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_211 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_211_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i63 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_212 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_212_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i64 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_213 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_213_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i65 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_215 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_215_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i66 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_216 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_216_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i67 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_217 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_217_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i68 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_218 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40013 \adc.SLICE_218_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i69 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_219 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40003 \adc.SLICE_219_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i70 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_220 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_220_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i71 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_221 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_221_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i72 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_222 ( input DI1, DI0, C1, A1, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40040 \adc/i4694_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \adc/i4692_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \adc/Count_Stable_835__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \adc/Count_Stable_835__i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x5A5A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_223 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_223_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_226 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 SLICE_226_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/Clock_Stable_c ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_229 ( input DI0, D0, C0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40041 \adc/i4701_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/Count_Stable_835__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x3CF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_230 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_230_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_231 ( input DI1, DI0, D1, C1, B1, D0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \adc/i1000_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 \adc/i993_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \adc/Receive_Bit_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \adc/Receive_Bit_i0_i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x3CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x55AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_234 ( input DI1, DI0, D1, C1, B1, D0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \adc/i1029_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 \adc/i1022_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \adc/Receive_Byte_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \adc/Receive_Byte_i0_i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module adc_SLICE_236 ( input DI0, D0, C0, B0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40044 \adc/i1036_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/Receive_Byte_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x6CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_240 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40045 \mult/o_Mult_8__I_0_i8_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \mult/o_Mult_8__I_0_i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xF088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xEA40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_242 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40019 \mult/o_Mult_8__I_0_i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40047 \mult/o_Mult_8__I_0_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xCAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_244 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40048 \mult/i1_4_lut_adj_469 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \mult/reduce_or_280_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20018 \mult/SM_Scale_Mult_FSM_i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mult/SM_Scale_Mult_FSM_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x88F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_246 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40022 \mult/o_Mult_8__I_0_i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40037 \mult/o_Mult_8__I_0_i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module mult_SLICE_248 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40045 \mult/o_Mult_8__I_0_i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \mult/o_Mult_8__I_0_i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_252 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40006 SLICE_252_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Comb_Muted ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_255 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40050 \genadder[1].adder/mux_518_i2_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40015 \genadder[1].adder/mux_518_i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/r_Multiple__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \genadder[1].adder/r_Multiple__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xAAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_256 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40051 \genadder[1].adder/i1_3_lut_4_lut_adj_467 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40052 \genadder[1].adder/i44_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20031 \genadder[1].adder/Counter_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20031 \genadder[1].adder/Counter_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x0208") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x4F44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_257 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \genadder[1].adder.i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40054 \genadder[1].adder/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20031 \genadder[1].adder/Counter_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20031 \genadder[1].adder/Counter_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x1040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x7800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_261 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40055 \genadder[1].adder/mux_518_i5_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40056 \genadder[1].adder/mux_518_i6_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/r_Multiple__i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \genadder[1].adder/r_Multiple__i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xB888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xE4A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_263 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40057 \genadder[1].adder/mux_518_i3_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40020 \genadder[1].adder/mux_518_i4_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/r_Multiple__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \genadder[1].adder/r_Multiple__i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_266 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40006 SLICE_266_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \genadder[1].adder/r_Multiple__i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_269 ( input DI0, C0, B0, A0, CE, LSR, CLK, output 
    Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40058 \sample_output/dac/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20018 \sample_output/Output_Data_i0_i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x1010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_271 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40059 \sample_output/dac/i1_3_lut_4_lut_4_lut_adj_463 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40060 \sample_output/dac/i1_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20018 \sample_output/Output_Data_i0_i20 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20018 \sample_output/Output_Data_i0_i21 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xF3A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xDCD0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_273 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40061 \sample_output/i1485_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \sample_output/i112_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/SM_Sample_Output_FSM_i3 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20018 \sample_output/SM_Sample_Output_FSM_i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xFFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0x0ECE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_274 ( input DI1, DI0, C1, B1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40063 \sample_output/dac/i1_3_lut_adj_459 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \sample_output.SLICE_274_K0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/SM_Sample_Output_FSM_i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_output/SM_Sample_Output_FSM_i4 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x3232") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_278 ( input DI1, DI0, D1, B1, A1, D0, C0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 \sample_output/dac/i1_3_lut_adj_452 ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 \sample_output/dac/i1_3_lut_adj_451 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \sample_output/r_Sample_L__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_output/r_Sample_L__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xAA88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xFA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_280 ( input DI0, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, F0 );
  wire   DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40067 \sample_output/dac/i1_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20018 \sample_output/Output_Data_i0_i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x3050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_281 ( input DI0, C0, B0, A0, CE, LSR, CLK, output 
    Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40068 \sample_output/dac/i1_2_lut_3_lut_adj_457 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20018 \sample_output/Output_Data_i0_i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x1010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_282 ( input DI0, D0, C0, B0, CE, LSR, CLK, output 
    Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40069 \sample_output/dac/i1_2_lut_3_lut_adj_458 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20018 \sample_output/Output_Data_i0_i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x000C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_284 ( input DI1, DI0, D1, C0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40070 \sample_output/dac/i1348_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \sample_output/dac/i4716_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/Current_Bit_837__i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/dac/Current_Bit_837__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0x5A5A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_285 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40072 \sample_output/dac/i4730_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40073 \sample_output/dac/i4723_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/dac/Current_Bit_837__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/dac/Current_Bit_837__i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x6CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0x3CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_287 ( input DI0, D0, B0, A0, CE, LSR, CLK, 
    output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40074 \sample_output/dac/i2_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/dac/o_SPI_Data ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0x2200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_289 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40075 \sample_output/dac/i1_2_lut_3_lut_4_lut_adj_462 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40076 \sample_output/dac/i6123_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/dac/SM_DAC_Out_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/dac/SM_DAC_Out_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_292 ( input DI0, C0, CE, LSR, CLK, output Q0, 
    F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40013 \sample_output.dac.i3849_2_lut ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20018 \sample_output/dac/o_SPI_CS ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_294 ( input DI1, DI0, C1, C0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40012 \sample_output.SLICE_294_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \sample_output.SLICE_294_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_296 ( input DI1, DI0, A1, C0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 \sample_output.SLICE_296_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \sample_output.SLICE_296_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_298 ( input DI1, DI0, A1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_298_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 SLICE_298_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_304 ( input DI0, C0, B0, A0, LSR, CLK, output Q0, 
    F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40077 \sample_output/i1929_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/SM_Sample_Output_FSM_i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xA8A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_305 ( input D1, C1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40078 \sample_output/dac/i691_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \sample_output/dac/i20_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0x1B11") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_306 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40080 \sample_output/dac/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40081 \sample_output/dac/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x7F73") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0x0104") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_307 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40082 i2_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 i16_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xA820") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_309 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40084 i1_4_lut_adj_483( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 i1_4_lut_adj_484( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xC8C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xA0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_311 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40086 i1_3_lut_4_lut_adj_486( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40087 i3149_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xF200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_313 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output Q1, 
    F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40088 i5920_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40089 i1_4_lut_adj_488( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/SM_DAC_Out_i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x8DFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x0106") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_314 ( input C1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40090 i5969_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \sample_output/dac/i721_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x5F5F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0x40FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_315 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40092 i1_4_lut_adj_498( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 i1_4_lut_adj_499( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xF800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0x88A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_317 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40094 \sample_output/i1_4_lut_adj_464 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40095 \sample_output/i1_4_lut_adj_465 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xF800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xC840") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_319 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40096 \sample_output/dac/n8612_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40097 \sample_output/dac/Current_Bit[0]_bdd_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xE5E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xF838") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_321 ( input D1, C1, A1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40098 \sample_output/dac/i4058_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \sample_output/dac/i1_4_lut_4_lut_adj_461 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xF0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0x0116") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_323 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40100 i5977_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40101 i1_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0x5D55") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x5545") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_325 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40102 i3951_2_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 i3947_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xAA8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_326 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40104 i1_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40105 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x3B3B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_327 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40106 \sample_position/i4886_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_328 ( input D1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40108 \sample_position/i4881_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40109 \sample_position/i4878_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_329 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40110 \sample_position/LessThan_5_i26_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \sample_position/LessThan_5_i24_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_330 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40112 \sample_position/LessThan_5_i30_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \sample_position/LessThan_5_i28_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_332 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40113 \sample_position/LessThan_5_i22_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \sample_position/LessThan_5_i20_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_334 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40114 \sample_position/LessThan_5_i18_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40115 \sample_position/LessThan_5_i16_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xB2B2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_336 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40112 \sample_position/LessThan_5_i14_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \sample_position/LessThan_5_i12_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_337 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40116 \sample_position/i1_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40117 \sample_position/i5758_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xF7D5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0xFFC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_339 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40118 \sample_position/i5795_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40119 \sample_position/i5764_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xEAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_340 ( input D1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40120 \sample_position/i4853_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 \sample_position/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_342 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40122 \sample_position/LessThan_5_i10_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \sample_position/LessThan_5_i8_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_344 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40124 \sample_position/i5806_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40125 \sample_position/i3_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0xFE00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_346 ( input D1, C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40112 \sample_position/LessThan_5_i6_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40126 \sample_position/LessThan_5_i4_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0x4D44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_347 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40127 \sample_position/i3991_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40128 i1_2_lut_adj_491( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xE400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xEAFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_349 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40129 \sample_position/i5982_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40130 \sample_position/i5793_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xFD75") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_351 ( input C1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40131 \sample_position/unary_minus_6_inv_0_i16_1_lut ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40132 \sample_position/LessThan_5_i32_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_353 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40133 i9_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40134 i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_354 ( input D0, C0, B0, A0, output F0 );

  lut40135 i6_4_lut_adj_487( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_355 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40136 i1_4_lut_adj_490( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40137 i1_2_lut_4_lut_adj_485( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_357 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40138 i4_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40139 i1_2_lut_3_lut_adj_492( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_359 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40140 \genadder[0].adder/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_360 ( input D1, C1, B1, A1, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40141 \genadder[0].adder/i5564_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40130 \genadder[0].adder/i5552_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_361 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40142 \genadder[0].adder/i3880_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_362 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40143 \genadder[0].adder/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40144 \genadder[0].adder/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_363 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40145 \adc/i6096_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40146 \adc/i6090_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0x0033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0x0505") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_364 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40147 \adc/i6108_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40148 \adc/equal_763_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0x0303") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_365 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40149 \adc/i6081_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40150 \adc/equal_767_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0xEFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_366 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40151 \adc/i1_2_lut_3_lut_4_lut_adj_473 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40010 \adc/i3929_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_367 ( input B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40152 \adc/i6054_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40153 \adc/i6042_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0x1111") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_368 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40154 \adc/i1_2_lut_3_lut_4_lut_adj_474 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40155 \adc/equal_778_i8_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_369 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40145 \adc/i6063_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40156 \adc/i6069_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0x0505") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_371 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40157 \adc/i6075_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40158 \adc/equal_764_i8_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0xFF33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_373 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40159 \adc/i5966_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \adc/i4068_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0x3F3F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40160 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_376 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40161 \adc/i1_2_lut_3_lut_4_lut_adj_470 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40162 \adc/i1_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40162 ( input A, B, C, D, output Z );

  LUT4 #("0xFF55") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_377 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40163 \adc/i6036_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40164 \adc/equal_761_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  LUT4 #("0x0505") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40164 ( input A, B, C, D, output Z );

  LUT4 #("0xBFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_379 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40163 \adc/i6030_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40165 \adc/equal_791_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40165 ( input A, B, C, D, output Z );

  LUT4 #("0xFFDF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_382 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40166 \adc/i6027_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40167 \adc/i6003_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40167 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_383 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40168 \adc/i6057_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40169 \adc/equal_792_i10_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40169 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_385 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40170 \adc/i5958_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40171 \adc/i6084_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40171 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_386 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40172 \adc.i6114_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40173 \adc/equal_764_i11_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40173 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_387 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 \adc/i5946_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40175 \adc/i5949_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40175 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_388 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40176 \adc/i1_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \adc/equal_785_i9_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40176 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40177 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_389 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40178 \adc/i5943_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40179 \adc/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40179 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_391 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40180 \adc/i2_3_lut_4_lut_adj_475 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \adc/i_SPI_CS_I_0_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_393 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40147 \adc/i5994_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40181 \adc/i1_2_lut_3_lut_4_lut_adj_471 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_395 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40182 \adc/i5974_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40183 \adc/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  LUT4 #("0x3111") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40183 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_396 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40184 \adc.i2803_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40185 \adc/i3_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  LUT4 #("0x1033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40185 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_397 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40186 \adc/i6105_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40187 \adc/i6078_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40186 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40187 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_400 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40188 \adc/i6111_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40189 \adc.i6087_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  LUT4 #("0x0155") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40189 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_402 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40163 \adc/i6120_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40190 \adc/equal_794_i12_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_403 ( input D0, C0, B0, A0, output F0 );

  lut40191 \adc/i5991_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_407 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40192 \mult/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40193 \mult/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40193 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_408 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40194 \mult/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40195 \mult/i2_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40195 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_409 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40196 \mult/i7_4_lut_adj_468 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40197 \mult/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40197 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_410 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40198 \mult/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40199 \mult/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40199 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_411 ( input D1, C1, A1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40200 \genadder[1].adder/i5925_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40201 \genadder[1].adder/i3873_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  LUT4 #("0x5550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40201 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_412 ( input DI1, D1, C1, B1, A1, C0, B0, A0, CE, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40202 \genadder[1].adder/mux_518_i7_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40203 \genadder[1].adder.i5963_2_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \genadder[1].adder/r_Multiple__i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  LUT4 #("0xE2C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40203 ( input A, B, C, D, output Z );

  LUT4 #("0x1010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_414 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40204 \genadder[1].adder/i3_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40205 \genadder[1].adder/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40205 ( input A, B, C, D, output Z );

  LUT4 #("0x1100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_415 ( input D1, C1, A1, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40206 \genadder[1].adder/i1_2_lut_3_lut_adj_466 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40207 \genadder[1].adder/i2_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40206 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40207 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_417 ( input D1, C1, B1, A1, D0, C0, output F0, 
    F1 );
  wire   GNDI;

  lut40138 \genadder[1].adder/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40208 \genadder[1].adder/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_418 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40209 \genadder[1].adder/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40210 \genadder[1].adder/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40210 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_419 ( input D1, C1, B1, A1, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40211 \sample_output/dac/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40212 \sample_output/dac/i21_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40212 ( input A, B, C, D, output Z );

  LUT4 #("0x5858") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_421 ( input D1, C1, B1, A1, D0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40213 \sample_output/dac/i2799_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40173 \sample_output/dac/SM_DAC_Out_4__I_0_65_i8_2_lut ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  LUT4 #("0xFB00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_423 ( input D1, C1, B1, A1, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40214 \sample_output/dac/i4_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40121 \sample_output/dac/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_425 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40215 \sample_output/dac/Current_Bit_4__I_0_i31_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40216 \sample_output/dac/Current_Bit_4__I_0_i15_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40215 ( input A, B, C, D, output Z );

  LUT4 #("0x22F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40216 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_426 ( input D1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40108 \sample_output/dac/i5753_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40217 \sample_output/dac/i5562_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40217 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_428 ( input D1, C1, B1, A1, D0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40218 \sample_output/dac/Current_Bit_4__I_0_i14_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40219 \sample_output/dac/i5809_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40218 ( input A, B, C, D, output Z );

  LUT4 #("0x9810") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40219 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_429 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40220 \sample_output/dac/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40221 \sample_output/dac/i2_3_lut_4_lut_adj_455 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40220 ( input A, B, C, D, output Z );

  LUT4 #("0xF3F7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40221 ( input A, B, C, D, output Z );

  LUT4 #("0x0006") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_430 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CE, LSR, CLK, output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40222 \sample_output/dac/i4737_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40223 \sample_output/dac/i5573_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/Current_Bit_837__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40222 ( input A, B, C, D, output Z );

  LUT4 #("0x78F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40223 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_431 ( input D1, C1, B1, A1, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40224 \sample_output/dac/i2_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40130 \sample_output/dac/i3870_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40224 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_433 ( input C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40225 \sample_position.i2820_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40226 \sample_output/dac/i6126_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40225 ( input A, B, C, D, output Z );

  LUT4 #("0x0808") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40226 ( input A, B, C, D, output Z );

  LUT4 #("0x3373") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_434 ( input DI1, D1, C1, D0, C0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40227 i2886_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40228 \sample_output/dac/i1_3_lut_adj_454 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/Clock_Counter_c ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40227 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40228 ( input A, B, C, D, output Z );

  LUT4 #("0x0FAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_435 ( input D1, C1, B1, A1, D0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40229 \sample_output/dac/i1418_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40230 \sample_output/dac/i5528_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40229 ( input A, B, C, D, output Z );

  LUT4 #("0x33AF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40230 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_436 ( input D1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40231 \sample_output/dac/i4719_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40232 \sample_output/dac/i3_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40231 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40232 ( input A, B, C, D, output Z );

  LUT4 #("0xCFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_438 ( input D0, C0, B0, A0, output F0 );

  lut40233 \sample_output/dac/i2_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40233 ( input A, B, C, D, output Z );

  LUT4 #("0xBFBB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_439 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40234 i5571_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40235 i1_2_lut_4_lut_adj_493( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40234 ( input A, B, C, D, output Z );

  LUT4 #("0xFE00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40235 ( input A, B, C, D, output Z );

  LUT4 #("0x4C08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_440 ( input DI1, D1, C1, A1, D0, C0, B0, A0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40236 SLICE_440_K1( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 i5522_2_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 SM_Top_FSM_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  LUT4 #("0x50FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40237 ( input A, B, C, D, output Z );

  LUT4 #("0x75FD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_441 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40238 \adc/i5937_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40239 \adc/i5931_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40239 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_445 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40240 \adc/i6000_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40241 \adc/i5997_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40240 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40241 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_447 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40242 \adc/i5980_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40243 \adc/i5961_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40242 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40243 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_449 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40244 \adc/i6099_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40245 \adc/i6102_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40245 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_451 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40246 \adc/i6021_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40247 \adc/i6024_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40246 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40247 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_454 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40248 \adc/i1007_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40249 \adc.i5952_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/Receive_Bit_i0_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  LUT4 #("0x78F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40249 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_455 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40242 \adc/i6045_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40243 \adc/i6048_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_457 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output Q1, 
    F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40250 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40251 i1_4_lut_adj_480( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 Next_Sample_c( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40250 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40251 ( input A, B, C, D, output Z );

  LUT4 #("0xF020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_459 ( input DI1, D1, C1, A1, D0, C0, B0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40252 i1_3_lut_adj_496( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40253 i1_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_position/SM_Sample_Position_FSM_i5 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40252 ( input A, B, C, D, output Z );

  LUT4 #("0xAAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40253 ( input A, B, C, D, output Z );

  LUT4 #("0xE200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_461 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40254 i1_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40255 i3949_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40254 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40255 ( input A, B, C, D, output Z );

  LUT4 #("0xCC8C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_463 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40256 i4001_2_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40257 i3948_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40256 ( input A, B, C, D, output Z );

  LUT4 #("0xF0B0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40257 ( input A, B, C, D, output Z );

  LUT4 #("0xF0D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_465 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40258 i3954_2_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40255 i3950_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40258 ( input A, B, C, D, output Z );

  LUT4 #("0xA8AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_467 ( input DI1, D1, C1, B1, A1, D0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40259 \genadder[0].adder/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40260 \genadder[0].adder/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20031 \genadder[0].adder/Counter_i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40259 ( input A, B, C, D, output Z );

  LUT4 #("0x2080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40260 ( input A, B, C, D, output Z );

  LUT4 #("0xCC44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_468 ( input C1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40261 \genadder[0].adder/i865_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40262 \genadder[0].adder/i5928_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40261 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40262 ( input A, B, C, D, output Z );

  LUT4 #("0x4450") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_469 ( input C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40263 \genadder[0].adder/i1060_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40264 \genadder[0].adder/i1067_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40263 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40264 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_472 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40166 \adc/i5955_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40265 \adc/i6051_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40265 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_475 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40266 \adc/i6039_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40267 \adc/i6117_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40266 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40267 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_477 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40268 \adc/i6015_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40269 \adc/i6093_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40268 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40269 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_479 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40270 \adc/i6072_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40271 \adc/i6066_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40270 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40271 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_481 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40272 \adc.i6033_2_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40273 \adc/i6060_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40272 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40273 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_483 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40274 \adc.i6009_2_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40275 \adc/i5985_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40274 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40275 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_485 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40276 \mult/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40277 \mult/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40276 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40277 ( input A, B, C, D, output Z );

  LUT4 #("0xF8F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_488 ( input DI1, D1, C1, B1, A1, D0, C0, A0, CE, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40278 \sample_output/dac/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40279 \sample_output/dac/i1_2_lut_3_lut_adj_460 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/dac/SM_DAC_Out_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40278 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40279 ( input A, B, C, D, output Z );

  LUT4 #("0x005A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_489 ( input D0, C0, B0, A0, output F0 );

  lut40280 i5560_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40280 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_490 ( input DI1, D1, C1, B1, D0, C0, B0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40281 i1469_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40282 i1_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 SM_Top_FSM_i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40281 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40282 ( input A, B, C, D, output Z );

  LUT4 #("0xAA8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_493 ( input DI1, D1, C1, B1, A1, C0, B0, A0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40283 i2904_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40284 i1_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_Ready ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40283 ( input A, B, C, D, output Z );

  LUT4 #("0x7F22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40284 ( input A, B, C, D, output Z );

  LUT4 #("0x2020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_494 ( input DI1, D1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40285 i1_2_lut_3_lut_adj_497( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40286 i1_4_lut_adj_500( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 SM_Top_FSM_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40285 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40286 ( input A, B, C, D, output Z );

  LUT4 #("0xFE00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_495 ( input DI1, B1, D0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40011 \sample_output.SLICE_495_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40287 \sample_output/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 DAC_Send_c( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40287 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_496 ( input DI1, C1, B1, A1, D0, C0, B0, A0, CE, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40288 \sample_output/select_487_Select_17_i1_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40289 \sample_output/dac/i2_3_lut_4_lut_adj_456 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20018 \sample_output/Output_Data_i0_i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40288 ( input A, B, C, D, output Z );

  LUT4 #("0xA8A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40289 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_497 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40290 i2891_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40291 \mult/i419_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Start_Mult_Scaler_c( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40290 ( input A, B, C, D, output Z );

  LUT4 #("0x32F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40291 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_498 ( input DI1, D1, C1, B1, C0, A0, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40292 \mult.i1_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40293 \mult/i873_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mult/SM_Scale_Mult_FSM_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40292 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40293 ( input A, B, C, D, output Z );

  LUT4 #("0xAFAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_499 ( input DI1, D1, B1, A1, D0, C0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40294 \adc/i5922_2_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40295 \adc/i1_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20031 \adc/SM_ADC_In_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40294 ( input A, B, C, D, output Z );

  LUT4 #("0xBBFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40295 ( input A, B, C, D, output Z );

  LUT4 #("0x00AF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_500 ( input DI1, D1, C1, B1, A1, C0, A0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40296 i2882_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40297 \adc/i1_2_lut_adj_472 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/o_Data_Received ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40296 ( input A, B, C, D, output Z );

  LUT4 #("0xAB88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40297 ( input A, B, C, D, output Z );

  LUT4 #("0xAFAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_501 ( input D0, A0, output F0 );
  wire   GNDI;

  lut40298 i27_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40298 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_503 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40299 i1_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40299 ( input A, B, C, D, output Z );

  LUT4 #("0xABAB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_504 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40300 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40301 i1_4_lut_adj_482( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 SM_Top_FSM_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40300 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40301 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_505 ( output F0 );
  wire   GNDI;

  lut40302 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40302 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_507 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40303 \sample_position/i4877_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40304 \sample_position/i4888_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40303 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40304 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_508 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40120 \sample_position/i4858_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40305 \sample_position/i4885_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40305 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_509 ( input D1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40306 \sample_position/i4891_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40307 \sample_position/i4866_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40306 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40307 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_510 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40120 \sample_position/i4884_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40109 \sample_position/i4861_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_511 ( input D1, C1, B1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40308 \sample_position/i4883_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40309 \sample_position/i4875_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40308 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40309 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_512 ( input D1, B1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40120 \sample_position/i4873_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40291 \sample_position/i4869_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_513 ( input D1, C1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40310 \sample_position/i4860_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40311 \sample_position/i4863_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40310 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40311 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_514 ( input B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40312 \sample_position/i4847_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40313 \sample_position/i4848_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40312 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40313 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_515 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40070 \sample_position/unary_minus_6_inv_0_i15_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40314 \sample_position/unary_minus_6_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40314 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_516 ( input D1, C0, output F0, F1 );
  wire   GNDI;

  lut40070 \sample_position/unary_minus_6_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40315 \sample_position/unary_minus_6_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40315 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_517 ( input D1, C0, output F0, F1 );
  wire   GNDI;

  lut40070 \sample_position/unary_minus_6_inv_0_i7_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40315 \sample_position/unary_minus_6_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_520 ( input C1, D0, output F0, F1 );
  wire   GNDI;

  lut40131 \sample_position/unary_minus_6_inv_0_i13_1_lut ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40314 \sample_position/unary_minus_6_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_521 ( input D1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40108 \sample_position/i4889_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40109 \sample_position/i4892_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_524 ( input D1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40306 \sample_position/i4894_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40316 \sample_position/i4871_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40316 ( input A, B, C, D, output Z );

  LUT4 #("0xD8D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_528 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40317 \sample_position/i4857_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40318 \sample_position/i4855_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40317 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40318 ( input A, B, C, D, output Z );

  LUT4 #("0xAACC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_531 ( input C1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40131 reset_n_I_0_1_lut( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40319 \sample_position/i1_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40319 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_536 ( input DI1, D1, B1, D0, C0, B0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40320 \sample_position/i1_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40321 \sample_position/i4880_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/o_Sample_Ready ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40320 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40321 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_537 ( input D1, B1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40254 \sample_position/i4864_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40313 \sample_position/i4872_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_538 ( input DI1, C1, D0, C0, B0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40012 \sample_position.SLICE_538_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40322 \sample_position/i4852_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/o_Freq_Too_High ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40322 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_540 ( input C1, C0, output F0, F1 );
  wire   GNDI;

  lut40131 \sample_position/unary_minus_6_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40315 \sample_position/unary_minus_6_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_542 ( input D0, output F0 );
  wire   GNDI;

  lut40314 \sample_position/unary_minus_6_inv_0_i14_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_544 ( input D1, C0, output F0, F1 );
  wire   GNDI;

  lut40070 \sample_position/unary_minus_6_inv_0_i1_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40315 \sample_position/unary_minus_6_inv_0_i12_1_lut ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_547 ( input D0, output F0 );
  wire   GNDI;

  lut40314 \sample_position/unary_minus_6_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_548 ( input DI1, A1, D0, CE, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut4 \sample_position.SLICE_548_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40314 \sample_position/unary_minus_6_inv_0_i11_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \adc/r_Bytes_In[0]__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_550 ( input D1, C1, B1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40308 \sample_position/i4850_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40318 \sample_position/i4868_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_559 ( input DI1, D1, C1, D0, C0, A0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40323 \mult/i282_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40324 i870_2_lut_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \mult/SM_Scale_Mult_FSM_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40323 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40324 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_561 ( output F0 );
  wire   GNDI;

  lut40325 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40325 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_562 ( input D0, A0, output F0 );
  wire   GNDI;

  lut40326 i1_2_lut_adj_494( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40326 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_563 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40139 i2_3_lut_adj_495( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_565 ( input DI1, B1, D0, C0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40011 \genadder[0].adder.SLICE_565_K1 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40327 \genadder[0].adder/i2_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \genadder[0].adder/r_Multiple__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40327 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_568 ( input DI1, C1, D0, C0, B0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40012 \adc.SLICE_568_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40328 \adc/i1436_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/Clock_State_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40328 ( input A, B, C, D, output Z );

  LUT4 #("0x30C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_569 ( input A0, output F0 );
  wire   GNDI;

  lut40329 \adc/i859_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40329 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_570 ( input DI1, C1, D0, B0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40012 \adc.SLICE_570_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40330 \adc/i_SPI_Data_I_0_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \adc/r_Bytes_In[0]__i40 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40330 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_571 ( input DI1, B1, D0, B0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40011 \adc.SLICE_571_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40331 \adc/i5917_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20018 \adc/CS_Stable_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40331 ( input A, B, C, D, output Z );

  LUT4 #("0x0033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_572 ( input DI1, B1, D0, B0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40011 \adc.SLICE_572_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40332 \adc/i1430_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \adc/Data_State_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40332 ( input A, B, C, D, output Z );

  LUT4 #("0x4488") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_573 ( input DI1, B1, D0, C0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40011 \adc.SLICE_573_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40333 \adc/i1842_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/CS_State_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40333 ( input A, B, C, D, output Z );

  LUT4 #("0x5A00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_574 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40334 i2897_3_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40335 \adc/i5940_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \adc/Receive_Byte_i0_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40334 ( input A, B, C, D, output Z );

  LUT4 #("0x08F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40335 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_575 ( input DI1, B1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40336 \adc/i4067_1_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40337 \adc/i5934_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20018 \adc/Receive_Bit_i0_i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40336 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40337 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_576 ( input C1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40163 \adc/i6012_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40338 \adc/i6018_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40338 ( input A, B, C, D, output Z );

  LUT4 #("0x1111") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_577 ( input B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40152 \adc/i6006_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40339 \adc/i5988_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40339 ( input A, B, C, D, output Z );

  LUT4 #("0x0033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_578 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40340 \adc/i1_2_lut_adj_476 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40341 \adc/i2829_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40340 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40341 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_589 ( input DI1, D1, C1, B1, A1, D0, B0, CE, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40342 \mult/o_Mult_8__I_0_i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40343 \mult/i1458_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40342 ( input A, B, C, D, output Z );

  LUT4 #("0xF808") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40343 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_591 ( input DI1, D1, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40002 \mult.SLICE_591_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40329 \mult/sub_4_inv_0_i9_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 Harmonic_Scale_i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module mult_SLICE_592 ( input A0, output F0 );
  wire   GNDI;

  lut40329 \mult/sub_4_inv_0_i7_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_593 ( input DI1, A1, D0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut4 \mult.SLICE_593_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40314 \mult/sub_4_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \adc/r_Bytes_In[0]__i34 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module mult_SLICE_594 ( input C1, C0, output F0, F1 );
  wire   GNDI;

  lut40131 \mult/sub_4_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40315 \mult/sub_4_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_595 ( input B0, output F0 );
  wire   GNDI;

  lut40004 \mult/sub_4_inv_0_i6_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_596 ( input A0, output F0 );
  wire   GNDI;

  lut40329 \mult/sub_4_inv_0_i3_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_597 ( input B0, output F0 );
  wire   GNDI;

  lut40004 \mult/sub_4_inv_0_i4_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_598 ( input C0, output F0 );
  wire   GNDI;

  lut40315 \mult/sub_4_inv_0_i1_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_600 ( input DI1, D1, D0, B0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40002 \mult.SLICE_600_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40344 \mult/i400_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Reset_Mult_Scaler_c( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40344 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_601 ( input DI1, D1, C1, B1, A1, D0, C0, B0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40345 \genadder[1].adder/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40064 \genadder[1].adder/i1096_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20031 \genadder[1].adder/Counter_i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40345 ( input A, B, C, D, output Z );

  LUT4 #("0x4C80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_603 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40346 \genadder[1].adder/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40346 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_604 ( input DI1, D1, C1, A1, D0, B0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40347 \sample_output/dac/i1_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40341 \sample_output/i2783_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/r_Sample_L__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40347 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_605 ( input DI1, D1, B1, A1, D0, C0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40348 \sample_output/dac/i1_3_lut_adj_453 ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40169 \sample_output/i3879_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20018 \sample_output/dac/o_Ready ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40348 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_607 ( input DI1, D1, D0, C0, CE, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40002 \sample_output.dac.SLICE_607_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40142 \sample_output/dac/i1_2_lut_adj_450 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_dac_SLICE_610 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40349 \sample_output/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40350 \sample_output/dac/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/DAC_Send_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40349 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40350 ( input A, B, C, D, output Z );

  LUT4 #("0xA080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_613 ( input DI1, C1, D0, B0, A0, CE, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40012 \genadder[0].adder.SLICE_613_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40351 \genadder[0].adder.i5971_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 Adder_Clear_c( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40351 ( input A, B, C, D, output Z );

  LUT4 #("0x4400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module pll_48_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE );
  wire   GNDI;

  PLL_B_B \pll_48/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.DIVF = "63";
  defparam INST10.DIVQ = "4";
  defparam INST10.DIVR = "0";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module i_ADC_CS ( output PADDI, input i_ADC_CS );
  wire   GNDI;

  BB_B_B \adc/i_ADC_CS_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(i_ADC_CS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_ADC_CS => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module i_Clock ( output PADDI, input i_Clock );
  wire   GNDI;

  BB_B_B \i_Clock_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(i_Clock));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_Clock => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_DAC_CS ( input PADDO, output o_DAC_CS );
  wire   VCCI;

  BB_B_B \o_DAC_CS_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(o_DAC_CS));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_DAC_CS) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_DAC_SCK ( input PADDO, output o_DAC_SCK );
  wire   VCCI;

  BB_B_B \o_DAC_SCK_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(o_DAC_SCK));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_DAC_SCK) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_DAC_MOSI ( input PADDO, output o_DAC_MOSI );
  wire   VCCI;

  BB_B_B \o_DAC_MOSI_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(o_DAC_MOSI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_DAC_MOSI) = (0:0:0,0:0:0);
  endspecify

endmodule

module test ( input PADDO, output test );
  wire   VCCI;

  BB_B_B \test_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(test));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => test) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug ( input PADDO, output debug );
  wire   VCCI;

  BB_B_B \debug_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(debug));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debug) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_ADC_Clock ( output PADDI, input i_ADC_Clock );
  wire   GNDI;

  BB_B_B \i_ADC_Clock_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(i_ADC_Clock));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_ADC_Clock => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_ADC_Data ( output PADDI, input i_ADC_Data );
  wire   GNDI;

  BB_B_B \i_ADC_Data_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(i_ADC_Data));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_ADC_Data => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module reset_n ( output PADDI, input reset_n );
  wire   GNDI;

  BB_B_B \reset_n_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(reset_n));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (reset_n => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule
