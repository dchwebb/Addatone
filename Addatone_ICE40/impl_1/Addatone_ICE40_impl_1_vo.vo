
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2.0.1.281.2

// backanno -o Addatone_ICE40_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui -msgset D:/Eurorack/Addatone/Addatone_ICE40/promote.xml Addatone_ICE40_impl_1.udb 
// Netlist created on Tue Mar 24 19:10:58 2020
// Netlist written on Tue Mar 24 19:11:04 2020
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( reset_n, i_ADC_CS, o_DAC_SCK, o_DAC_MOSI, test, debug, 
             i_ADC_Clock, i_ADC_Data, i_Clock, o_DAC_CS );
  input  reset_n, i_ADC_CS, i_ADC_Clock, i_ADC_Data, i_Clock;
  output o_DAC_SCK, o_DAC_MOSI, test, debug, o_DAC_CS;
  wire   \sample_position.n69[15] , \sample_position.n11319 , 
         \sample_position.n7852 , \sample_position.n7719 , 
         \sample_position.n7718 , \sample_position.n6362 , Main_Clock, 
         \sample_position.Accumulated_Frequency[15] , 
         \sample_position.n69[14] , \sample_position.n69[13] , 
         \sample_position.n11316 , \sample_position.n7721 , 
         \sample_position.n7720 , \sample_position.n7850 , 
         \sample_position.n7723 , \sample_position.n7722 , 
         \sample_position.Accumulated_Frequency[13] , 
         \sample_position.Accumulated_Frequency[14] , 
         \sample_position.n69[12] , \sample_position.n69[11] , 
         \sample_position.n11313 , \sample_position.n7725 , 
         \sample_position.n7724 , \sample_position.n7848 , 
         \sample_position.n7727 , \sample_position.n7726 , 
         \sample_position.Accumulated_Frequency[11] , 
         \sample_position.Accumulated_Frequency[12] , 
         \sample_position.n69[10] , \sample_position.n69[9] , 
         \sample_position.n11310 , \sample_position.n7729 , 
         \sample_position.n7728 , \sample_position.n7846 , 
         \sample_position.n7731 , \sample_position.n7730 , 
         \sample_position.Accumulated_Frequency[9] , 
         \sample_position.Accumulated_Frequency[10] , \sample_position.n69[8] , 
         \sample_position.n69[7] , \sample_position.n11307 , 
         \sample_position.n7733 , \sample_position.n7732 , 
         \sample_position.n7844 , \sample_position.n7735 , 
         \sample_position.n7734 , \sample_position.Accumulated_Frequency[7] , 
         \sample_position.Accumulated_Frequency[8] , \sample_position.n69[6] , 
         \sample_position.n69[5] , \sample_position.n11304 , 
         \sample_position.n7737 , \sample_position.n7736 , 
         \sample_position.n7842 , \sample_position.n7739 , 
         \sample_position.n7738 , \sample_position.Accumulated_Frequency[5] , 
         \sample_position.Accumulated_Frequency[6] , \sample_position.n69[4] , 
         \sample_position.n69[3] , \sample_position.n11301 , 
         \sample_position.n7741 , \sample_position.n7740 , 
         \sample_position.n7840 , \sample_position.n7743 , 
         \sample_position.n7742 , \sample_position.Accumulated_Frequency[3] , 
         \sample_position.Accumulated_Frequency[4] , \sample_position.n69[2] , 
         \sample_position.n69[1] , \sample_position.n11298 , 
         \sample_position.n7745 , \sample_position.n7744 , 
         \sample_position.n7838 , \sample_position.n7747 , 
         \sample_position.n7746 , \sample_position.Accumulated_Frequency[1] , 
         \sample_position.Accumulated_Frequency[2] , \sample_position.n69[0] , 
         \sample_position.n11202 , \sample_position.n7749 , 
         \sample_position.n7748 , \sample_position.Accumulated_Frequency[0] , 
         \sample_position.n87[15] , \sample_position.n11148 , 
         \sample_position.n7978 , \sample_position.Sample_Pos_Read[15] , n6895, 
         reset_n_N_191, \sample_position.Sample_Position[15] , 
         \sample_position.n87[14] , \sample_position.n87[13] , 
         \sample_position.n11145 , \sample_position.Sample_Pos_Read[14] , 
         \sample_position.n7976 , \sample_position.Sample_Pos_Read[13] , 
         \sample_position.Sample_Position[13] , 
         \sample_position.Sample_Position[14] , \sample_position.n87[12] , 
         \sample_position.n87[11] , \sample_position.n11142 , 
         \sample_position.Sample_Pos_Read[12] , \sample_position.n7974 , 
         \sample_position.Sample_Pos_Read[11] , 
         \sample_position.Sample_Position[11] , 
         \sample_position.Sample_Position[12] , \sample_position.n87[10] , 
         \sample_position.n87[9] , \sample_position.n11139 , 
         \sample_position.Sample_Pos_Read[10] , \sample_position.n7972 , 
         \sample_position.Sample_Pos_Read[9] , 
         \sample_position.Sample_Position[9] , 
         \sample_position.Sample_Position[10] , \sample_position.n87[8] , 
         \sample_position.n87[7] , \sample_position.n11136 , 
         \sample_position.Sample_Pos_Read[8] , \sample_position.n7970 , 
         \sample_position.Sample_Pos_Read[7] , 
         \sample_position.Sample_Position[7] , 
         \sample_position.Sample_Position[8] , \sample_position.n87[6] , 
         \sample_position.n87[5] , \sample_position.n11133 , 
         \sample_position.Sample_Pos_Read[6] , \sample_position.n7968 , 
         \sample_position.Sample_Pos_Read[5] , 
         \sample_position.Sample_Position[5] , 
         \sample_position.Sample_Position[6] , \sample_position.n87[4] , 
         \sample_position.n87[3] , \sample_position.n11130 , 
         \sample_position.Sample_Pos_Read[4] , \sample_position.n7966 , 
         \sample_position.Sample_Pos_Read[3] , 
         \sample_position.Sample_Position[3] , 
         \sample_position.Sample_Position[4] , \sample_position.n87[2] , 
         \sample_position.n87[1] , \sample_position.n11127 , 
         \sample_position.Sample_Pos_Read[2] , \sample_position.n7964 , 
         \sample_position.Sample_Pos_Read[1] , 
         \sample_position.Sample_Position[1] , 
         \sample_position.Sample_Position[2] , \sample_position.n87[0] , 
         \sample_position.n11052 , \sample_position.Sample_Pos_Read[0] , 
         \sample_position.Sample_Position[0] , 
         \sample_position.n87_adj_1156[15] , \sample_position.n11187 , 
         \sample_position.n7961 , \sample_position.n2222[15] , 
         \sample_position.Accumulated_Freq_Offset[15] , 
         \sample_position.n6321 , \sample_position.n6635 , 
         \sample_position.n87_adj_1156[14] , 
         \sample_position.n87_adj_1156[13] , \sample_position.n11184 , 
         \sample_position.n2222[14] , 
         \sample_position.Accumulated_Freq_Offset[14] , 
         \sample_position.n7959 , \sample_position.n2222[13] , 
         \sample_position.Accumulated_Freq_Offset[13] , 
         \sample_position.n87_adj_1156[12] , 
         \sample_position.n87_adj_1156[11] , \sample_position.n11181 , 
         \sample_position.n2222[12] , 
         \sample_position.Accumulated_Freq_Offset[12] , 
         \sample_position.n7957 , \sample_position.n2222[11] , 
         \sample_position.Accumulated_Freq_Offset[11] , 
         \sample_position.n87_adj_1156[10] , \sample_position.n87_adj_1156[9] , 
         \sample_position.n11178 , \sample_position.n2222[10] , 
         \sample_position.Accumulated_Freq_Offset[10] , 
         \sample_position.n7955 , \sample_position.n2222[9] , 
         \sample_position.Accumulated_Freq_Offset[9] , 
         \sample_position.n87_adj_1156[8] , \sample_position.n87_adj_1156[7] , 
         \sample_position.n11172 , \sample_position.n2222[8] , 
         \sample_position.Accumulated_Freq_Offset[8] , \sample_position.n7953 , 
         \sample_position.n2222[7] , 
         \sample_position.Accumulated_Freq_Offset[7] , 
         \sample_position.n11169 , \sample_position.n2222[6] , 
         \sample_position.Accumulated_Freq_Offset[6] , \sample_position.n7951 , 
         \sample_position.n2222[5] , 
         \sample_position.Accumulated_Freq_Offset[5] , 
         \sample_position.n87_adj_1156[5] , \sample_position.n87_adj_1156[6] , 
         \sample_position.n11166 , \sample_position.n2222[4] , 
         \sample_position.Accumulated_Freq_Offset[4] , \sample_position.n7949 , 
         \sample_position.n2222[3] , 
         \sample_position.Accumulated_Freq_Offset[3] , 
         \sample_position.n87_adj_1156[3] , \sample_position.n87_adj_1156[4] , 
         \sample_position.n11163 , \sample_position.n2222[2] , 
         \sample_position.Accumulated_Freq_Offset[2] , \sample_position.n7947 , 
         \sample_position.n2222[1] , 
         \sample_position.Accumulated_Freq_Offset[1] , 
         \sample_position.n87_adj_1156[1] , \sample_position.n87_adj_1156[2] , 
         \sample_position.n11160 , \sample_position.n2222[0] , 
         \sample_position.Accumulated_Freq_Offset[0] , 
         \sample_position.n87_adj_1156[0] , \sample_position.n11232 , 
         \sample_position.n7944 , \sample_position.n1[15] , 
         \sample_position.n87_adj_1155[15] , \sample_position.n11229 , 
         \sample_position.n1[14] , \sample_position.n7942 , 
         \sample_position.n1[13] , \sample_position.n87_adj_1155[13] , 
         \sample_position.n87_adj_1155[14] , \sample_position.n11226 , 
         \sample_position.n1[12] , \sample_position.n7940 , 
         \sample_position.n1[11] , \sample_position.n87_adj_1155[11] , 
         \sample_position.n87_adj_1155[12] , \sample_position.n11223 , 
         \sample_position.n1[10] , \sample_position.n7938 , 
         \sample_position.n1[9] , \sample_position.n87_adj_1155[9] , 
         \sample_position.n87_adj_1155[10] , \sample_position.n11220 , 
         \sample_position.n1[8] , \sample_position.n7936 , 
         \sample_position.n1[7] , \sample_position.n87_adj_1155[7] , 
         \sample_position.n87_adj_1155[8] , \sample_position.n11217 , 
         \sample_position.n1[6] , \sample_position.n7934 , 
         \sample_position.n1[5] , \sample_position.n87_adj_1155[5] , 
         \sample_position.n87_adj_1155[6] , \sample_position.n11214 , 
         \sample_position.n1[4] , \sample_position.n7932 , 
         \sample_position.n1[3] , \sample_position.n87_adj_1155[3] , 
         \sample_position.n87_adj_1155[4] , \sample_position.n11211 , 
         \sample_position.n1[2] , \sample_position.n7930 , 
         \sample_position.n1[1] , \sample_position.n87_adj_1155[1] , 
         \sample_position.n87_adj_1155[2] , \sample_position.n11208 , 
         \sample_position.n1[0] , VCC_net, \sample_position.n87_adj_1155[0] , 
         \sample_output.n3997[9] , \sample_output.n11250 , 
         \sample_output.n8009 , \r_Adder_Total[1][17] , \sample_output.n2982 , 
         \sample_output.r_Sample_R[17] , \sample_output.n3997[8] , 
         \sample_output.n3997[7] , \sample_output.n11247 , 
         \r_Adder_Total[1][16] , \sample_output.n8007 , \r_Adder_Total[1][15] , 
         \sample_output.r_Sample_R[15] , \sample_output.r_Sample_R[16] , 
         \sample_output.n3997[6] , \sample_output.n3997[5] , 
         \sample_output.n11244 , \r_Adder_Total[1][14] , \sample_output.n8005 , 
         \r_Adder_Total[1][13] , \sample_output.r_Sample_R[13] , 
         \sample_output.r_Sample_R[14] , \sample_output.n3997[4] , 
         \sample_output.n3997[3] , \sample_output.n11241 , 
         \r_Adder_Total[1][12] , \sample_output.n8003 , \r_Adder_Total[1][11] , 
         \sample_output.r_Sample_R[11] , \sample_output.r_Sample_R[12] , 
         \sample_output.n3997[2] , \sample_output.n3997[1] , 
         \sample_output.n11238 , \r_Adder_Total[1][10] , \sample_output.n8001 , 
         \r_Adder_Total[1][9] , \sample_output.r_Sample_R[9] , 
         \sample_output.r_Sample_R[10] , \sample_output.n3997[0] , 
         \sample_output.n11235 , \r_Adder_Total[1][8] , 
         \sample_output.r_Sample_R[8] , \sample_output.n4011[9] , 
         \sample_output.n11268 , \sample_output.n7998 , \r_Adder_Total[0][17] , 
         \sample_output.r_Sample_L[17] , \sample_output.n4011[8] , 
         \sample_output.n4011[7] , \sample_output.n11265 , 
         \r_Adder_Total[0][16] , \sample_output.n7996 , \r_Adder_Total[0][15] , 
         \sample_output.r_Sample_L[15] , \sample_output.r_Sample_L[16] , 
         \sample_output.n4011[6] , \sample_output.n4011[5] , 
         \sample_output.n11262 , \r_Adder_Total[0][14] , \sample_output.n7994 , 
         \r_Adder_Total[0][13] , \sample_output.r_Sample_L[13] , 
         \sample_output.r_Sample_L[14] , \sample_output.n4011[4] , 
         \sample_output.n4011[3] , \sample_output.n11259 , 
         \r_Adder_Total[0][12] , \sample_output.n7992 , \r_Adder_Total[0][11] , 
         \sample_output.r_Sample_L[11] , \sample_output.r_Sample_L[12] , 
         \sample_output.n4011[2] , \sample_output.n4011[1] , 
         \sample_output.n11256 , \r_Adder_Total[0][10] , \sample_output.n7990 , 
         \r_Adder_Total[0][9] , \sample_output.r_Sample_L[9] , 
         \sample_output.r_Sample_L[10] , \sample_output.n4011[0] , 
         \sample_output.n11253 , \r_Adder_Total[0][8] , 
         \sample_output.r_Sample_L[8] , n70, n11295, n7835, \Sample_Timer[15] , 
         n6691, n71, n72, n11292, \Sample_Timer[14] , n7833, 
         \Sample_Timer[13] , n83, n84, n11274, \Sample_Timer[2] , n7821, 
         \Sample_Timer[1] , n7823, n73, n74, n11289, \Sample_Timer[12] , n7831, 
         \Sample_Timer[11] , n75, n76, n11286, \Sample_Timer[10] , n7829, 
         \Sample_Timer[9] , n77, n78, n11283, \Sample_Timer[8] , n7827, 
         \Sample_Timer[7] , n79, n80, n11280, \Sample_Timer[6] , n7825, 
         \Sample_Timer[5] , n11118, \Harmonic[6] , n7816, \Harmonic[5] , n41, 
         n40, n7818, n85, n11271, \Sample_Timer[0] , n11112, \Harmonic[2] , 
         n7812, \Harmonic[1] , n45, n44_adj_1182, n7814, n81, n82, n11277, 
         \Sample_Timer[4] , \Sample_Timer[3] , n11115, \Harmonic[4] , 
         \Harmonic[3] , n43, n42, n11055, \Harmonic[0] , n46, n11121, 
         \Harmonic[7] , n39, \genadder[1].adder.n11073 , 
         \Working_Total_adj_1201[15] , \Adder_Total[1][6] , 
         \genadder[1].adder.n7892 , \Working_Total_adj_1201[14] , 
         \Adder_Total[1][5] , \genadder[1].adder.n167[5] , 
         \genadder[1].adder.n167[6] , \genadder[1].adder.n7894 , 
         \genadder[1].adder.n11070 , \Working_Total_adj_1201[13] , 
         \Adder_Total[1][4] , \genadder[1].adder.n7890 , 
         \Working_Total_adj_1201[12] , \Adder_Total[1][3] , 
         \genadder[1].adder.n167[3] , \genadder[1].adder.n167[4] , 
         \genadder[1].adder.n11067 , \Working_Total_adj_1201[11] , 
         \Adder_Total[1][2] , \genadder[1].adder.n7888 , 
         \Working_Total_adj_1201[10] , \genadder[1].adder.Adder_Total[1][1] , 
         \genadder[1].adder.n167[1] , \genadder[1].adder.n167[2] , 
         \genadder[1].adder.n11064 , \Working_Total_adj_1201[9] , 
         \genadder[1].adder.Adder_Total[1][0] , \genadder[1].adder.n167[0] , 
         \genadder[1].adder.n11091 , \Working_Total_adj_1201[31] , 
         \genadder[1].adder.Adder_Total[1][18] , \genadder[1].adder.n7904 , 
         \Adder_Total[1][17] , \genadder[1].adder.n167[17] , 
         \genadder[1].adder.n167[18] , \genadder[1].adder.n11088 , 
         \Adder_Total[1][16] , \genadder[1].adder.n7902 , \Adder_Total[1][15] , 
         \genadder[1].adder.n167[15] , \genadder[1].adder.n167[16] , 
         \genadder[1].adder.n11085 , \Working_Total_adj_1201[23] , 
         \Adder_Total[1][14] , \genadder[1].adder.n7900 , 
         \Working_Total_adj_1201[22] , \Adder_Total[1][13] , 
         \genadder[1].adder.n167[13] , \genadder[1].adder.n167[14] , 
         \genadder[1].adder.n11082 , \Working_Total_adj_1201[21] , 
         \Adder_Total[1][12] , \genadder[1].adder.n7898 , 
         \Working_Total_adj_1201[20] , \Adder_Total[1][11] , 
         \genadder[1].adder.n167[11] , \genadder[1].adder.n167[12] , 
         \genadder[1].adder.n11079 , \Working_Total_adj_1201[19] , 
         \Adder_Total[1][10] , \genadder[1].adder.n7896 , 
         \Working_Total_adj_1201[18] , \Adder_Total[1][9] , 
         \genadder[1].adder.n167[9] , \genadder[1].adder.n167[10] , 
         \genadder[1].adder.n11076 , \Working_Total_adj_1201[17] , 
         \Adder_Total[1][8] , \Working_Total_adj_1201[16] , 
         \Adder_Total[1][7] , \genadder[1].adder.n167[7] , 
         \genadder[1].adder.n167[8] , \mult.n11109 , \mult.n7987 , 
         \mult.n1[8] , \Adder_Mult[8] , \mult.n57[9] , \mult.cout , 
         \mult.n11106 , \mult.n1[7] , \Adder_Mult[7] , \mult.n7985 , 
         \mult.n1[6] , \Adder_Mult[6] , \mult.n57[7] , \mult.n57[8] , 
         \mult.n11103 , \mult.n1[5] , \Adder_Mult[5] , \mult.n7983 , 
         \mult.n1[4] , \Adder_Mult[4] , \mult.n57[5] , \mult.n57[6] , 
         \mult.n11100 , \mult.n1[3] , \Adder_Mult[3] , \mult.n7981 , 
         \mult.n1[2] , \Adder_Mult[2] , \mult.n57[3] , \mult.n57[4] , 
         \mult.n11097 , \mult.n1[1] , \Adder_Mult[1] , \mult.n1[0] , 
         \Adder_Mult[0] , \mult.n57[1] , \mult.n57[2] , \mult.n11199 , 
         \mult.n7927 , \mult.Comb_Counter[7] , \mult.n47[7] , \mult.n11196 , 
         \mult.Comb_Counter[6] , \mult.n7925 , \mult.Comb_Counter[5] , 
         \mult.n47[5] , \mult.n47[6] , \mult.n11193 , \mult.Comb_Counter[4] , 
         \mult.n7923 , \mult.Comb_Counter[3] , \mult.n47[3] , \mult.n47[4] , 
         \mult.n11190 , \mult.Comb_Counter[2] , \mult.n7921 , 
         \mult.Comb_Counter[1] , \mult.n47[1] , \mult.n47[2] , \mult.n11094 , 
         \mult.Comb_Counter[0] , \mult.n47[0] , \genadder[0].adder.n11046 , 
         \Working_Total[11] , \Adder_Total[0][2] , \genadder[0].adder.n7855 , 
         \Working_Total[10] , \genadder[0].adder.Adder_Total[0][1] , 
         \genadder[0].adder.n167[1] , \genadder[0].adder.n167[2] , 
         \genadder[0].adder.n7857 , \genadder[0].adder.n11043 , 
         \Working_Total[9] , \genadder[0].adder.Adder_Total[0][0] , 
         \genadder[0].adder.n167[0] , \genadder[0].adder.n11205 , 
         \Working_Total[31] , \genadder[0].adder.Adder_Total[0][18] , 
         \genadder[0].adder.n7871 , \Adder_Total[0][17] , 
         \genadder[0].adder.n167[17] , \genadder[0].adder.n167[18] , 
         \genadder[0].adder.n11175 , \Adder_Total[0][16] , 
         \genadder[0].adder.n7869 , \Adder_Total[0][15] , 
         \genadder[0].adder.n167[15] , \genadder[0].adder.n167[16] , 
         \genadder[0].adder.n11157 , \Working_Total[23] , \Adder_Total[0][14] , 
         \genadder[0].adder.n7867 , \Working_Total[22] , \Adder_Total[0][13] , 
         \genadder[0].adder.n167[13] , \genadder[0].adder.n167[14] , 
         \genadder[0].adder.n11154 , \Working_Total[21] , \Adder_Total[0][12] , 
         \genadder[0].adder.n7865 , \Working_Total[20] , \Adder_Total[0][11] , 
         \genadder[0].adder.n167[11] , \genadder[0].adder.n167[12] , 
         \genadder[0].adder.n11151 , \Working_Total[19] , \Adder_Total[0][10] , 
         \genadder[0].adder.n7863 , \Working_Total[18] , \Adder_Total[0][9] , 
         \genadder[0].adder.n167[9] , \genadder[0].adder.n167[10] , 
         \genadder[0].adder.n11124 , \Working_Total[17] , \Adder_Total[0][8] , 
         \genadder[0].adder.n7861 , \Working_Total[16] , \Adder_Total[0][7] , 
         \genadder[0].adder.n167[7] , \genadder[0].adder.n167[8] , 
         \genadder[0].adder.n11061 , \Working_Total[15] , \Adder_Total[0][6] , 
         \genadder[0].adder.n7859 , \Working_Total[14] , \Adder_Total[0][5] , 
         \genadder[0].adder.n167[5] , \genadder[0].adder.n167[6] , 
         \genadder[0].adder.n11058 , \Working_Total[13] , \Adder_Total[0][4] , 
         \Working_Total[12] , \Adder_Total[0][3] , \genadder[0].adder.n167[3] , 
         \genadder[0].adder.n167[4] , \ADC_Data[2][5].sig_140.FeedThruLUT , 
         \ADC_Data[2][4].sig_000.FeedThruLUT , \ADC_Data[2][5] , 
         \ADC_Data[2][4] , ADC_Data_Received, \Scale_Initial[4] , 
         \Scale_Initial[5] , \ADC_Data[3][1].sig_099.FeedThruLUT , 
         \ADC_Data[3][0].sig_001.FeedThruLUT , \ADC_Data[3][1] , 
         \ADC_Data[3][0] , \Freq_Scale[0] , \Freq_Scale[1] , 
         \ADC_Data[4][1].sig_084.FeedThruLUT , 
         \ADC_Data[4][0].sig_002.FeedThruLUT , \ADC_Data[4][1] , 
         \ADC_Data[4][0] , \Comb_Interval[0] , \Comb_Interval[1] , test_N_190, 
         test_c, n10_adj_1199, n10_adj_1200, \SM_Top[1] , n6880, 
         \ADC_Data[1][1].sig_020.FeedThruLUT , 
         \ADC_Data[1][0].sig_003.FeedThruLUT , \ADC_Data[1][1] , 
         \ADC_Data[1][0] , \Harmonic_Scale[0] , \Harmonic_Scale[1] , 
         \ADC_Data[0][1].sig_005.FeedThruLUT , 
         \ADC_Data[0][0].sig_004.FeedThruLUT , \ADC_Data[0][1] , 
         \ADC_Data[0][0] , \Frequency[0] , \Frequency[1] , 
         \ADC_Data[0][3].sig_007.FeedThruLUT , 
         \ADC_Data[0][2].sig_006.FeedThruLUT , \ADC_Data[0][3] , 
         \ADC_Data[0][2] , \Frequency[2] , \Frequency[3] , 
         \ADC_Data[0][5].sig_009.FeedThruLUT , 
         \ADC_Data[0][4].sig_008.FeedThruLUT , \ADC_Data[0][5] , 
         \ADC_Data[0][4] , \Frequency[4] , \Frequency[5] , 
         \ADC_Data[0][7].sig_011.FeedThruLUT , 
         \ADC_Data[0][6].sig_010.FeedThruLUT , \ADC_Data[0][7] , 
         \ADC_Data[0][6] , \Frequency[6] , \Frequency[7] , 
         \ADC_Data[0][9].sig_013.FeedThruLUT , 
         \ADC_Data[0][8].sig_012.FeedThruLUT , \ADC_Data[0][9] , 
         \ADC_Data[0][8] , \Frequency[8] , \Frequency[9] , 
         \ADC_Data[0][11].sig_015.FeedThruLUT , 
         \ADC_Data[0][10].sig_014.FeedThruLUT , \ADC_Data[0][11] , 
         \ADC_Data[0][10] , \Frequency[10] , \Frequency[11] , 
         \ADC_Data[0][13].sig_017.FeedThruLUT , 
         \ADC_Data[0][12].sig_016.FeedThruLUT , \ADC_Data[0][13] , 
         \ADC_Data[0][12] , \Frequency[12] , \Frequency[13] , 
         \ADC_Data[0][15].sig_019.FeedThruLUT , 
         \ADC_Data[0][14].sig_018.FeedThruLUT , \ADC_Data[0][15] , 
         \ADC_Data[0][14] , \Frequency[14] , \Frequency[15] , 
         \ADC_Data[1][3].sig_022.FeedThruLUT , 
         \ADC_Data[1][2].sig_021.FeedThruLUT , \ADC_Data[1][3] , 
         \ADC_Data[1][2] , \Harmonic_Scale[2] , \Harmonic_Scale[3] , 
         \ADC_Data[1][5].sig_024.FeedThruLUT , 
         \ADC_Data[1][4].sig_023.FeedThruLUT , \ADC_Data[1][5] , 
         \ADC_Data[1][4] , \Harmonic_Scale[4] , \Harmonic_Scale[5] , 
         \ADC_Data[1][7].sig_026.FeedThruLUT , 
         \ADC_Data[1][6].sig_025.FeedThruLUT , \ADC_Data[1][7] , 
         \ADC_Data[1][6] , \Harmonic_Scale[6] , \Harmonic_Scale[7] , 
         \ADC_Data[2][2].sig_081.FeedThruLUT , 
         \ADC_Data[2][3].sig_028.FeedThruLUT , \ADC_Data[2][2] , 
         \ADC_Data[2][3] , \Scale_Initial[3] , \Scale_Initial[2] , 
         \sample_position.Sample_Position[6].sig_042.FeedThruLUT , 
         \sample_position.Sample_Position[5].sig_031.FeedThruLUT , n6870, 
         \sample_position.LUT_Pos[0] , \sample_position.LUT_Pos[1] , 
         \sample_position.SM_Sample_Position_2__N_312[1] , 
         \sample_position.SM_Sample_Position_2__N_312[0] , 
         \SM_Sample_Position[0] , \SM_Sample_Position[2] , 
         \SM_Sample_Position[1] , Next_Sample, \sample_position.n9762 , 
         \sample_position.Sample_Position[15].sig_033.FeedThruLUT , 
         \sample_position.LUT_Pos[10] , 
         \sample_position.Sample_Position[13].sig_035.FeedThruLUT , 
         \sample_position.Sample_Position[14].sig_034.FeedThruLUT , 
         \sample_position.LUT_Pos[9] , \sample_position.LUT_Pos[8] , 
         \sample_position.Sample_Position[11].sig_037.FeedThruLUT , 
         \sample_position.Sample_Position[12].sig_036.FeedThruLUT , 
         \sample_position.LUT_Pos[7] , \sample_position.LUT_Pos[6] , 
         \sample_position.Sample_Position[9].sig_039.FeedThruLUT , 
         \sample_position.Sample_Position[10].sig_038.FeedThruLUT , 
         \sample_position.LUT_Pos[5] , \sample_position.LUT_Pos[4] , 
         \sample_position.Sample_Position[7].sig_041.FeedThruLUT , 
         \sample_position.Sample_Position[8].sig_040.FeedThruLUT , 
         \sample_position.LUT_Pos[3] , \sample_position.LUT_Pos[2] , 
         \sample_position.n87_adj_1156[2].sig_208.FeedThruLUT , 
         \sample_position.n87_adj_1156[1].sig_207.FeedThruLUT , 
         \sample_position.n87_adj_1156[4].sig_210.FeedThruLUT , 
         \sample_position.n87_adj_1156[3].sig_209.FeedThruLUT , 
         \sample_position.n87_adj_1156[6].sig_212.FeedThruLUT , 
         \sample_position.n87_adj_1156[5].sig_211.FeedThruLUT , 
         \sample_position.n105[14] , \sample_position.n105[15] , 
         \sample_position.n6148 , \sample_position.n6564 , 
         \sample_position.Accumulated_Offset[15] , 
         \sample_position.Accumulated_Offset[14] , \sample_position.n105[12] , 
         \sample_position.n105[13] , \sample_position.Accumulated_Offset[13] , 
         \sample_position.Accumulated_Offset[12] , \sample_position.n105[10] , 
         \sample_position.n105[11] , \sample_position.Accumulated_Offset[11] , 
         \sample_position.Accumulated_Offset[10] , \sample_position.n105[8] , 
         \sample_position.n105[9] , \sample_position.Accumulated_Offset[9] , 
         \sample_position.Accumulated_Offset[8] , \sample_position.n105[6] , 
         \sample_position.n105[7] , \sample_position.Accumulated_Offset[7] , 
         \sample_position.Accumulated_Offset[6] , \sample_position.n105[4] , 
         \sample_position.n105[5] , \sample_position.Accumulated_Offset[5] , 
         \sample_position.Accumulated_Offset[4] , \sample_position.n105[2] , 
         \sample_position.n105[3] , \sample_position.Accumulated_Offset[3] , 
         \sample_position.Accumulated_Offset[2] , \sample_position.n105[1] , 
         \sample_position.n105[0] , \sample_position.Accumulated_Offset[0] , 
         \sample_position.Accumulated_Offset[1] , 
         \ADC_Data[4][2].sig_046.FeedThruLUT , 
         \ADC_Data[4][3].sig_045.FeedThruLUT , \ADC_Data[4][2] , 
         \ADC_Data[4][3] , \Comb_Interval[3] , \Comb_Interval[2] , 
         \sample_output.n3611[1] , \sample_output.n3611[0] , 
         \sample_output.r_Sample_L[3] , n2759, \SM_Sample_Output[0] , 
         \sample_output.r_Sample_R[3] , \sample_output.r_Sample_L[2] , 
         \sample_output.r_Sample_R[2] , n2792, \sample_output.Output_Data[0] , 
         \sample_output.Output_Data[1] , \sample_output.n9017 , 
         \sample_output.n2805 , \SM_Sample_Output[1] , DAC_Ready, 
         \SM_Sample_Output[2] , n6956, \sample_output.n3611[3] , 
         \sample_output.n3611[2] , \sample_output.r_Sample_R[5] , 
         \sample_output.r_Sample_L[5] , \sample_output.r_Sample_R[4] , 
         \sample_output.r_Sample_L[4] , \sample_output.Output_Data[2] , 
         \sample_output.Output_Data[3] , \sample_output.n3611[5] , 
         \sample_output.n3611[4] , \sample_output.r_Sample_R[7] , 
         \sample_output.r_Sample_L[7] , \sample_output.r_Sample_L[6] , 
         \sample_output.r_Sample_R[6] , \sample_output.Output_Data[4] , 
         \sample_output.Output_Data[5] , \sample_output.n3611[7] , 
         \sample_output.n3611[6] , \sample_output.Output_Data[6] , 
         \sample_output.Output_Data[7] , \sample_output.n3611[9] , 
         \sample_output.n3611[8] , \sample_output.Output_Data[8] , 
         \sample_output.Output_Data[9] , \sample_output.n3611[11] , 
         \sample_output.n3611[10] , \sample_output.Output_Data[10] , 
         \sample_output.Output_Data[11] , \sample_output.n3611[13] , 
         \sample_output.n3611[12] , \sample_output.Output_Data[12] , 
         \sample_output.Output_Data[13] , \sample_output.n3611[15] , 
         \sample_output.n3611[14] , \sample_output.Output_Data[14] , 
         \sample_output.Output_Data[15] , 
         \r_Adder_Total[1][3].sig_048.FeedThruLUT , 
         \r_Adder_Total[1][2].sig_047.FeedThruLUT , \r_Adder_Total[1][3] , 
         \r_Adder_Total[1][2] , \r_Adder_Total[1][5].sig_050.FeedThruLUT , 
         \r_Adder_Total[1][4].sig_049.FeedThruLUT , \r_Adder_Total[1][5] , 
         \r_Adder_Total[1][4] , \r_Adder_Total[1][7].sig_052.FeedThruLUT , 
         \r_Adder_Total[1][6].sig_051.FeedThruLUT , \r_Adder_Total[1][7] , 
         \r_Adder_Total[1][6] , \r_Adder_Total[0][3].sig_054.FeedThruLUT , 
         \r_Adder_Total[0][2].sig_053.FeedThruLUT , \r_Adder_Total[0][3] , 
         \r_Adder_Total[0][2] , \r_Adder_Total[0][5].sig_056.FeedThruLUT , 
         \r_Adder_Total[0][4].sig_055.FeedThruLUT , \r_Adder_Total[0][5] , 
         \r_Adder_Total[0][4] , \r_Adder_Total[0][7].sig_058.FeedThruLUT , 
         \r_Adder_Total[0][6].sig_057.FeedThruLUT , \r_Adder_Total[0][7] , 
         \r_Adder_Total[0][6] , \sample_output.n6841 , \sample_output.n6842 , 
         \sample_output.Output_Data[20] , \sample_output.Output_Data[21] , 
         n6840, \Output_Data[17] , \SM_Sample_Output[0].sig_059.FeedThruLUT , 
         \sample_output.n6725 , \sample_output.Output_Data[16] , 
         \sample_output.Output_Data[21].sig_079.FeedThruLUT , 
         \sample_output.Output_Data[20].sig_060.FeedThruLUT , 
         \sample_output.dac.n2947 , \sample_output.dac.r_Data_To_Send[3] , 
         \sample_output.dac.r_Data_To_Send[2] , 
         \sample_output.Output_Data[16].sig_062.FeedThruLUT , 
         \Output_Data[17].sig_061.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[6] , 
         \sample_output.dac.r_Data_To_Send[7] , 
         \sample_output.Output_Data[14].sig_064.FeedThruLUT , 
         \sample_output.Output_Data[15].sig_063.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[8] , 
         \sample_output.dac.r_Data_To_Send[9] , 
         \sample_output.Output_Data[12].sig_066.FeedThruLUT , 
         \sample_output.Output_Data[13].sig_065.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[10] , 
         \sample_output.dac.r_Data_To_Send[11] , 
         \sample_output.Output_Data[10].sig_068.FeedThruLUT , 
         \sample_output.Output_Data[11].sig_067.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[12] , 
         \sample_output.dac.r_Data_To_Send[13] , 
         \sample_output.Output_Data[8].sig_070.FeedThruLUT , 
         \sample_output.Output_Data[9].sig_069.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[14] , 
         \sample_output.dac.r_Data_To_Send[15] , 
         \sample_output.Output_Data[6].sig_072.FeedThruLUT , 
         \sample_output.Output_Data[7].sig_071.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[16] , 
         \sample_output.dac.r_Data_To_Send[17] , 
         \sample_output.Output_Data[4].sig_074.FeedThruLUT , 
         \sample_output.Output_Data[5].sig_073.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[18] , 
         \sample_output.dac.r_Data_To_Send[19] , 
         \sample_output.Output_Data[2].sig_076.FeedThruLUT , 
         \sample_output.Output_Data[3].sig_075.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[20] , 
         \sample_output.dac.r_Data_To_Send[21] , 
         \sample_output.Output_Data[0].sig_080.FeedThruLUT , 
         \sample_output.Output_Data[1].sig_077.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[22] , 
         \sample_output.dac.r_Data_To_Send[23] , \sample_output.dac.n8724 , 
         \sample_output.dac.o_SPI_Data_N_1068 , \SM_DAC_Out[0] , n2613, n6909, 
         o_DAC_MOSI_c, \sample_output.dac.n25[1] , \sample_output.dac.n25[0] , 
         \sample_output.dac.Current_Bit[1] , 
         \sample_output.dac.Current_Bit[0] , \sample_output.dac.n6361 , 
         \sample_output.dac.n6694 , \sample_output.dac.n25[3] , 
         \sample_output.dac.n25[2] , \sample_output.dac.Current_Bit[3] , 
         \sample_output.dac.Current_Bit[2] , \sample_output.dac.n6117 , n8823, 
         Clock_Counter, reset_n_c, \SM_DAC_Out[1] , n9_adj_1185, 
         \sample_output.dac.n2614[0]$n1 , \SM_DAC_Out[2] , 
         \sample_output.dac.n6374 , o_DAC_CS_c, 
         \ADC_Data[2][0].sig_205.FeedThruLUT , 
         \ADC_Data[2][1].sig_082.FeedThruLUT , \ADC_Data[2][0] , 
         \ADC_Data[2][1] , \Scale_Initial[1] , \Scale_Initial[0] , 
         \ADC_Data[4][5].sig_105.FeedThruLUT , 
         \ADC_Data[4][4].sig_083.FeedThruLUT , \ADC_Data[4][5] , 
         \ADC_Data[4][4] , \Comb_Interval[4] , \Comb_Interval[5] , 
         \ADC_Data[3][14].sig_086.FeedThruLUT , 
         \ADC_Data[3][15].sig_085.FeedThruLUT , \ADC_Data[3][14] , 
         \ADC_Data[3][15] , \Freq_Scale[15] , \Freq_Scale[14] , n10_adj_1157, 
         n6455, n10_adj_1194, n10_adj_1193, n10_adj_1196, n10_adj_1195, 
         \ADC_Data[3][12].sig_088.FeedThruLUT , 
         \ADC_Data[3][13].sig_087.FeedThruLUT , \ADC_Data[3][12] , 
         \ADC_Data[3][13] , \Freq_Scale[13] , \Freq_Scale[12] , 
         \ADC_Data[3][10].sig_090.FeedThruLUT , 
         \ADC_Data[3][11].sig_089.FeedThruLUT , \ADC_Data[3][10] , 
         \ADC_Data[3][11] , \Freq_Scale[11] , \Freq_Scale[10] , 
         \ADC_Data[3][8].sig_092.FeedThruLUT , 
         \ADC_Data[3][9].sig_091.FeedThruLUT , \ADC_Data[3][8] , 
         \ADC_Data[3][9] , \Freq_Scale[9] , \Freq_Scale[8] , 
         \ADC_Data[3][6].sig_094.FeedThruLUT , 
         \ADC_Data[3][7].sig_093.FeedThruLUT , \ADC_Data[3][6] , 
         \ADC_Data[3][7] , \Freq_Scale[7] , \Freq_Scale[6] , 
         \ADC_Data[3][4].sig_096.FeedThruLUT , 
         \ADC_Data[3][5].sig_095.FeedThruLUT , \ADC_Data[3][4] , 
         \ADC_Data[3][5] , \Freq_Scale[5] , \Freq_Scale[4] , 
         \ADC_Data[3][2].sig_098.FeedThruLUT , 
         \ADC_Data[3][3].sig_097.FeedThruLUT , \ADC_Data[3][2] , 
         \ADC_Data[3][3] , \Freq_Scale[3] , \Freq_Scale[2] , 
         \ADC_Data[2][8].sig_100.FeedThruLUT , \ADC_Data[2][8] , 
         \Scale_Initial[8] , \ADC_Data[2][6].sig_102.FeedThruLUT , 
         \ADC_Data[2][7].sig_101.FeedThruLUT , \ADC_Data[2][6] , 
         \ADC_Data[2][7] , \Scale_Initial[7] , \Scale_Initial[6] , 
         \ADC_Data[4][6].sig_104.FeedThruLUT , 
         \ADC_Data[4][7].sig_103.FeedThruLUT , \ADC_Data[4][6] , 
         \ADC_Data[4][7] , \Comb_Interval[7] , \Comb_Interval[6] , 
         \Adder_Total[0][3].sig_109.FeedThruLUT , 
         \Adder_Total[0][2].sig_108.FeedThruLUT , n6437, 
         \Adder_Total[0][5].sig_111.FeedThruLUT , 
         \Adder_Total[0][4].sig_110.FeedThruLUT , 
         \Adder_Total[0][7].sig_113.FeedThruLUT , 
         \Adder_Total[0][6].sig_112.FeedThruLUT , 
         \Adder_Total[0][9].sig_115.FeedThruLUT , 
         \Adder_Total[0][8].sig_114.FeedThruLUT , 
         \Adder_Total[0][11].sig_117.FeedThruLUT , 
         \Adder_Total[0][10].sig_116.FeedThruLUT , 
         \Adder_Total[0][13].sig_119.FeedThruLUT , 
         \Adder_Total[0][12].sig_118.FeedThruLUT , 
         \Adder_Total[0][15].sig_121.FeedThruLUT , 
         \Adder_Total[0][14].sig_120.FeedThruLUT , 
         \Adder_Total[0][17].sig_123.FeedThruLUT , 
         \Adder_Total[0][16].sig_122.FeedThruLUT , 
         \Adder_Total[1][3].sig_125.FeedThruLUT , 
         \Adder_Total[1][2].sig_124.FeedThruLUT , 
         \Adder_Total[1][5].sig_127.FeedThruLUT , 
         \Adder_Total[1][4].sig_126.FeedThruLUT , 
         \Adder_Total[1][7].sig_129.FeedThruLUT , 
         \Adder_Total[1][6].sig_128.FeedThruLUT , 
         \Adder_Total[1][9].sig_131.FeedThruLUT , 
         \Adder_Total[1][8].sig_130.FeedThruLUT , 
         \Adder_Total[1][11].sig_133.FeedThruLUT , 
         \Adder_Total[1][10].sig_132.FeedThruLUT , 
         \Adder_Total[1][13].sig_135.FeedThruLUT , 
         \Adder_Total[1][12].sig_134.FeedThruLUT , 
         \Adder_Total[1][15].sig_137.FeedThruLUT , 
         \Adder_Total[1][14].sig_136.FeedThruLUT , 
         \Adder_Total[1][17].sig_139.FeedThruLUT , 
         \Adder_Total[1][16].sig_138.FeedThruLUT , n6847, n6799, \SM_Top[0] , 
         \Adder_Start[1] , n6436, \Adder_Start[0] , n6206, 
         \genadder[1].adder.n6756 , \genadder[1].adder.n6758 , 
         \genadder[1].adder.n2977 , Adder_Clear, \genadder[1].adder.n6752 , 
         \genadder[1].adder.n6754 , \genadder[1].adder.n6748 , 
         \genadder[1].adder.n6750 , \genadder[1].adder.n6726 , 
         \genadder[1].adder.n6615 , \genadder[1].adder.n6744 , 
         \genadder[1].adder.n6746 , \genadder[1].adder.n6740 , 
         \genadder[1].adder.n6742 , \genadder[1].adder.n6736 , 
         \genadder[1].adder.n6738 , \genadder[1].adder.n6732 , 
         \genadder[1].adder.n6734 , \genadder[1].adder.n6728 , 
         \genadder[1].adder.n6730 , n6796, n6817, n18, n2945, n17_2, n6815, 
         n6816, n15, n16, n6813, n6814, n13, n14, n6811, n6812, n11, n12, 
         n6809, n6810, n9_adj_1160, n10_adj_1161, n6807, n6808, n7_adj_1159, 
         n8_2, n6805, n6806, n5, n6, n6803, n6804, n3, n4, 
         \adc.Data_State.sig_141.FeedThruLUT , \adc.Data_State , \adc.n8698 , 
         \adc.Clock_Stable , \adc.Data_State.sig_142.FeedThruLUT , \adc.n6053 , 
         \adc.Data_State.sig_143.FeedThruLUT , \adc.n6089 , 
         \adc.Data_State.sig_145.FeedThruLUT , \adc.n6087 , 
         \adc.Data_State.sig_146.FeedThruLUT , \adc.n6046 , 
         \adc.Data_State.sig_147.FeedThruLUT , \adc.n6086 , 
         \adc.Data_State.sig_148.FeedThruLUT , \adc.n6085 , 
         \adc.Data_State.sig_149.FeedThruLUT , \adc.n6079 , 
         \adc.Data_State.sig_150.FeedThruLUT , \adc.n8696 , \ADC_Data[1][8] , 
         \adc.Data_State.sig_151.FeedThruLUT , \adc.n6052 , \adc.n17[1] , 
         \adc.n17[0] , \adc.Count_Stable[1] , \adc.Count_Stable[0] , 
         \adc.n6788 , \adc.Data_State.sig_152.FeedThruLUT , \adc.n6062 , 
         \adc.Data_State.sig_153.FeedThruLUT , \adc.n6061 , 
         \adc.Data_State.sig_154.FeedThruLUT , \adc.n6060 , 
         \adc.Data_State.sig_155.FeedThruLUT , \adc.n6043 , 
         \adc.Data_State.sig_156.FeedThruLUT , \adc.n6057 , 
         \adc.Data_State.sig_157.FeedThruLUT , \adc.n6058 , 
         \adc.Data_State.sig_158.FeedThruLUT , \adc.n6059 , 
         \adc.Data_State.sig_159.FeedThruLUT , \adc.n4586 , 
         \adc.Data_State.sig_160.FeedThruLUT , \adc.n6064 , 
         \adc.Data_State.sig_161.FeedThruLUT , \adc.n6065 , 
         \adc.Data_State.sig_162.FeedThruLUT , \adc.n6066 , 
         \adc.Data_State.sig_163.FeedThruLUT , \adc.n6044 , 
         \adc.Data_State.sig_164.FeedThruLUT , \adc.n6067 , 
         \adc.Data_State.sig_165.FeedThruLUT , \adc.n6068 , 
         \adc.Data_State.sig_166.FeedThruLUT , \adc.n6069 , 
         \adc.Data_State.sig_167.FeedThruLUT , \adc.n6051 , 
         \adc.Data_State.sig_168.FeedThruLUT , \adc.n6071 , 
         \adc.Data_State.sig_170.FeedThruLUT , \adc.n6072 , 
         \adc.Data_State.sig_171.FeedThruLUT , \adc.n6073 , 
         \adc.Data_State.sig_174.FeedThruLUT , \adc.n6045 , 
         \adc.Data_State.sig_175.FeedThruLUT , \adc.n6074 , 
         \adc.Data_State.sig_176.FeedThruLUT , \adc.n6075 , 
         \i_ADC_Clock_c.sig_177.FeedThruLUT , i_ADC_Clock_c, \adc.n9048 , 
         \adc.n17[2] , \adc.Count_Stable[2] , 
         \adc.Data_State.sig_178.FeedThruLUT , \adc.n6076 , n6845, 
         \Receive_Byte[0] , n6689, n6171, \adc.Data_State.sig_179.FeedThruLUT , 
         \adc.n6081 , \adc.Data_State.sig_180.FeedThruLUT , \adc.n6091 , 
         \adc.Data_State.sig_181.FeedThruLUT , \adc.n6092 , 
         \adc.Data_State.sig_182.FeedThruLUT , \adc.n6042 , 
         \adc.Data_State.sig_183.FeedThruLUT , \adc.n6093 , 
         \adc.Data_State.sig_184.FeedThruLUT , \adc.n6094 , 
         \adc.Data_State.sig_185.FeedThruLUT , \adc.n6095 , 
         \adc.Data_State.sig_186.FeedThruLUT , \adc.n6054 , 
         \adc.Data_State.sig_187.FeedThruLUT , \adc.n6082 , 
         \adc.Data_State.sig_188.FeedThruLUT , \adc.n6097 , 
         \adc.Data_State.sig_189.FeedThruLUT , \adc.n6098 , 
         \adc.Data_State.sig_190.FeedThruLUT , \adc.n6047 , 
         \adc.Data_State.sig_191.FeedThruLUT , \adc.n6099 , 
         \adc.Data_State.sig_192.FeedThruLUT , \adc.n6100 , 
         \adc.Data_State.sig_193.FeedThruLUT , \adc.n6101 , 
         \adc.Data_State.sig_194.FeedThruLUT , \adc.n6055 , 
         \adc.Data_State.sig_195.FeedThruLUT , \adc.n6083 , 
         \adc.Data_State.sig_196.FeedThruLUT , \adc.n6103 , 
         \adc.Data_State.sig_198.FeedThruLUT , \adc.n6048 , 
         \adc.Data_State.sig_199.FeedThruLUT , \adc.n6105 , 
         \adc.Data_State.sig_200.FeedThruLUT , \adc.n6106 , 
         \adc.Data_State.sig_201.FeedThruLUT , \adc.n6107 , 
         \adc.Data_State.sig_202.FeedThruLUT , \adc.n6050 , \adc.n377[3] , 
         \adc.n377[2] , \adc.Receive_Byte[3]_2 , \adc.Receive_Byte[1]_2 , 
         \adc.Receive_Byte[2]_2 , \adc.n370[2] , \adc.n370[1] , 
         \adc.Receive_Bit[0] , \adc.Receive_Bit[2] , \adc.Receive_Bit[1] , 
         \adc.n2964 , \adc.n6700 , \mult.o_Mult_8__N_740[1] , 
         \mult.o_Mult_8__N_740[0] , Reset_Mult_Scaler, \mult.n6420 , 
         \mult.n1_adj_1077 , \mult.n1_2 , \SM_Scale_Mult[0] , \mult.n15 , 
         \mult.n8704 , \mult.n6350 , o_Mult_Ready_N_781, 
         \mult.SM_Scale_Mult[1] , \mult.n4116 , \mult.n4114 , n6921, 
         \mult.n4120 , \mult.n4118 , \mult.n4124 , \mult.n4122 , \mult.n3803 , 
         \mult.n4126 , \mult.o_Mult_8__N_740[3] , \mult.o_Mult_8__N_740[2] , 
         \mult.o_Mult_8__N_740[5] , \mult.o_Mult_8__N_740[4] , 
         \mult.o_Mult_8__N_740[7] , \mult.o_Mult_8__N_740[6] , 
         \genadder[0].adder.n6684 , \genadder[0].adder.n6682 , n2972, 
         \genadder[0].adder.n6678 , \genadder[0].adder.n6680 , 
         \genadder[0].adder.n6674 , \genadder[0].adder.n6676 , 
         \genadder[0].adder.n6670 , \genadder[0].adder.n6672 , 
         \genadder[0].adder.n6665 , \genadder[0].adder.n6667 , 
         \genadder[0].adder.n6661 , \genadder[0].adder.n6663 , 
         \genadder[0].adder.n6643 , \genadder[0].adder.n6659 , 
         \genadder[0].adder.n6591 , \genadder[0].adder.n6629 , 
         \genadder[0].adder.n6574 , \genadder[0].adder.n6686 , 
         \genadder[0].adder.n6562 , n6795, n6832, n2943, n6830, n6831, n6828, 
         n6829, n6826, n6827, n6824, n6825, n6822, n6823, n6820, n6821, n6818, 
         n6819, n10_adj_1158, \sample_output.dac.n24 , \SM_DAC_Out[3] , 
         \sample_output.dac.n4 , n9456, n9460, n31_adj_1186, n44, \SM_Top[2] , 
         n9758, n9382, \SM_Top[3] , n24, Mult_Ready, n31, n8718, n9442, 
         \sample_output.dac.n10375 , \sample_output.dac.n9741 , 
         \sample_output.dac.n9742 , \sample_output.dac.n10378 , 
         \sample_output.dac.n9754 , \sample_output.dac.n9753 , 
         \sample_output.dac.n15 , \sample_output.dac.Current_Bit[4] , 
         \sample_output.dac.n10390 , \sample_output.dac.n10384 , 
         \sample_output.dac.n9750 , \sample_output.dac.n10381 , 
         \sample_output.dac.n9751 , \sample_output.dac.n9744 , 
         \sample_output.dac.n9745 , \sample_output.dac.n10387 , n9029, n9372, 
         \sample_output.dac.n15_adj_1089 , DAC_Send_adj_1184, n9408, 
         \sample_output.dac.n10 , \sample_output.dac.n5542 , n9021, 
         Sample_Ready, n9068, n9076, n9069, n9386, n19, n14_adj_1162, n3681, 
         n9406, n9418, n9450, n9380, n9059, \SM_Adder_adj_1202[0] , n9090, 
         n9070, n9033, n9034, \sample_position.n5941 , \sample_position.n6038 , 
         \sample_position.n9392 , n5939, \sample_position.n9071 , 
         \sample_position.n6153 , \sample_position.n4_adj_1142 , 
         \sample_position.n6_adj_1141 , \sample_position.n30 , 
         \sample_position.n28 , \sample_position.n26 , \sample_position.n24 , 
         \sample_position.n22 , \sample_position.n20 , \sample_position.n18 , 
         \sample_position.n16_adj_1143 , \sample_position.n14_adj_1144 , 
         \sample_position.n12_adj_1145 , \sample_position.n10_adj_1146 , 
         \sample_position.n8_adj_1147 , \sample_position.n6_adj_1148 , 
         \sample_position.n4_adj_1150 , \sample_position.n2_adj_1149 , 
         \sample_position.n6155 , o_Freq_Too_High_N_369, n9424, 
         \sample_position.n4_adj_1151 , n8783, \sample_position.n6_adj_1152 , 
         \sample_position.n8686 , \sample_position.n12_adj_1153 , 
         \sample_position.n8_adj_1154 , \sample_output.n55 , 
         \sample_output.n6 , DAC_Send, \sample_output.dac.n9416 , 
         \sample_output.dac.n9412 , \sample_output.dac.n22 , o_DAC_SCK_c, 
         \SM_DAC_Out[1].sig_078.FeedThruLUT , n2079, \sample_output.dac.n7252 , 
         \sample_output.dac.n5966 , \sample_output.dac.n5953 , n2102, n5544, 
         n2119, n9763, n7446, \sample_output.dac.n6_c , n2086, 
         \sample_output.dac.n6618 , n5548, \sample_output.dac.n9039 , 
         \sample_output.dac.n6232 , n9404, n16_adj_1188, n8809, n4_adj_1189, 
         n9444, n9802, n10, n9804, n9770, n9771, n6379, n7462, n4_adj_1183, 
         Freq_Too_High, n6035, n8977, Start_Mult_Scaler, Comb_Muted, 
         n9_adj_1190, n9_adj_1181, n16_adj_1198, n17_adj_1197, n9060, 
         n4_adj_1187, \adc.CS_State_N_587 , \adc.CS_Stable_N_597 , 
         \adc.Clock_State , i_ADC_Data_c, \adc.n6692 , \adc.n6084 , 
         \adc.n6088 , CS_Stable, \adc.n12 , SM_ADC_In, \adc.Receive_Bit[3] , 
         \adc.n6090 , \adc.n12_adj_1082 , \adc.n6096 , \adc.n12_adj_1085 , 
         \adc.n8 , \adc.n6041 , \adc.n6056 , \adc.n12_adj_1081 , \adc.n6063 , 
         \adc.n12_adj_1083 , \adc.n12_adj_1084 , \adc.n6070 , 
         \adc.n12_adj_1086 , \adc.n6102 , \adc.n7279 , \adc.n6077 , \adc.n11 , 
         \adc.o_Data_Received_N_578 , \adc.n370[3] , \adc.n11_adj_1087 , 
         \adc.n377[1] , \adc.n9 , \adc.n9420 , \adc.n9452 , \adc.n7 , \adc.n2 , 
         \mult.n14 , \mult.n10_adj_1078 , \mult.n10_adj_1080 , \mult.n12 , 
         \mult.n9_adj_1079 , \mult.n11 , \sample_position.n8997 , 
         \sample_position.n8939 , n7, \sample_position.n7_c , 
         \SM_Sample_Position[0].sig_043.FeedThruLUT , \adc.n6104 , \adc.n1 , 
         \adc.n7230 , \mult.n6164 , \sample_output.n2807 , 
         \SM_Top[3].sig_030.FeedThruLUT , \SM_Top_3__N_121[1] , n9, n9007, 
         \SM_Top_3__N_121[2] , n7460, n9767, n10_adj_1192, 
         \mult.SM_Scale_Mult[1].sig_204.FeedThruLUT , \adc.i_ADC_CS_c , 
         \adc.CS_State , \SM_Adder[0] , \mult.o_Mult_8__N_740[8] , 
         \SM_Top_3__N_121[0] , n9390, 
         \sample_position.n87_adj_1156[0].sig_206.FeedThruLUT , 
         \SM_Top[3].sig_106.FeedThruLUT , 
         \SM_Sample_Position[2].sig_032.FeedThruLUT , \sample_position.n3 , 
         \sample_position.Sample_Pos_WE , 
         \sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.wr_en_i_N_373 
         , \sample_output.dac.o_Ready_N_1070 , n9065, 
         \sample_output.dac.n25[4] , \sample_output.dac.n7787 , n6835, 
         \SM_Sample_Position[1].sig_044.FeedThruLUT , \sample_output.n55$n2 , 
         n6_adj_1180, \genadder[1].adder.n8[0] , \SM_Top_3__N_121[3] , GND_net, 
         \adc.i_ADC_CS_c.sig_203.FeedThruLUT , n6802, n7226, 
         \genadder[1].adder.n6760 , \i_ADC_Clock_c.sig_169.FeedThruLUT , 
         \adc.n3663 , \adc.i_ADC_CS_c.sig_173.FeedThruLUT , \adc.n3659 , 
         \i_ADC_Data_c.sig_172.FeedThruLUT , \adc.n3661 , 
         \adc.Data_State.sig_144.FeedThruLUT , 
         \ADC_Data[1][8].sig_027.FeedThruLUT , \Harmonic_Scale[8] , n6839, 
         n4_adj_1191, \SM_Top[3].sig_029.FeedThruLUT , 
         \adc.Data_State.sig_197.FeedThruLUT , \SM_Top[2].sig_107.FeedThruLUT , 
         \n2086$n0 , \Sample_Value[15] , \Sample_Value[14] , 
         \Sample_Value[13] , \Sample_Value[12] , \Sample_Value[11] , 
         \Sample_Value[10] , \Sample_Value[9] , \Sample_Value[8] , 
         \Sample_Value[7] , \Sample_Value[6] , \Sample_Value[5] , 
         \Sample_Value[4] , \Sample_Value[3] , \Sample_Value[2] , 
         \Sample_Value[1] , \Sample_Value[0] , i_Clock_c, 
         \pll_48.lscc_pll_inst.feedback_w ;

  sample_position_SLICE_0 \sample_position.SLICE_0 ( 
    .DI0(\sample_position.n69[15] ), .D1(\sample_position.n11319 ), 
    .D0(\sample_position.n7852 ), .C0(\sample_position.n7719 ), 
    .B0(\sample_position.n7718 ), .CE(\sample_position.n6362 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7852 ), 
    .CIN1(\sample_position.n11319 ), 
    .Q0(\sample_position.Accumulated_Frequency[15] ), 
    .F0(\sample_position.n69[15] ), .COUT0(\sample_position.n11319 ));
  sample_position_SLICE_1 \sample_position.SLICE_1 ( 
    .DI1(\sample_position.n69[14] ), .DI0(\sample_position.n69[13] ), 
    .D1(\sample_position.n11316 ), .C1(\sample_position.n7721 ), 
    .B1(\sample_position.n7720 ), .D0(\sample_position.n7850 ), 
    .C0(\sample_position.n7723 ), .B0(\sample_position.n7722 ), 
    .CE(\sample_position.n6362 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n7850 ), .CIN1(\sample_position.n11316 ), 
    .Q0(\sample_position.Accumulated_Frequency[13] ), 
    .Q1(\sample_position.Accumulated_Frequency[14] ), 
    .F0(\sample_position.n69[13] ), .F1(\sample_position.n69[14] ), 
    .COUT1(\sample_position.n7852 ), .COUT0(\sample_position.n11316 ));
  sample_position_SLICE_2 \sample_position.SLICE_2 ( 
    .DI1(\sample_position.n69[12] ), .DI0(\sample_position.n69[11] ), 
    .D1(\sample_position.n11313 ), .C1(\sample_position.n7725 ), 
    .B1(\sample_position.n7724 ), .D0(\sample_position.n7848 ), 
    .C0(\sample_position.n7727 ), .B0(\sample_position.n7726 ), 
    .CE(\sample_position.n6362 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n7848 ), .CIN1(\sample_position.n11313 ), 
    .Q0(\sample_position.Accumulated_Frequency[11] ), 
    .Q1(\sample_position.Accumulated_Frequency[12] ), 
    .F0(\sample_position.n69[11] ), .F1(\sample_position.n69[12] ), 
    .COUT1(\sample_position.n7850 ), .COUT0(\sample_position.n11313 ));
  sample_position_SLICE_3 \sample_position.SLICE_3 ( 
    .DI1(\sample_position.n69[10] ), .DI0(\sample_position.n69[9] ), 
    .D1(\sample_position.n11310 ), .C1(\sample_position.n7729 ), 
    .B1(\sample_position.n7728 ), .D0(\sample_position.n7846 ), 
    .C0(\sample_position.n7731 ), .B0(\sample_position.n7730 ), 
    .CE(\sample_position.n6362 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n7846 ), .CIN1(\sample_position.n11310 ), 
    .Q0(\sample_position.Accumulated_Frequency[9] ), 
    .Q1(\sample_position.Accumulated_Frequency[10] ), 
    .F0(\sample_position.n69[9] ), .F1(\sample_position.n69[10] ), 
    .COUT1(\sample_position.n7848 ), .COUT0(\sample_position.n11310 ));
  sample_position_SLICE_4 \sample_position.SLICE_4 ( 
    .DI1(\sample_position.n69[8] ), .DI0(\sample_position.n69[7] ), 
    .D1(\sample_position.n11307 ), .C1(\sample_position.n7733 ), 
    .B1(\sample_position.n7732 ), .D0(\sample_position.n7844 ), 
    .C0(\sample_position.n7735 ), .B0(\sample_position.n7734 ), 
    .CE(\sample_position.n6362 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n7844 ), .CIN1(\sample_position.n11307 ), 
    .Q0(\sample_position.Accumulated_Frequency[7] ), 
    .Q1(\sample_position.Accumulated_Frequency[8] ), 
    .F0(\sample_position.n69[7] ), .F1(\sample_position.n69[8] ), 
    .COUT1(\sample_position.n7846 ), .COUT0(\sample_position.n11307 ));
  sample_position_SLICE_5 \sample_position.SLICE_5 ( 
    .DI1(\sample_position.n69[6] ), .DI0(\sample_position.n69[5] ), 
    .D1(\sample_position.n11304 ), .C1(\sample_position.n7737 ), 
    .B1(\sample_position.n7736 ), .D0(\sample_position.n7842 ), 
    .C0(\sample_position.n7739 ), .B0(\sample_position.n7738 ), 
    .CE(\sample_position.n6362 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n7842 ), .CIN1(\sample_position.n11304 ), 
    .Q0(\sample_position.Accumulated_Frequency[5] ), 
    .Q1(\sample_position.Accumulated_Frequency[6] ), 
    .F0(\sample_position.n69[5] ), .F1(\sample_position.n69[6] ), 
    .COUT1(\sample_position.n7844 ), .COUT0(\sample_position.n11304 ));
  sample_position_SLICE_6 \sample_position.SLICE_6 ( 
    .DI1(\sample_position.n69[4] ), .DI0(\sample_position.n69[3] ), 
    .D1(\sample_position.n11301 ), .C1(\sample_position.n7741 ), 
    .B1(\sample_position.n7740 ), .D0(\sample_position.n7840 ), 
    .C0(\sample_position.n7743 ), .B0(\sample_position.n7742 ), 
    .CE(\sample_position.n6362 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n7840 ), .CIN1(\sample_position.n11301 ), 
    .Q0(\sample_position.Accumulated_Frequency[3] ), 
    .Q1(\sample_position.Accumulated_Frequency[4] ), 
    .F0(\sample_position.n69[3] ), .F1(\sample_position.n69[4] ), 
    .COUT1(\sample_position.n7842 ), .COUT0(\sample_position.n11301 ));
  sample_position_SLICE_7 \sample_position.SLICE_7 ( 
    .DI1(\sample_position.n69[2] ), .DI0(\sample_position.n69[1] ), 
    .D1(\sample_position.n11298 ), .C1(\sample_position.n7745 ), 
    .B1(\sample_position.n7744 ), .D0(\sample_position.n7838 ), 
    .C0(\sample_position.n7747 ), .B0(\sample_position.n7746 ), 
    .CE(\sample_position.n6362 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n7838 ), .CIN1(\sample_position.n11298 ), 
    .Q0(\sample_position.Accumulated_Frequency[1] ), 
    .Q1(\sample_position.Accumulated_Frequency[2] ), 
    .F0(\sample_position.n69[1] ), .F1(\sample_position.n69[2] ), 
    .COUT1(\sample_position.n7840 ), .COUT0(\sample_position.n11298 ));
  sample_position_SLICE_8 \sample_position.SLICE_8 ( 
    .DI1(\sample_position.n69[0] ), .D1(\sample_position.n11202 ), 
    .C1(\sample_position.n7749 ), .B1(\sample_position.n7748 ), 
    .CE(\sample_position.n6362 ), .CLK(Main_Clock), 
    .CIN1(\sample_position.n11202 ), 
    .Q1(\sample_position.Accumulated_Frequency[0] ), 
    .F1(\sample_position.n69[0] ), .COUT1(\sample_position.n7838 ), 
    .COUT0(\sample_position.n11202 ));
  sample_position_SLICE_9 \sample_position.SLICE_9 ( 
    .DI0(\sample_position.n87[15] ), .D1(\sample_position.n11148 ), 
    .D0(\sample_position.n7978 ), 
    .C0(\sample_position.Accumulated_Frequency[15] ), 
    .B0(\sample_position.Sample_Pos_Read[15] ), .CE(n6895), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_position.n7978 ), 
    .CIN1(\sample_position.n11148 ), 
    .Q0(\sample_position.Sample_Position[15] ), .F0(\sample_position.n87[15] ), 
    .COUT0(\sample_position.n11148 ));
  sample_position_SLICE_10 \sample_position.SLICE_10 ( 
    .DI1(\sample_position.n87[14] ), .DI0(\sample_position.n87[13] ), 
    .D1(\sample_position.n11145 ), 
    .C1(\sample_position.Accumulated_Frequency[14] ), 
    .B1(\sample_position.Sample_Pos_Read[14] ), .D0(\sample_position.n7976 ), 
    .C0(\sample_position.Accumulated_Frequency[13] ), 
    .B0(\sample_position.Sample_Pos_Read[13] ), .CE(n6895), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_position.n7976 ), 
    .CIN1(\sample_position.n11145 ), 
    .Q0(\sample_position.Sample_Position[13] ), 
    .Q1(\sample_position.Sample_Position[14] ), .F0(\sample_position.n87[13] ), 
    .F1(\sample_position.n87[14] ), .COUT1(\sample_position.n7978 ), 
    .COUT0(\sample_position.n11145 ));
  sample_position_SLICE_11 \sample_position.SLICE_11 ( 
    .DI1(\sample_position.n87[12] ), .DI0(\sample_position.n87[11] ), 
    .D1(\sample_position.n11142 ), 
    .C1(\sample_position.Accumulated_Frequency[12] ), 
    .B1(\sample_position.Sample_Pos_Read[12] ), .D0(\sample_position.n7974 ), 
    .C0(\sample_position.Accumulated_Frequency[11] ), 
    .B0(\sample_position.Sample_Pos_Read[11] ), .CE(n6895), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_position.n7974 ), 
    .CIN1(\sample_position.n11142 ), 
    .Q0(\sample_position.Sample_Position[11] ), 
    .Q1(\sample_position.Sample_Position[12] ), .F0(\sample_position.n87[11] ), 
    .F1(\sample_position.n87[12] ), .COUT1(\sample_position.n7976 ), 
    .COUT0(\sample_position.n11142 ));
  sample_position_SLICE_12 \sample_position.SLICE_12 ( 
    .DI1(\sample_position.n87[10] ), .DI0(\sample_position.n87[9] ), 
    .D1(\sample_position.n11139 ), 
    .C1(\sample_position.Accumulated_Frequency[10] ), 
    .B1(\sample_position.Sample_Pos_Read[10] ), .D0(\sample_position.n7972 ), 
    .C0(\sample_position.Accumulated_Frequency[9] ), 
    .B0(\sample_position.Sample_Pos_Read[9] ), .CE(n6895), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7972 ), 
    .CIN1(\sample_position.n11139 ), .Q0(\sample_position.Sample_Position[9] ), 
    .Q1(\sample_position.Sample_Position[10] ), .F0(\sample_position.n87[9] ), 
    .F1(\sample_position.n87[10] ), .COUT1(\sample_position.n7974 ), 
    .COUT0(\sample_position.n11139 ));
  sample_position_SLICE_13 \sample_position.SLICE_13 ( 
    .DI1(\sample_position.n87[8] ), .DI0(\sample_position.n87[7] ), 
    .D1(\sample_position.n11136 ), 
    .C1(\sample_position.Accumulated_Frequency[8] ), 
    .B1(\sample_position.Sample_Pos_Read[8] ), .D0(\sample_position.n7970 ), 
    .C0(\sample_position.Accumulated_Frequency[7] ), 
    .B0(\sample_position.Sample_Pos_Read[7] ), .CE(n6895), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7970 ), 
    .CIN1(\sample_position.n11136 ), .Q0(\sample_position.Sample_Position[7] ), 
    .Q1(\sample_position.Sample_Position[8] ), .F0(\sample_position.n87[7] ), 
    .F1(\sample_position.n87[8] ), .COUT1(\sample_position.n7972 ), 
    .COUT0(\sample_position.n11136 ));
  sample_position_SLICE_14 \sample_position.SLICE_14 ( 
    .DI1(\sample_position.n87[6] ), .DI0(\sample_position.n87[5] ), 
    .D1(\sample_position.n11133 ), 
    .C1(\sample_position.Accumulated_Frequency[6] ), 
    .B1(\sample_position.Sample_Pos_Read[6] ), .D0(\sample_position.n7968 ), 
    .C0(\sample_position.Accumulated_Frequency[5] ), 
    .B0(\sample_position.Sample_Pos_Read[5] ), .CE(n6895), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7968 ), 
    .CIN1(\sample_position.n11133 ), .Q0(\sample_position.Sample_Position[5] ), 
    .Q1(\sample_position.Sample_Position[6] ), .F0(\sample_position.n87[5] ), 
    .F1(\sample_position.n87[6] ), .COUT1(\sample_position.n7970 ), 
    .COUT0(\sample_position.n11133 ));
  sample_position_SLICE_15 \sample_position.SLICE_15 ( 
    .DI1(\sample_position.n87[4] ), .DI0(\sample_position.n87[3] ), 
    .D1(\sample_position.n11130 ), 
    .C1(\sample_position.Accumulated_Frequency[4] ), 
    .B1(\sample_position.Sample_Pos_Read[4] ), .D0(\sample_position.n7966 ), 
    .C0(\sample_position.Accumulated_Frequency[3] ), 
    .B0(\sample_position.Sample_Pos_Read[3] ), .CE(n6895), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7966 ), 
    .CIN1(\sample_position.n11130 ), .Q0(\sample_position.Sample_Position[3] ), 
    .Q1(\sample_position.Sample_Position[4] ), .F0(\sample_position.n87[3] ), 
    .F1(\sample_position.n87[4] ), .COUT1(\sample_position.n7968 ), 
    .COUT0(\sample_position.n11130 ));
  sample_position_SLICE_16 \sample_position.SLICE_16 ( 
    .DI1(\sample_position.n87[2] ), .DI0(\sample_position.n87[1] ), 
    .D1(\sample_position.n11127 ), 
    .C1(\sample_position.Accumulated_Frequency[2] ), 
    .B1(\sample_position.Sample_Pos_Read[2] ), .D0(\sample_position.n7964 ), 
    .C0(\sample_position.Accumulated_Frequency[1] ), 
    .B0(\sample_position.Sample_Pos_Read[1] ), .CE(n6895), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7964 ), 
    .CIN1(\sample_position.n11127 ), .Q0(\sample_position.Sample_Position[1] ), 
    .Q1(\sample_position.Sample_Position[2] ), .F0(\sample_position.n87[1] ), 
    .F1(\sample_position.n87[2] ), .COUT1(\sample_position.n7966 ), 
    .COUT0(\sample_position.n11127 ));
  sample_position_SLICE_17 \sample_position.SLICE_17 ( 
    .DI1(\sample_position.n87[0] ), .D1(\sample_position.n11052 ), 
    .C1(\sample_position.Accumulated_Frequency[0] ), 
    .B1(\sample_position.Sample_Pos_Read[0] ), .CE(n6895), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN1(\sample_position.n11052 ), 
    .Q1(\sample_position.Sample_Position[0] ), .F1(\sample_position.n87[0] ), 
    .COUT1(\sample_position.n7964 ), .COUT0(\sample_position.n11052 ));
  sample_position_SLICE_18 \sample_position.SLICE_18 ( 
    .DI0(\sample_position.n87_adj_1156[15] ), .D1(\sample_position.n11187 ), 
    .D0(\sample_position.n7961 ), .C0(\sample_position.n2222[15] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .CE(\sample_position.n6321 ), .LSR(\sample_position.n6635 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7961 ), 
    .CIN1(\sample_position.n11187 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .F0(\sample_position.n87_adj_1156[15] ), .COUT0(\sample_position.n11187 ));
  sample_position_SLICE_19 \sample_position.SLICE_19 ( 
    .DI1(\sample_position.n87_adj_1156[14] ), 
    .DI0(\sample_position.n87_adj_1156[13] ), .D1(\sample_position.n11184 ), 
    .C1(\sample_position.n2222[14] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .D0(\sample_position.n7959 ), .C0(\sample_position.n2222[13] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .CE(\sample_position.n6321 ), .LSR(\sample_position.n6635 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7959 ), 
    .CIN1(\sample_position.n11184 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .F0(\sample_position.n87_adj_1156[13] ), 
    .F1(\sample_position.n87_adj_1156[14] ), .COUT1(\sample_position.n7961 ), 
    .COUT0(\sample_position.n11184 ));
  sample_position_SLICE_20 \sample_position.SLICE_20 ( 
    .DI1(\sample_position.n87_adj_1156[12] ), 
    .DI0(\sample_position.n87_adj_1156[11] ), .D1(\sample_position.n11181 ), 
    .C1(\sample_position.n2222[12] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .D0(\sample_position.n7957 ), .C0(\sample_position.n2222[11] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .CE(\sample_position.n6321 ), .LSR(\sample_position.n6635 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7957 ), 
    .CIN1(\sample_position.n11181 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .F0(\sample_position.n87_adj_1156[11] ), 
    .F1(\sample_position.n87_adj_1156[12] ), .COUT1(\sample_position.n7959 ), 
    .COUT0(\sample_position.n11181 ));
  sample_position_SLICE_21 \sample_position.SLICE_21 ( 
    .DI1(\sample_position.n87_adj_1156[10] ), 
    .DI0(\sample_position.n87_adj_1156[9] ), .D1(\sample_position.n11178 ), 
    .C1(\sample_position.n2222[10] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .D0(\sample_position.n7955 ), .C0(\sample_position.n2222[9] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .CE(\sample_position.n6321 ), .LSR(\sample_position.n6635 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7955 ), 
    .CIN1(\sample_position.n11178 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .F0(\sample_position.n87_adj_1156[9] ), 
    .F1(\sample_position.n87_adj_1156[10] ), .COUT1(\sample_position.n7957 ), 
    .COUT0(\sample_position.n11178 ));
  sample_position_SLICE_22 \sample_position.SLICE_22 ( 
    .DI1(\sample_position.n87_adj_1156[8] ), 
    .DI0(\sample_position.n87_adj_1156[7] ), .D1(\sample_position.n11172 ), 
    .C1(\sample_position.n2222[8] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[8] ), 
    .D0(\sample_position.n7953 ), .C0(\sample_position.n2222[7] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .CE(\sample_position.n6321 ), .LSR(\sample_position.n6635 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n7953 ), 
    .CIN1(\sample_position.n11172 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[8] ), 
    .F0(\sample_position.n87_adj_1156[7] ), 
    .F1(\sample_position.n87_adj_1156[8] ), .COUT1(\sample_position.n7955 ), 
    .COUT0(\sample_position.n11172 ));
  sample_position_SLICE_23 \sample_position.SLICE_23 ( 
    .D1(\sample_position.n11169 ), .C1(\sample_position.n2222[6] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .D0(\sample_position.n7951 ), .C0(\sample_position.n2222[5] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .CIN0(\sample_position.n7951 ), .CIN1(\sample_position.n11169 ), 
    .F0(\sample_position.n87_adj_1156[5] ), 
    .F1(\sample_position.n87_adj_1156[6] ), .COUT1(\sample_position.n7953 ), 
    .COUT0(\sample_position.n11169 ));
  sample_position_SLICE_24 \sample_position.SLICE_24 ( 
    .D1(\sample_position.n11166 ), .C1(\sample_position.n2222[4] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .D0(\sample_position.n7949 ), .C0(\sample_position.n2222[3] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .CIN0(\sample_position.n7949 ), .CIN1(\sample_position.n11166 ), 
    .F0(\sample_position.n87_adj_1156[3] ), 
    .F1(\sample_position.n87_adj_1156[4] ), .COUT1(\sample_position.n7951 ), 
    .COUT0(\sample_position.n11166 ));
  sample_position_SLICE_25 \sample_position.SLICE_25 ( 
    .D1(\sample_position.n11163 ), .C1(\sample_position.n2222[2] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .D0(\sample_position.n7947 ), .C0(\sample_position.n2222[1] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .CIN0(\sample_position.n7947 ), .CIN1(\sample_position.n11163 ), 
    .F0(\sample_position.n87_adj_1156[1] ), 
    .F1(\sample_position.n87_adj_1156[2] ), .COUT1(\sample_position.n7949 ), 
    .COUT0(\sample_position.n11163 ));
  sample_position_SLICE_26 \sample_position.SLICE_26 ( 
    .D1(\sample_position.n11160 ), .C1(\sample_position.n2222[0] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[0] ), 
    .CIN1(\sample_position.n11160 ), .F1(\sample_position.n87_adj_1156[0] ), 
    .COUT1(\sample_position.n7947 ), .COUT0(\sample_position.n11160 ));
  sample_position_SLICE_27 \sample_position.SLICE_27 ( 
    .D1(\sample_position.n11232 ), .D0(\sample_position.n7944 ), 
    .C0(\sample_position.n1[15] ), .CIN0(\sample_position.n7944 ), 
    .CIN1(\sample_position.n11232 ), .F0(\sample_position.n87_adj_1155[15] ), 
    .COUT0(\sample_position.n11232 ));
  sample_position_SLICE_28 \sample_position.SLICE_28 ( 
    .D1(\sample_position.n11229 ), .C1(\sample_position.n1[14] ), 
    .D0(\sample_position.n7942 ), .C0(\sample_position.n1[13] ), 
    .CIN0(\sample_position.n7942 ), .CIN1(\sample_position.n11229 ), 
    .F0(\sample_position.n87_adj_1155[13] ), 
    .F1(\sample_position.n87_adj_1155[14] ), .COUT1(\sample_position.n7944 ), 
    .COUT0(\sample_position.n11229 ));
  sample_position_SLICE_29 \sample_position.SLICE_29 ( 
    .D1(\sample_position.n11226 ), .C1(\sample_position.n1[12] ), 
    .D0(\sample_position.n7940 ), .C0(\sample_position.n1[11] ), 
    .CIN0(\sample_position.n7940 ), .CIN1(\sample_position.n11226 ), 
    .F0(\sample_position.n87_adj_1155[11] ), 
    .F1(\sample_position.n87_adj_1155[12] ), .COUT1(\sample_position.n7942 ), 
    .COUT0(\sample_position.n11226 ));
  sample_position_SLICE_30 \sample_position.SLICE_30 ( 
    .D1(\sample_position.n11223 ), .C1(\sample_position.n1[10] ), 
    .D0(\sample_position.n7938 ), .C0(\sample_position.n1[9] ), 
    .CIN0(\sample_position.n7938 ), .CIN1(\sample_position.n11223 ), 
    .F0(\sample_position.n87_adj_1155[9] ), 
    .F1(\sample_position.n87_adj_1155[10] ), .COUT1(\sample_position.n7940 ), 
    .COUT0(\sample_position.n11223 ));
  sample_position_SLICE_31 \sample_position.SLICE_31 ( 
    .D1(\sample_position.n11220 ), .C1(\sample_position.n1[8] ), 
    .D0(\sample_position.n7936 ), .C0(\sample_position.n1[7] ), 
    .CIN0(\sample_position.n7936 ), .CIN1(\sample_position.n11220 ), 
    .F0(\sample_position.n87_adj_1155[7] ), 
    .F1(\sample_position.n87_adj_1155[8] ), .COUT1(\sample_position.n7938 ), 
    .COUT0(\sample_position.n11220 ));
  sample_position_SLICE_32 \sample_position.SLICE_32 ( 
    .D1(\sample_position.n11217 ), .C1(\sample_position.n1[6] ), 
    .D0(\sample_position.n7934 ), .C0(\sample_position.n1[5] ), 
    .CIN0(\sample_position.n7934 ), .CIN1(\sample_position.n11217 ), 
    .F0(\sample_position.n87_adj_1155[5] ), 
    .F1(\sample_position.n87_adj_1155[6] ), .COUT1(\sample_position.n7936 ), 
    .COUT0(\sample_position.n11217 ));
  sample_position_SLICE_33 \sample_position.SLICE_33 ( 
    .D1(\sample_position.n11214 ), .C1(\sample_position.n1[4] ), 
    .D0(\sample_position.n7932 ), .C0(\sample_position.n1[3] ), 
    .CIN0(\sample_position.n7932 ), .CIN1(\sample_position.n11214 ), 
    .F0(\sample_position.n87_adj_1155[3] ), 
    .F1(\sample_position.n87_adj_1155[4] ), .COUT1(\sample_position.n7934 ), 
    .COUT0(\sample_position.n11214 ));
  sample_position_SLICE_34 \sample_position.SLICE_34 ( 
    .D1(\sample_position.n11211 ), .C1(\sample_position.n1[2] ), 
    .D0(\sample_position.n7930 ), .C0(\sample_position.n1[1] ), 
    .CIN0(\sample_position.n7930 ), .CIN1(\sample_position.n11211 ), 
    .F0(\sample_position.n87_adj_1155[1] ), 
    .F1(\sample_position.n87_adj_1155[2] ), .COUT1(\sample_position.n7932 ), 
    .COUT0(\sample_position.n11211 ));
  sample_position_SLICE_35 \sample_position.SLICE_35 ( 
    .D1(\sample_position.n11208 ), .C1(\sample_position.n1[0] ), .B1(VCC_net), 
    .CIN1(\sample_position.n11208 ), .F1(\sample_position.n87_adj_1155[0] ), 
    .COUT1(\sample_position.n7930 ), .COUT0(\sample_position.n11208 ));
  sample_output_SLICE_36 \sample_output.SLICE_36 ( 
    .DI0(\sample_output.n3997[9] ), .D1(\sample_output.n11250 ), 
    .D0(\sample_output.n8009 ), .C0(VCC_net), .B0(\r_Adder_Total[1][17] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n8009 ), .CIN1(\sample_output.n11250 ), 
    .Q0(\sample_output.r_Sample_R[17] ), .F0(\sample_output.n3997[9] ), 
    .COUT0(\sample_output.n11250 ));
  sample_output_SLICE_37 \sample_output.SLICE_37 ( 
    .DI1(\sample_output.n3997[8] ), .DI0(\sample_output.n3997[7] ), 
    .D1(\sample_output.n11247 ), .B1(\r_Adder_Total[1][16] ), 
    .D0(\sample_output.n8007 ), .B0(\r_Adder_Total[1][15] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n8007 ), .CIN1(\sample_output.n11247 ), 
    .Q0(\sample_output.r_Sample_R[15] ), .Q1(\sample_output.r_Sample_R[16] ), 
    .F0(\sample_output.n3997[7] ), .F1(\sample_output.n3997[8] ), 
    .COUT1(\sample_output.n8009 ), .COUT0(\sample_output.n11247 ));
  sample_output_SLICE_38 \sample_output.SLICE_38 ( 
    .DI1(\sample_output.n3997[6] ), .DI0(\sample_output.n3997[5] ), 
    .D1(\sample_output.n11244 ), .B1(\r_Adder_Total[1][14] ), 
    .D0(\sample_output.n8005 ), .B0(\r_Adder_Total[1][13] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n8005 ), .CIN1(\sample_output.n11244 ), 
    .Q0(\sample_output.r_Sample_R[13] ), .Q1(\sample_output.r_Sample_R[14] ), 
    .F0(\sample_output.n3997[5] ), .F1(\sample_output.n3997[6] ), 
    .COUT1(\sample_output.n8007 ), .COUT0(\sample_output.n11244 ));
  sample_output_SLICE_39 \sample_output.SLICE_39 ( 
    .DI1(\sample_output.n3997[4] ), .DI0(\sample_output.n3997[3] ), 
    .D1(\sample_output.n11241 ), .B1(\r_Adder_Total[1][12] ), 
    .D0(\sample_output.n8003 ), .B0(\r_Adder_Total[1][11] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n8003 ), .CIN1(\sample_output.n11241 ), 
    .Q0(\sample_output.r_Sample_R[11] ), .Q1(\sample_output.r_Sample_R[12] ), 
    .F0(\sample_output.n3997[3] ), .F1(\sample_output.n3997[4] ), 
    .COUT1(\sample_output.n8005 ), .COUT0(\sample_output.n11241 ));
  sample_output_SLICE_40 \sample_output.SLICE_40 ( 
    .DI1(\sample_output.n3997[2] ), .DI0(\sample_output.n3997[1] ), 
    .D1(\sample_output.n11238 ), .C1(VCC_net), .B1(\r_Adder_Total[1][10] ), 
    .D0(\sample_output.n8001 ), .B0(\r_Adder_Total[1][9] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n8001 ), .CIN1(\sample_output.n11238 ), 
    .Q0(\sample_output.r_Sample_R[9] ), .Q1(\sample_output.r_Sample_R[10] ), 
    .F0(\sample_output.n3997[1] ), .F1(\sample_output.n3997[2] ), 
    .COUT1(\sample_output.n8003 ), .COUT0(\sample_output.n11238 ));
  sample_output_SLICE_41 \sample_output.SLICE_41 ( 
    .DI1(\sample_output.n3997[0] ), .D1(\sample_output.n11235 ), .C1(VCC_net), 
    .B1(\r_Adder_Total[1][8] ), .CE(\sample_output.n2982 ), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN1(\sample_output.n11235 ), 
    .Q1(\sample_output.r_Sample_R[8] ), .F1(\sample_output.n3997[0] ), 
    .COUT1(\sample_output.n8001 ), .COUT0(\sample_output.n11235 ));
  sample_output_SLICE_42 \sample_output.SLICE_42 ( 
    .DI0(\sample_output.n4011[9] ), .D1(\sample_output.n11268 ), 
    .D0(\sample_output.n7998 ), .C0(VCC_net), .B0(\r_Adder_Total[0][17] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n7998 ), .CIN1(\sample_output.n11268 ), 
    .Q0(\sample_output.r_Sample_L[17] ), .F0(\sample_output.n4011[9] ), 
    .COUT0(\sample_output.n11268 ));
  sample_output_SLICE_43 \sample_output.SLICE_43 ( 
    .DI1(\sample_output.n4011[8] ), .DI0(\sample_output.n4011[7] ), 
    .D1(\sample_output.n11265 ), .B1(\r_Adder_Total[0][16] ), 
    .D0(\sample_output.n7996 ), .B0(\r_Adder_Total[0][15] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n7996 ), .CIN1(\sample_output.n11265 ), 
    .Q0(\sample_output.r_Sample_L[15] ), .Q1(\sample_output.r_Sample_L[16] ), 
    .F0(\sample_output.n4011[7] ), .F1(\sample_output.n4011[8] ), 
    .COUT1(\sample_output.n7998 ), .COUT0(\sample_output.n11265 ));
  sample_output_SLICE_44 \sample_output.SLICE_44 ( 
    .DI1(\sample_output.n4011[6] ), .DI0(\sample_output.n4011[5] ), 
    .D1(\sample_output.n11262 ), .B1(\r_Adder_Total[0][14] ), 
    .D0(\sample_output.n7994 ), .B0(\r_Adder_Total[0][13] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n7994 ), .CIN1(\sample_output.n11262 ), 
    .Q0(\sample_output.r_Sample_L[13] ), .Q1(\sample_output.r_Sample_L[14] ), 
    .F0(\sample_output.n4011[5] ), .F1(\sample_output.n4011[6] ), 
    .COUT1(\sample_output.n7996 ), .COUT0(\sample_output.n11262 ));
  sample_output_SLICE_45 \sample_output.SLICE_45 ( 
    .DI1(\sample_output.n4011[4] ), .DI0(\sample_output.n4011[3] ), 
    .D1(\sample_output.n11259 ), .B1(\r_Adder_Total[0][12] ), 
    .D0(\sample_output.n7992 ), .B0(\r_Adder_Total[0][11] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n7992 ), .CIN1(\sample_output.n11259 ), 
    .Q0(\sample_output.r_Sample_L[11] ), .Q1(\sample_output.r_Sample_L[12] ), 
    .F0(\sample_output.n4011[3] ), .F1(\sample_output.n4011[4] ), 
    .COUT1(\sample_output.n7994 ), .COUT0(\sample_output.n11259 ));
  sample_output_SLICE_46 \sample_output.SLICE_46 ( 
    .DI1(\sample_output.n4011[2] ), .DI0(\sample_output.n4011[1] ), 
    .D1(\sample_output.n11256 ), .C1(VCC_net), .B1(\r_Adder_Total[0][10] ), 
    .D0(\sample_output.n7990 ), .B0(\r_Adder_Total[0][9] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n7990 ), .CIN1(\sample_output.n11256 ), 
    .Q0(\sample_output.r_Sample_L[9] ), .Q1(\sample_output.r_Sample_L[10] ), 
    .F0(\sample_output.n4011[1] ), .F1(\sample_output.n4011[2] ), 
    .COUT1(\sample_output.n7992 ), .COUT0(\sample_output.n11256 ));
  sample_output_SLICE_47 \sample_output.SLICE_47 ( 
    .DI1(\sample_output.n4011[0] ), .D1(\sample_output.n11253 ), .C1(VCC_net), 
    .B1(\r_Adder_Total[0][8] ), .CE(\sample_output.n2982 ), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN1(\sample_output.n11253 ), 
    .Q1(\sample_output.r_Sample_L[8] ), .F1(\sample_output.n4011[0] ), 
    .COUT1(\sample_output.n7990 ), .COUT0(\sample_output.n11253 ));
  SLICE_48 SLICE_48( .DI0(n70), .D1(n11295), .D0(n7835), 
    .C0(\Sample_Timer[15] ), .LSR(n6691), .CLK(Main_Clock), .CIN0(n7835), 
    .CIN1(n11295), .Q0(\Sample_Timer[15] ), .F0(n70), .COUT0(n11295));
  SLICE_49 SLICE_49( .DI1(n71), .DI0(n72), .D1(n11292), 
    .C1(\Sample_Timer[14] ), .D0(n7833), .C0(\Sample_Timer[13] ), .LSR(n6691), 
    .CLK(Main_Clock), .CIN0(n7833), .CIN1(n11292), .Q0(\Sample_Timer[13] ), 
    .Q1(\Sample_Timer[14] ), .F0(n72), .F1(n71), .COUT1(n7835), .COUT0(n11292));
  SLICE_50 SLICE_50( .DI1(n83), .DI0(n84), .D1(n11274), .C1(\Sample_Timer[2] ), 
    .D0(n7821), .C0(\Sample_Timer[1] ), .LSR(n6691), .CLK(Main_Clock), 
    .CIN0(n7821), .CIN1(n11274), .Q0(\Sample_Timer[1] ), 
    .Q1(\Sample_Timer[2] ), .F0(n84), .F1(n83), .COUT1(n7823), .COUT0(n11274));
  SLICE_51 SLICE_51( .DI1(n73), .DI0(n74), .D1(n11289), 
    .C1(\Sample_Timer[12] ), .D0(n7831), .C0(\Sample_Timer[11] ), .LSR(n6691), 
    .CLK(Main_Clock), .CIN0(n7831), .CIN1(n11289), .Q0(\Sample_Timer[11] ), 
    .Q1(\Sample_Timer[12] ), .F0(n74), .F1(n73), .COUT1(n7833), .COUT0(n11289));
  SLICE_52 SLICE_52( .DI1(n75), .DI0(n76), .D1(n11286), 
    .C1(\Sample_Timer[10] ), .D0(n7829), .C0(\Sample_Timer[9] ), .LSR(n6691), 
    .CLK(Main_Clock), .CIN0(n7829), .CIN1(n11286), .Q0(\Sample_Timer[9] ), 
    .Q1(\Sample_Timer[10] ), .F0(n76), .F1(n75), .COUT1(n7831), .COUT0(n11286));
  SLICE_53 SLICE_53( .DI1(n77), .DI0(n78), .D1(n11283), .C1(\Sample_Timer[8] ), 
    .D0(n7827), .C0(\Sample_Timer[7] ), .LSR(n6691), .CLK(Main_Clock), 
    .CIN0(n7827), .CIN1(n11283), .Q0(\Sample_Timer[7] ), 
    .Q1(\Sample_Timer[8] ), .F0(n78), .F1(n77), .COUT1(n7829), .COUT0(n11283));
  SLICE_54 SLICE_54( .DI1(n79), .DI0(n80), .D1(n11280), .C1(\Sample_Timer[6] ), 
    .D0(n7825), .C0(\Sample_Timer[5] ), .LSR(n6691), .CLK(Main_Clock), 
    .CIN0(n7825), .CIN1(n11280), .Q0(\Sample_Timer[5] ), 
    .Q1(\Sample_Timer[6] ), .F0(n80), .F1(n79), .COUT1(n7827), .COUT0(n11280));
  SLICE_55 SLICE_55( .D1(n11118), .B1(\Harmonic[6] ), .D0(n7816), 
    .B0(\Harmonic[5] ), .CIN0(n7816), .CIN1(n11118), .F0(n41), .F1(n40), 
    .COUT1(n7818), .COUT0(n11118));
  SLICE_56 SLICE_56( .DI1(n85), .D1(n11271), .C1(\Sample_Timer[0] ), 
    .B1(VCC_net), .LSR(n6691), .CLK(Main_Clock), .CIN1(n11271), 
    .Q1(\Sample_Timer[0] ), .F1(n85), .COUT1(n7821), .COUT0(n11271));
  SLICE_57 SLICE_57( .D1(n11112), .B1(\Harmonic[2] ), .D0(n7812), 
    .B0(\Harmonic[1] ), .CIN0(n7812), .CIN1(n11112), .F0(n45), 
    .F1(n44_adj_1182), .COUT1(n7814), .COUT0(n11112));
  SLICE_58 SLICE_58( .DI1(n81), .DI0(n82), .D1(n11277), .C1(\Sample_Timer[4] ), 
    .D0(n7823), .C0(\Sample_Timer[3] ), .LSR(n6691), .CLK(Main_Clock), 
    .CIN0(n7823), .CIN1(n11277), .Q0(\Sample_Timer[3] ), 
    .Q1(\Sample_Timer[4] ), .F0(n82), .F1(n81), .COUT1(n7825), .COUT0(n11277));
  SLICE_59 SLICE_59( .D1(n11115), .B1(\Harmonic[4] ), .D0(n7814), 
    .B0(\Harmonic[3] ), .CIN0(n7814), .CIN1(n11115), .F0(n43), .F1(n42), 
    .COUT1(n7816), .COUT0(n11115));
  SLICE_60 SLICE_60( .D1(n11055), .C1(VCC_net), .B1(\Harmonic[0] ), 
    .CIN1(n11055), .F1(n46), .COUT1(n7812), .COUT0(n11055));
  SLICE_61 SLICE_61( .D1(n11121), .D0(n7818), .B0(\Harmonic[7] ), .CIN0(n7818), 
    .CIN1(n11121), .F0(n39), .COUT0(n11121));
  genadder_1__adder_SLICE_62 \genadder[1].adder.SLICE_62 ( 
    .D1(\genadder[1].adder.n11073 ), .C1(\Working_Total_adj_1201[15] ), 
    .B1(\Adder_Total[1][6] ), .D0(\genadder[1].adder.n7892 ), 
    .C0(\Working_Total_adj_1201[14] ), .B0(\Adder_Total[1][5] ), 
    .CIN0(\genadder[1].adder.n7892 ), .CIN1(\genadder[1].adder.n11073 ), 
    .F0(\genadder[1].adder.n167[5] ), .F1(\genadder[1].adder.n167[6] ), 
    .COUT1(\genadder[1].adder.n7894 ), .COUT0(\genadder[1].adder.n11073 ));
  genadder_1__adder_SLICE_63 \genadder[1].adder.SLICE_63 ( 
    .D1(\genadder[1].adder.n11070 ), .C1(\Working_Total_adj_1201[13] ), 
    .B1(\Adder_Total[1][4] ), .D0(\genadder[1].adder.n7890 ), 
    .C0(\Working_Total_adj_1201[12] ), .B0(\Adder_Total[1][3] ), 
    .CIN0(\genadder[1].adder.n7890 ), .CIN1(\genadder[1].adder.n11070 ), 
    .F0(\genadder[1].adder.n167[3] ), .F1(\genadder[1].adder.n167[4] ), 
    .COUT1(\genadder[1].adder.n7892 ), .COUT0(\genadder[1].adder.n11070 ));
  genadder_1__adder_SLICE_64 \genadder[1].adder.SLICE_64 ( 
    .D1(\genadder[1].adder.n11067 ), .C1(\Working_Total_adj_1201[11] ), 
    .B1(\Adder_Total[1][2] ), .D0(\genadder[1].adder.n7888 ), 
    .C0(\Working_Total_adj_1201[10] ), 
    .B0(\genadder[1].adder.Adder_Total[1][1] ), 
    .CIN0(\genadder[1].adder.n7888 ), .CIN1(\genadder[1].adder.n11067 ), 
    .F0(\genadder[1].adder.n167[1] ), .F1(\genadder[1].adder.n167[2] ), 
    .COUT1(\genadder[1].adder.n7890 ), .COUT0(\genadder[1].adder.n11067 ));
  genadder_1__adder_SLICE_65 \genadder[1].adder.SLICE_65 ( 
    .D1(\genadder[1].adder.n11064 ), .C1(\Working_Total_adj_1201[9] ), 
    .B1(\genadder[1].adder.Adder_Total[1][0] ), 
    .CIN1(\genadder[1].adder.n11064 ), .F1(\genadder[1].adder.n167[0] ), 
    .COUT1(\genadder[1].adder.n7888 ), .COUT0(\genadder[1].adder.n11064 ));
  genadder_1__adder_SLICE_66 \genadder[1].adder.SLICE_66 ( 
    .D1(\genadder[1].adder.n11091 ), .C1(\Working_Total_adj_1201[31] ), 
    .B1(\genadder[1].adder.Adder_Total[1][18] ), 
    .D0(\genadder[1].adder.n7904 ), .C0(\Working_Total_adj_1201[31] ), 
    .B0(\Adder_Total[1][17] ), .CIN0(\genadder[1].adder.n7904 ), 
    .CIN1(\genadder[1].adder.n11091 ), .F0(\genadder[1].adder.n167[17] ), 
    .F1(\genadder[1].adder.n167[18] ), .COUT0(\genadder[1].adder.n11091 ));
  genadder_1__adder_SLICE_67 \genadder[1].adder.SLICE_67 ( 
    .D1(\genadder[1].adder.n11088 ), .C1(\Working_Total_adj_1201[31] ), 
    .B1(\Adder_Total[1][16] ), .D0(\genadder[1].adder.n7902 ), 
    .C0(\Working_Total_adj_1201[31] ), .B0(\Adder_Total[1][15] ), 
    .CIN0(\genadder[1].adder.n7902 ), .CIN1(\genadder[1].adder.n11088 ), 
    .F0(\genadder[1].adder.n167[15] ), .F1(\genadder[1].adder.n167[16] ), 
    .COUT1(\genadder[1].adder.n7904 ), .COUT0(\genadder[1].adder.n11088 ));
  genadder_1__adder_SLICE_68 \genadder[1].adder.SLICE_68 ( 
    .D1(\genadder[1].adder.n11085 ), .C1(\Working_Total_adj_1201[23] ), 
    .B1(\Adder_Total[1][14] ), .D0(\genadder[1].adder.n7900 ), 
    .C0(\Working_Total_adj_1201[22] ), .B0(\Adder_Total[1][13] ), 
    .CIN0(\genadder[1].adder.n7900 ), .CIN1(\genadder[1].adder.n11085 ), 
    .F0(\genadder[1].adder.n167[13] ), .F1(\genadder[1].adder.n167[14] ), 
    .COUT1(\genadder[1].adder.n7902 ), .COUT0(\genadder[1].adder.n11085 ));
  genadder_1__adder_SLICE_69 \genadder[1].adder.SLICE_69 ( 
    .D1(\genadder[1].adder.n11082 ), .C1(\Working_Total_adj_1201[21] ), 
    .B1(\Adder_Total[1][12] ), .D0(\genadder[1].adder.n7898 ), 
    .C0(\Working_Total_adj_1201[20] ), .B0(\Adder_Total[1][11] ), 
    .CIN0(\genadder[1].adder.n7898 ), .CIN1(\genadder[1].adder.n11082 ), 
    .F0(\genadder[1].adder.n167[11] ), .F1(\genadder[1].adder.n167[12] ), 
    .COUT1(\genadder[1].adder.n7900 ), .COUT0(\genadder[1].adder.n11082 ));
  genadder_1__adder_SLICE_70 \genadder[1].adder.SLICE_70 ( 
    .D1(\genadder[1].adder.n11079 ), .C1(\Working_Total_adj_1201[19] ), 
    .B1(\Adder_Total[1][10] ), .D0(\genadder[1].adder.n7896 ), 
    .C0(\Working_Total_adj_1201[18] ), .B0(\Adder_Total[1][9] ), 
    .CIN0(\genadder[1].adder.n7896 ), .CIN1(\genadder[1].adder.n11079 ), 
    .F0(\genadder[1].adder.n167[9] ), .F1(\genadder[1].adder.n167[10] ), 
    .COUT1(\genadder[1].adder.n7898 ), .COUT0(\genadder[1].adder.n11079 ));
  genadder_1__adder_SLICE_71 \genadder[1].adder.SLICE_71 ( 
    .D1(\genadder[1].adder.n11076 ), .C1(\Working_Total_adj_1201[17] ), 
    .B1(\Adder_Total[1][8] ), .D0(\genadder[1].adder.n7894 ), 
    .C0(\Working_Total_adj_1201[16] ), .B0(\Adder_Total[1][7] ), 
    .CIN0(\genadder[1].adder.n7894 ), .CIN1(\genadder[1].adder.n11076 ), 
    .F0(\genadder[1].adder.n167[7] ), .F1(\genadder[1].adder.n167[8] ), 
    .COUT1(\genadder[1].adder.n7896 ), .COUT0(\genadder[1].adder.n11076 ));
  mult_SLICE_72 \mult.SLICE_72 ( .D1(\mult.n11109 ), .D0(\mult.n7987 ), 
    .C0(\mult.n1[8] ), .B0(\Adder_Mult[8] ), .CIN0(\mult.n7987 ), 
    .CIN1(\mult.n11109 ), .F0(\mult.n57[9] ), .F1(\mult.cout ), 
    .COUT0(\mult.n11109 ));
  mult_SLICE_73 \mult.SLICE_73 ( .D1(\mult.n11106 ), .C1(\mult.n1[7] ), 
    .B1(\Adder_Mult[7] ), .D0(\mult.n7985 ), .C0(\mult.n1[6] ), 
    .B0(\Adder_Mult[6] ), .CIN0(\mult.n7985 ), .CIN1(\mult.n11106 ), 
    .F0(\mult.n57[7] ), .F1(\mult.n57[8] ), .COUT1(\mult.n7987 ), 
    .COUT0(\mult.n11106 ));
  mult_SLICE_74 \mult.SLICE_74 ( .D1(\mult.n11103 ), .C1(\mult.n1[5] ), 
    .B1(\Adder_Mult[5] ), .D0(\mult.n7983 ), .C0(\mult.n1[4] ), 
    .B0(\Adder_Mult[4] ), .CIN0(\mult.n7983 ), .CIN1(\mult.n11103 ), 
    .F0(\mult.n57[5] ), .F1(\mult.n57[6] ), .COUT1(\mult.n7985 ), 
    .COUT0(\mult.n11103 ));
  mult_SLICE_75 \mult.SLICE_75 ( .D1(\mult.n11100 ), .C1(\mult.n1[3] ), 
    .B1(\Adder_Mult[3] ), .D0(\mult.n7981 ), .C0(\mult.n1[2] ), 
    .B0(\Adder_Mult[2] ), .CIN0(\mult.n7981 ), .CIN1(\mult.n11100 ), 
    .F0(\mult.n57[3] ), .F1(\mult.n57[4] ), .COUT1(\mult.n7983 ), 
    .COUT0(\mult.n11100 ));
  mult_SLICE_76 \mult.SLICE_76 ( .D1(\mult.n11097 ), .C1(\mult.n1[1] ), 
    .B1(\Adder_Mult[1] ), .D0(VCC_net), .C0(\mult.n1[0] ), 
    .B0(\Adder_Mult[0] ), .CIN1(\mult.n11097 ), .F0(\mult.n57[1] ), 
    .F1(\mult.n57[2] ), .COUT1(\mult.n7981 ), .COUT0(\mult.n11097 ));
  mult_SLICE_77 \mult.SLICE_77 ( .D1(\mult.n11199 ), .D0(\mult.n7927 ), 
    .B0(\mult.Comb_Counter[7] ), .CIN0(\mult.n7927 ), .CIN1(\mult.n11199 ), 
    .F0(\mult.n47[7] ), .COUT0(\mult.n11199 ));
  mult_SLICE_78 \mult.SLICE_78 ( .D1(\mult.n11196 ), 
    .B1(\mult.Comb_Counter[6] ), .D0(\mult.n7925 ), 
    .B0(\mult.Comb_Counter[5] ), .CIN0(\mult.n7925 ), .CIN1(\mult.n11196 ), 
    .F0(\mult.n47[5] ), .F1(\mult.n47[6] ), .COUT1(\mult.n7927 ), 
    .COUT0(\mult.n11196 ));
  mult_SLICE_79 \mult.SLICE_79 ( .D1(\mult.n11193 ), 
    .B1(\mult.Comb_Counter[4] ), .D0(\mult.n7923 ), 
    .B0(\mult.Comb_Counter[3] ), .CIN0(\mult.n7923 ), .CIN1(\mult.n11193 ), 
    .F0(\mult.n47[3] ), .F1(\mult.n47[4] ), .COUT1(\mult.n7925 ), 
    .COUT0(\mult.n11193 ));
  mult_SLICE_80 \mult.SLICE_80 ( .D1(\mult.n11190 ), 
    .B1(\mult.Comb_Counter[2] ), .D0(\mult.n7921 ), 
    .B0(\mult.Comb_Counter[1] ), .CIN0(\mult.n7921 ), .CIN1(\mult.n11190 ), 
    .F0(\mult.n47[1] ), .F1(\mult.n47[2] ), .COUT1(\mult.n7923 ), 
    .COUT0(\mult.n11190 ));
  mult_SLICE_81 \mult.SLICE_81 ( .D1(\mult.n11094 ), .C1(VCC_net), 
    .B1(\mult.Comb_Counter[0] ), .CIN1(\mult.n11094 ), .F1(\mult.n47[0] ), 
    .COUT1(\mult.n7921 ), .COUT0(\mult.n11094 ));
  genadder_0__adder_SLICE_82 \genadder[0].adder.SLICE_82 ( 
    .D1(\genadder[0].adder.n11046 ), .C1(\Working_Total[11] ), 
    .B1(\Adder_Total[0][2] ), .D0(\genadder[0].adder.n7855 ), 
    .C0(\Working_Total[10] ), .B0(\genadder[0].adder.Adder_Total[0][1] ), 
    .CIN0(\genadder[0].adder.n7855 ), .CIN1(\genadder[0].adder.n11046 ), 
    .F0(\genadder[0].adder.n167[1] ), .F1(\genadder[0].adder.n167[2] ), 
    .COUT1(\genadder[0].adder.n7857 ), .COUT0(\genadder[0].adder.n11046 ));
  genadder_0__adder_SLICE_83 \genadder[0].adder.SLICE_83 ( 
    .D1(\genadder[0].adder.n11043 ), .C1(\Working_Total[9] ), 
    .B1(\genadder[0].adder.Adder_Total[0][0] ), 
    .CIN1(\genadder[0].adder.n11043 ), .F1(\genadder[0].adder.n167[0] ), 
    .COUT1(\genadder[0].adder.n7855 ), .COUT0(\genadder[0].adder.n11043 ));
  genadder_0__adder_SLICE_84 \genadder[0].adder.SLICE_84 ( 
    .D1(\genadder[0].adder.n11205 ), .C1(\Working_Total[31] ), 
    .B1(\genadder[0].adder.Adder_Total[0][18] ), 
    .D0(\genadder[0].adder.n7871 ), .C0(\Working_Total[31] ), 
    .B0(\Adder_Total[0][17] ), .CIN0(\genadder[0].adder.n7871 ), 
    .CIN1(\genadder[0].adder.n11205 ), .F0(\genadder[0].adder.n167[17] ), 
    .F1(\genadder[0].adder.n167[18] ), .COUT0(\genadder[0].adder.n11205 ));
  genadder_0__adder_SLICE_85 \genadder[0].adder.SLICE_85 ( 
    .D1(\genadder[0].adder.n11175 ), .C1(\Working_Total[31] ), 
    .B1(\Adder_Total[0][16] ), .D0(\genadder[0].adder.n7869 ), 
    .C0(\Working_Total[31] ), .B0(\Adder_Total[0][15] ), 
    .CIN0(\genadder[0].adder.n7869 ), .CIN1(\genadder[0].adder.n11175 ), 
    .F0(\genadder[0].adder.n167[15] ), .F1(\genadder[0].adder.n167[16] ), 
    .COUT1(\genadder[0].adder.n7871 ), .COUT0(\genadder[0].adder.n11175 ));
  genadder_0__adder_SLICE_86 \genadder[0].adder.SLICE_86 ( 
    .D1(\genadder[0].adder.n11157 ), .C1(\Working_Total[23] ), 
    .B1(\Adder_Total[0][14] ), .D0(\genadder[0].adder.n7867 ), 
    .C0(\Working_Total[22] ), .B0(\Adder_Total[0][13] ), 
    .CIN0(\genadder[0].adder.n7867 ), .CIN1(\genadder[0].adder.n11157 ), 
    .F0(\genadder[0].adder.n167[13] ), .F1(\genadder[0].adder.n167[14] ), 
    .COUT1(\genadder[0].adder.n7869 ), .COUT0(\genadder[0].adder.n11157 ));
  genadder_0__adder_SLICE_87 \genadder[0].adder.SLICE_87 ( 
    .D1(\genadder[0].adder.n11154 ), .C1(\Working_Total[21] ), 
    .B1(\Adder_Total[0][12] ), .D0(\genadder[0].adder.n7865 ), 
    .C0(\Working_Total[20] ), .B0(\Adder_Total[0][11] ), 
    .CIN0(\genadder[0].adder.n7865 ), .CIN1(\genadder[0].adder.n11154 ), 
    .F0(\genadder[0].adder.n167[11] ), .F1(\genadder[0].adder.n167[12] ), 
    .COUT1(\genadder[0].adder.n7867 ), .COUT0(\genadder[0].adder.n11154 ));
  genadder_0__adder_SLICE_88 \genadder[0].adder.SLICE_88 ( 
    .D1(\genadder[0].adder.n11151 ), .C1(\Working_Total[19] ), 
    .B1(\Adder_Total[0][10] ), .D0(\genadder[0].adder.n7863 ), 
    .C0(\Working_Total[18] ), .B0(\Adder_Total[0][9] ), 
    .CIN0(\genadder[0].adder.n7863 ), .CIN1(\genadder[0].adder.n11151 ), 
    .F0(\genadder[0].adder.n167[9] ), .F1(\genadder[0].adder.n167[10] ), 
    .COUT1(\genadder[0].adder.n7865 ), .COUT0(\genadder[0].adder.n11151 ));
  genadder_0__adder_SLICE_89 \genadder[0].adder.SLICE_89 ( 
    .D1(\genadder[0].adder.n11124 ), .C1(\Working_Total[17] ), 
    .B1(\Adder_Total[0][8] ), .D0(\genadder[0].adder.n7861 ), 
    .C0(\Working_Total[16] ), .B0(\Adder_Total[0][7] ), 
    .CIN0(\genadder[0].adder.n7861 ), .CIN1(\genadder[0].adder.n11124 ), 
    .F0(\genadder[0].adder.n167[7] ), .F1(\genadder[0].adder.n167[8] ), 
    .COUT1(\genadder[0].adder.n7863 ), .COUT0(\genadder[0].adder.n11124 ));
  genadder_0__adder_SLICE_90 \genadder[0].adder.SLICE_90 ( 
    .D1(\genadder[0].adder.n11061 ), .C1(\Working_Total[15] ), 
    .B1(\Adder_Total[0][6] ), .D0(\genadder[0].adder.n7859 ), 
    .C0(\Working_Total[14] ), .B0(\Adder_Total[0][5] ), 
    .CIN0(\genadder[0].adder.n7859 ), .CIN1(\genadder[0].adder.n11061 ), 
    .F0(\genadder[0].adder.n167[5] ), .F1(\genadder[0].adder.n167[6] ), 
    .COUT1(\genadder[0].adder.n7861 ), .COUT0(\genadder[0].adder.n11061 ));
  genadder_0__adder_SLICE_91 \genadder[0].adder.SLICE_91 ( 
    .D1(\genadder[0].adder.n11058 ), .C1(\Working_Total[13] ), 
    .B1(\Adder_Total[0][4] ), .D0(\genadder[0].adder.n7857 ), 
    .C0(\Working_Total[12] ), .B0(\Adder_Total[0][3] ), 
    .CIN0(\genadder[0].adder.n7857 ), .CIN1(\genadder[0].adder.n11058 ), 
    .F0(\genadder[0].adder.n167[3] ), .F1(\genadder[0].adder.n167[4] ), 
    .COUT1(\genadder[0].adder.n7859 ), .COUT0(\genadder[0].adder.n11058 ));
  SLICE_92 SLICE_92( .DI1(\ADC_Data[2][5].sig_140.FeedThruLUT ), 
    .DI0(\ADC_Data[2][4].sig_000.FeedThruLUT ), .C1(\ADC_Data[2][5] ), 
    .D0(\ADC_Data[2][4] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[4] ), 
    .Q1(\Scale_Initial[5] ), .F0(\ADC_Data[2][4].sig_000.FeedThruLUT ), 
    .F1(\ADC_Data[2][5].sig_140.FeedThruLUT ));
  SLICE_93 SLICE_93( .DI1(\ADC_Data[3][1].sig_099.FeedThruLUT ), 
    .DI0(\ADC_Data[3][0].sig_001.FeedThruLUT ), .C1(\ADC_Data[3][1] ), 
    .B0(\ADC_Data[3][0] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[0] ), 
    .Q1(\Freq_Scale[1] ), .F0(\ADC_Data[3][0].sig_001.FeedThruLUT ), 
    .F1(\ADC_Data[3][1].sig_099.FeedThruLUT ));
  SLICE_94 SLICE_94( .DI1(\ADC_Data[4][1].sig_084.FeedThruLUT ), 
    .DI0(\ADC_Data[4][0].sig_002.FeedThruLUT ), .A1(\ADC_Data[4][1] ), 
    .A0(\ADC_Data[4][0] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[0] ), 
    .Q1(\Comb_Interval[1] ), .F0(\ADC_Data[4][0].sig_002.FeedThruLUT ), 
    .F1(\ADC_Data[4][1].sig_084.FeedThruLUT ));
  SLICE_95 SLICE_95( .DI0(test_N_190), .A0(test_c), .CLK(ADC_Data_Received), 
    .Q0(test_c), .F0(test_N_190));
  SLICE_96 SLICE_96( .DI1(n10_adj_1199), .DI0(n10_adj_1200), .D1(n45), 
    .C1(\SM_Top[1] ), .D0(\SM_Top[1] ), .B0(n46), .CE(n6880), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\Harmonic[0] ), 
    .Q1(\Harmonic[1] ), .F0(n10_adj_1200), .F1(n10_adj_1199));
  SLICE_97 SLICE_97( .DI1(\ADC_Data[1][1].sig_020.FeedThruLUT ), 
    .DI0(\ADC_Data[1][0].sig_003.FeedThruLUT ), .A1(\ADC_Data[1][1] ), 
    .B0(\ADC_Data[1][0] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[0] ), 
    .Q1(\Harmonic_Scale[1] ), .F0(\ADC_Data[1][0].sig_003.FeedThruLUT ), 
    .F1(\ADC_Data[1][1].sig_020.FeedThruLUT ));
  SLICE_98 SLICE_98( .DI1(\ADC_Data[0][1].sig_005.FeedThruLUT ), 
    .DI0(\ADC_Data[0][0].sig_004.FeedThruLUT ), .A1(\ADC_Data[0][1] ), 
    .D0(\ADC_Data[0][0] ), .CLK(ADC_Data_Received), .Q0(\Frequency[0] ), 
    .Q1(\Frequency[1] ), .F0(\ADC_Data[0][0].sig_004.FeedThruLUT ), 
    .F1(\ADC_Data[0][1].sig_005.FeedThruLUT ));
  SLICE_100 SLICE_100( .DI1(\ADC_Data[0][3].sig_007.FeedThruLUT ), 
    .DI0(\ADC_Data[0][2].sig_006.FeedThruLUT ), .B1(\ADC_Data[0][3] ), 
    .B0(\ADC_Data[0][2] ), .CLK(ADC_Data_Received), .Q0(\Frequency[2] ), 
    .Q1(\Frequency[3] ), .F0(\ADC_Data[0][2].sig_006.FeedThruLUT ), 
    .F1(\ADC_Data[0][3].sig_007.FeedThruLUT ));
  SLICE_102 SLICE_102( .DI1(\ADC_Data[0][5].sig_009.FeedThruLUT ), 
    .DI0(\ADC_Data[0][4].sig_008.FeedThruLUT ), .C1(\ADC_Data[0][5] ), 
    .D0(\ADC_Data[0][4] ), .CLK(ADC_Data_Received), .Q0(\Frequency[4] ), 
    .Q1(\Frequency[5] ), .F0(\ADC_Data[0][4].sig_008.FeedThruLUT ), 
    .F1(\ADC_Data[0][5].sig_009.FeedThruLUT ));
  SLICE_104 SLICE_104( .DI1(\ADC_Data[0][7].sig_011.FeedThruLUT ), 
    .DI0(\ADC_Data[0][6].sig_010.FeedThruLUT ), .C1(\ADC_Data[0][7] ), 
    .D0(\ADC_Data[0][6] ), .CLK(ADC_Data_Received), .Q0(\Frequency[6] ), 
    .Q1(\Frequency[7] ), .F0(\ADC_Data[0][6].sig_010.FeedThruLUT ), 
    .F1(\ADC_Data[0][7].sig_011.FeedThruLUT ));
  SLICE_106 SLICE_106( .DI1(\ADC_Data[0][9].sig_013.FeedThruLUT ), 
    .DI0(\ADC_Data[0][8].sig_012.FeedThruLUT ), .C1(\ADC_Data[0][9] ), 
    .A0(\ADC_Data[0][8] ), .CLK(ADC_Data_Received), .Q0(\Frequency[8] ), 
    .Q1(\Frequency[9] ), .F0(\ADC_Data[0][8].sig_012.FeedThruLUT ), 
    .F1(\ADC_Data[0][9].sig_013.FeedThruLUT ));
  SLICE_108 SLICE_108( .DI1(\ADC_Data[0][11].sig_015.FeedThruLUT ), 
    .DI0(\ADC_Data[0][10].sig_014.FeedThruLUT ), .C1(\ADC_Data[0][11] ), 
    .C0(\ADC_Data[0][10] ), .CLK(ADC_Data_Received), .Q0(\Frequency[10] ), 
    .Q1(\Frequency[11] ), .F0(\ADC_Data[0][10].sig_014.FeedThruLUT ), 
    .F1(\ADC_Data[0][11].sig_015.FeedThruLUT ));
  SLICE_110 SLICE_110( .DI1(\ADC_Data[0][13].sig_017.FeedThruLUT ), 
    .DI0(\ADC_Data[0][12].sig_016.FeedThruLUT ), .D1(\ADC_Data[0][13] ), 
    .D0(\ADC_Data[0][12] ), .CLK(ADC_Data_Received), .Q0(\Frequency[12] ), 
    .Q1(\Frequency[13] ), .F0(\ADC_Data[0][12].sig_016.FeedThruLUT ), 
    .F1(\ADC_Data[0][13].sig_017.FeedThruLUT ));
  SLICE_112 SLICE_112( .DI1(\ADC_Data[0][15].sig_019.FeedThruLUT ), 
    .DI0(\ADC_Data[0][14].sig_018.FeedThruLUT ), .D1(\ADC_Data[0][15] ), 
    .A0(\ADC_Data[0][14] ), .CLK(ADC_Data_Received), .Q0(\Frequency[14] ), 
    .Q1(\Frequency[15] ), .F0(\ADC_Data[0][14].sig_018.FeedThruLUT ), 
    .F1(\ADC_Data[0][15].sig_019.FeedThruLUT ));
  SLICE_115 SLICE_115( .DI1(\ADC_Data[1][3].sig_022.FeedThruLUT ), 
    .DI0(\ADC_Data[1][2].sig_021.FeedThruLUT ), .A1(\ADC_Data[1][3] ), 
    .C0(\ADC_Data[1][2] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[2] ), 
    .Q1(\Harmonic_Scale[3] ), .F0(\ADC_Data[1][2].sig_021.FeedThruLUT ), 
    .F1(\ADC_Data[1][3].sig_022.FeedThruLUT ));
  SLICE_117 SLICE_117( .DI1(\ADC_Data[1][5].sig_024.FeedThruLUT ), 
    .DI0(\ADC_Data[1][4].sig_023.FeedThruLUT ), .B1(\ADC_Data[1][5] ), 
    .D0(\ADC_Data[1][4] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[4] ), 
    .Q1(\Harmonic_Scale[5] ), .F0(\ADC_Data[1][4].sig_023.FeedThruLUT ), 
    .F1(\ADC_Data[1][5].sig_024.FeedThruLUT ));
  SLICE_119 SLICE_119( .DI1(\ADC_Data[1][7].sig_026.FeedThruLUT ), 
    .DI0(\ADC_Data[1][6].sig_025.FeedThruLUT ), .B1(\ADC_Data[1][7] ), 
    .C0(\ADC_Data[1][6] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[6] ), 
    .Q1(\Harmonic_Scale[7] ), .F0(\ADC_Data[1][6].sig_025.FeedThruLUT ), 
    .F1(\ADC_Data[1][7].sig_026.FeedThruLUT ));
  SLICE_122 SLICE_122( .DI1(\ADC_Data[2][2].sig_081.FeedThruLUT ), 
    .DI0(\ADC_Data[2][3].sig_028.FeedThruLUT ), .A1(\ADC_Data[2][2] ), 
    .B0(\ADC_Data[2][3] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[3] ), 
    .Q1(\Scale_Initial[2] ), .F0(\ADC_Data[2][3].sig_028.FeedThruLUT ), 
    .F1(\ADC_Data[2][2].sig_081.FeedThruLUT ));
  sample_position_SLICE_125 \sample_position.SLICE_125 ( 
    .DI1(\sample_position.Sample_Position[6].sig_042.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[5].sig_031.FeedThruLUT ), 
    .B1(\sample_position.Sample_Position[6] ), 
    .B0(\sample_position.Sample_Position[5] ), .CE(n6870), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[0] ), 
    .Q1(\sample_position.LUT_Pos[1] ), 
    .F0(\sample_position.Sample_Position[5].sig_031.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[6].sig_042.FeedThruLUT ));
  sample_position_SLICE_126 \sample_position.SLICE_126 ( 
    .DI1(\sample_position.SM_Sample_Position_2__N_312[1] ), 
    .DI0(\sample_position.SM_Sample_Position_2__N_312[0] ), 
    .D1(\SM_Sample_Position[0] ), .C1(\SM_Sample_Position[2] ), 
    .B1(\SM_Sample_Position[1] ), .D0(Next_Sample), 
    .C0(\SM_Sample_Position[2] ), .B0(\sample_position.n9762 ), 
    .A0(\SM_Sample_Position[0] ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(\SM_Sample_Position[0] ), .Q1(\SM_Sample_Position[1] ), 
    .F0(\sample_position.SM_Sample_Position_2__N_312[0] ), 
    .F1(\sample_position.SM_Sample_Position_2__N_312[1] ));
  sample_position_SLICE_129 \sample_position.SLICE_129 ( 
    .DI0(\sample_position.Sample_Position[15].sig_033.FeedThruLUT ), 
    .D0(\sample_position.Sample_Position[15] ), .CE(n6870), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[10] ), 
    .F0(\sample_position.Sample_Position[15].sig_033.FeedThruLUT ));
  sample_position_SLICE_130 \sample_position.SLICE_130 ( 
    .DI1(\sample_position.Sample_Position[13].sig_035.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[14].sig_034.FeedThruLUT ), 
    .C1(\sample_position.Sample_Position[13] ), 
    .C0(\sample_position.Sample_Position[14] ), .CE(n6870), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[9] ), 
    .Q1(\sample_position.LUT_Pos[8] ), 
    .F0(\sample_position.Sample_Position[14].sig_034.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[13].sig_035.FeedThruLUT ));
  sample_position_SLICE_132 \sample_position.SLICE_132 ( 
    .DI1(\sample_position.Sample_Position[11].sig_037.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[12].sig_036.FeedThruLUT ), 
    .C1(\sample_position.Sample_Position[11] ), 
    .C0(\sample_position.Sample_Position[12] ), .CE(n6870), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[7] ), 
    .Q1(\sample_position.LUT_Pos[6] ), 
    .F0(\sample_position.Sample_Position[12].sig_036.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[11].sig_037.FeedThruLUT ));
  sample_position_SLICE_134 \sample_position.SLICE_134 ( 
    .DI1(\sample_position.Sample_Position[9].sig_039.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[10].sig_038.FeedThruLUT ), 
    .A1(\sample_position.Sample_Position[9] ), 
    .C0(\sample_position.Sample_Position[10] ), .CE(n6870), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[5] ), 
    .Q1(\sample_position.LUT_Pos[4] ), 
    .F0(\sample_position.Sample_Position[10].sig_038.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[9].sig_039.FeedThruLUT ));
  sample_position_SLICE_136 \sample_position.SLICE_136 ( 
    .DI1(\sample_position.Sample_Position[7].sig_041.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[8].sig_040.FeedThruLUT ), 
    .D1(\sample_position.Sample_Position[7] ), 
    .D0(\sample_position.Sample_Position[8] ), .CE(n6870), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[3] ), 
    .Q1(\sample_position.LUT_Pos[2] ), 
    .F0(\sample_position.Sample_Position[8].sig_040.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[7].sig_041.FeedThruLUT ));
  sample_position_SLICE_140 \sample_position.SLICE_140 ( 
    .DI1(\sample_position.n87_adj_1156[2].sig_208.FeedThruLUT ), 
    .DI0(\sample_position.n87_adj_1156[1].sig_207.FeedThruLUT ), 
    .B1(\sample_position.n87_adj_1156[2] ), 
    .D0(\sample_position.n87_adj_1156[1] ), .CE(\sample_position.n6321 ), 
    .LSR(\sample_position.n6635 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .F0(\sample_position.n87_adj_1156[1].sig_207.FeedThruLUT ), 
    .F1(\sample_position.n87_adj_1156[2].sig_208.FeedThruLUT ));
  sample_position_SLICE_142 \sample_position.SLICE_142 ( 
    .DI1(\sample_position.n87_adj_1156[4].sig_210.FeedThruLUT ), 
    .DI0(\sample_position.n87_adj_1156[3].sig_209.FeedThruLUT ), 
    .D1(\sample_position.n87_adj_1156[4] ), 
    .D0(\sample_position.n87_adj_1156[3] ), .CE(\sample_position.n6321 ), 
    .LSR(\sample_position.n6635 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .F0(\sample_position.n87_adj_1156[3].sig_209.FeedThruLUT ), 
    .F1(\sample_position.n87_adj_1156[4].sig_210.FeedThruLUT ));
  sample_position_SLICE_144 \sample_position.SLICE_144 ( 
    .DI1(\sample_position.n87_adj_1156[6].sig_212.FeedThruLUT ), 
    .DI0(\sample_position.n87_adj_1156[5].sig_211.FeedThruLUT ), 
    .D1(\sample_position.n87_adj_1156[6] ), 
    .D0(\sample_position.n87_adj_1156[5] ), .CE(\sample_position.n6321 ), 
    .LSR(\sample_position.n6635 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .F0(\sample_position.n87_adj_1156[5].sig_211.FeedThruLUT ), 
    .F1(\sample_position.n87_adj_1156[6].sig_212.FeedThruLUT ));
  sample_position_SLICE_147 \sample_position.SLICE_147 ( 
    .DI1(\sample_position.n105[14] ), .DI0(\sample_position.n105[15] ), 
    .D1(\sample_position.n87_adj_1155[14] ), .C1(\Harmonic[0] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .D0(\sample_position.n87_adj_1155[15] ), .B0(\Harmonic[0] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .CE(\sample_position.n6148 ), .LSR(\sample_position.n6564 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[15] ), 
    .Q1(\sample_position.Accumulated_Offset[14] ), 
    .F0(\sample_position.n105[15] ), .F1(\sample_position.n105[14] ));
  sample_position_SLICE_149 \sample_position.SLICE_149 ( 
    .DI1(\sample_position.n105[12] ), .DI0(\sample_position.n105[13] ), 
    .D1(\Harmonic[0] ), .C1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .A1(\sample_position.n87_adj_1155[12] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .B0(\sample_position.n87_adj_1155[13] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6148 ), .LSR(\sample_position.n6564 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[13] ), 
    .Q1(\sample_position.Accumulated_Offset[12] ), 
    .F0(\sample_position.n105[13] ), .F1(\sample_position.n105[12] ));
  sample_position_SLICE_151 \sample_position.SLICE_151 ( 
    .DI1(\sample_position.n105[10] ), .DI0(\sample_position.n105[11] ), 
    .C1(\sample_position.n87_adj_1155[10] ), .B1(\Harmonic[0] ), 
    .A1(\sample_position.Accumulated_Freq_Offset[10] ), .D0(\Harmonic[0] ), 
    .C0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .A0(\sample_position.n87_adj_1155[11] ), .CE(\sample_position.n6148 ), 
    .LSR(\sample_position.n6564 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Offset[11] ), 
    .Q1(\sample_position.Accumulated_Offset[10] ), 
    .F0(\sample_position.n105[11] ), .F1(\sample_position.n105[10] ));
  sample_position_SLICE_153 \sample_position.SLICE_153 ( 
    .DI1(\sample_position.n105[8] ), .DI0(\sample_position.n105[9] ), 
    .D1(\sample_position.n87_adj_1155[8] ), 
    .C1(\sample_position.Accumulated_Freq_Offset[8] ), .B1(\Harmonic[0] ), 
    .D0(\sample_position.n87_adj_1155[9] ), .C0(\Harmonic[0] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .CE(\sample_position.n6148 ), .LSR(\sample_position.n6564 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[9] ), 
    .Q1(\sample_position.Accumulated_Offset[8] ), 
    .F0(\sample_position.n105[9] ), .F1(\sample_position.n105[8] ));
  sample_position_SLICE_155 \sample_position.SLICE_155 ( 
    .DI1(\sample_position.n105[6] ), .DI0(\sample_position.n105[7] ), 
    .D1(\sample_position.n87_adj_1155[6] ), .C1(\Harmonic[0] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .D0(\sample_position.n87_adj_1155[7] ), 
    .C0(\sample_position.Accumulated_Freq_Offset[7] ), .B0(\Harmonic[0] ), 
    .CE(\sample_position.n6148 ), .LSR(\sample_position.n6564 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[7] ), 
    .Q1(\sample_position.Accumulated_Offset[6] ), 
    .F0(\sample_position.n105[7] ), .F1(\sample_position.n105[6] ));
  sample_position_SLICE_158 \sample_position.SLICE_158 ( 
    .DI1(\sample_position.n105[4] ), .DI0(\sample_position.n105[5] ), 
    .C1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .B1(\sample_position.n87_adj_1155[4] ), .A1(\Harmonic[0] ), 
    .D0(\sample_position.n87_adj_1155[5] ), .B0(\Harmonic[0] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .CE(\sample_position.n6148 ), .LSR(\sample_position.n6564 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[5] ), 
    .Q1(\sample_position.Accumulated_Offset[4] ), 
    .F0(\sample_position.n105[5] ), .F1(\sample_position.n105[4] ));
  sample_position_SLICE_160 \sample_position.SLICE_160 ( 
    .DI1(\sample_position.n105[2] ), .DI0(\sample_position.n105[3] ), 
    .C1(\sample_position.n87_adj_1155[2] ), .B1(\Harmonic[0] ), 
    .A1(\sample_position.Accumulated_Freq_Offset[2] ), .C0(\Harmonic[0] ), 
    .B0(\sample_position.n87_adj_1155[3] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .CE(\sample_position.n6148 ), .LSR(\sample_position.n6564 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[3] ), 
    .Q1(\sample_position.Accumulated_Offset[2] ), 
    .F0(\sample_position.n105[3] ), .F1(\sample_position.n105[2] ));
  sample_position_SLICE_161 \sample_position.SLICE_161 ( 
    .DI1(\sample_position.n105[1] ), .DI0(\sample_position.n105[0] ), 
    .D1(\sample_position.Accumulated_Freq_Offset[1] ), .B1(\Harmonic[0] ), 
    .A1(\sample_position.n87_adj_1155[1] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[0] ), 
    .C0(\sample_position.n87_adj_1155[0] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6148 ), .LSR(\sample_position.n6564 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[0] ), 
    .Q1(\sample_position.Accumulated_Offset[1] ), 
    .F0(\sample_position.n105[0] ), .F1(\sample_position.n105[1] ));
  SLICE_165 SLICE_165( .DI1(\ADC_Data[4][2].sig_046.FeedThruLUT ), 
    .DI0(\ADC_Data[4][3].sig_045.FeedThruLUT ), .C1(\ADC_Data[4][2] ), 
    .C0(\ADC_Data[4][3] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[3] ), 
    .Q1(\Comb_Interval[2] ), .F0(\ADC_Data[4][3].sig_045.FeedThruLUT ), 
    .F1(\ADC_Data[4][2].sig_046.FeedThruLUT ));
  sample_output_SLICE_167 \sample_output.SLICE_167 ( 
    .DI1(\sample_output.n3611[1] ), .DI0(\sample_output.n3611[0] ), 
    .D1(\sample_output.r_Sample_L[3] ), .C1(n2759), .B1(\SM_Sample_Output[0] ), 
    .A1(\sample_output.r_Sample_R[3] ), .D0(\sample_output.r_Sample_L[2] ), 
    .C0(\sample_output.r_Sample_R[2] ), .B0(n2759), .A0(\SM_Sample_Output[0] ), 
    .CE(n2792), .CLK(Main_Clock), .Q0(\sample_output.Output_Data[0] ), 
    .Q1(\sample_output.Output_Data[1] ), .F0(\sample_output.n3611[0] ), 
    .F1(\sample_output.n3611[1] ));
  sample_output_SLICE_168 \sample_output.SLICE_168 ( 
    .DI1(\sample_output.n9017 ), .DI0(\sample_output.n2805 ), 
    .D1(\SM_Sample_Output[1] ), .C1(\SM_Sample_Output[0] ), .D0(DAC_Ready), 
    .C0(\SM_Sample_Output[2] ), .B0(\SM_Sample_Output[0] ), 
    .A0(\SM_Sample_Output[1] ), .CE(n6956), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\SM_Sample_Output[0] ), .Q1(\SM_Sample_Output[1] ), 
    .F0(\sample_output.n2805 ), .F1(\sample_output.n9017 ));
  sample_output_SLICE_170 \sample_output.SLICE_170 ( 
    .DI1(\sample_output.n3611[3] ), .DI0(\sample_output.n3611[2] ), 
    .D1(\SM_Sample_Output[0] ), .C1(n2759), .B1(\sample_output.r_Sample_R[5] ), 
    .A1(\sample_output.r_Sample_L[5] ), .D0(n2759), .C0(\SM_Sample_Output[0] ), 
    .B0(\sample_output.r_Sample_R[4] ), .A0(\sample_output.r_Sample_L[4] ), 
    .CE(n2792), .CLK(Main_Clock), .Q0(\sample_output.Output_Data[2] ), 
    .Q1(\sample_output.Output_Data[3] ), .F0(\sample_output.n3611[2] ), 
    .F1(\sample_output.n3611[3] ));
  sample_output_SLICE_172 \sample_output.SLICE_172 ( 
    .DI1(\sample_output.n3611[5] ), .DI0(\sample_output.n3611[4] ), 
    .D1(\SM_Sample_Output[0] ), .C1(n2759), .B1(\sample_output.r_Sample_R[7] ), 
    .A1(\sample_output.r_Sample_L[7] ), .D0(n2759), 
    .C0(\sample_output.r_Sample_L[6] ), .B0(\sample_output.r_Sample_R[6] ), 
    .A0(\SM_Sample_Output[0] ), .CE(n2792), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[4] ), .Q1(\sample_output.Output_Data[5] ), 
    .F0(\sample_output.n3611[4] ), .F1(\sample_output.n3611[5] ));
  sample_output_SLICE_174 \sample_output.SLICE_174 ( 
    .DI1(\sample_output.n3611[7] ), .DI0(\sample_output.n3611[6] ), 
    .D1(\sample_output.r_Sample_L[9] ), .C1(n2759), .B1(\SM_Sample_Output[0] ), 
    .A1(\sample_output.r_Sample_R[9] ), .D0(\sample_output.r_Sample_L[8] ), 
    .C0(\SM_Sample_Output[0] ), .B0(n2759), .A0(\sample_output.r_Sample_R[8] ), 
    .CE(n2792), .CLK(Main_Clock), .Q0(\sample_output.Output_Data[6] ), 
    .Q1(\sample_output.Output_Data[7] ), .F0(\sample_output.n3611[6] ), 
    .F1(\sample_output.n3611[7] ));
  sample_output_SLICE_176 \sample_output.SLICE_176 ( 
    .DI1(\sample_output.n3611[9] ), .DI0(\sample_output.n3611[8] ), .D1(n2759), 
    .C1(\sample_output.r_Sample_L[11] ), .B1(\SM_Sample_Output[0] ), 
    .A1(\sample_output.r_Sample_R[11] ), .D0(\sample_output.r_Sample_L[10] ), 
    .C0(n2759), .B0(\sample_output.r_Sample_R[10] ), 
    .A0(\SM_Sample_Output[0] ), .CE(n2792), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[8] ), .Q1(\sample_output.Output_Data[9] ), 
    .F0(\sample_output.n3611[8] ), .F1(\sample_output.n3611[9] ));
  sample_output_SLICE_178 \sample_output.SLICE_178 ( 
    .DI1(\sample_output.n3611[11] ), .DI0(\sample_output.n3611[10] ), 
    .D1(n2759), .C1(\sample_output.r_Sample_R[13] ), 
    .B1(\SM_Sample_Output[0] ), .A1(\sample_output.r_Sample_L[13] ), 
    .D0(\sample_output.r_Sample_R[12] ), .C0(\SM_Sample_Output[0] ), 
    .B0(\sample_output.r_Sample_L[12] ), .A0(n2759), .CE(n2792), 
    .CLK(Main_Clock), .Q0(\sample_output.Output_Data[10] ), 
    .Q1(\sample_output.Output_Data[11] ), .F0(\sample_output.n3611[10] ), 
    .F1(\sample_output.n3611[11] ));
  sample_output_SLICE_180 \sample_output.SLICE_180 ( 
    .DI1(\sample_output.n3611[13] ), .DI0(\sample_output.n3611[12] ), 
    .D1(\sample_output.r_Sample_L[15] ), .C1(n2759), 
    .B1(\sample_output.r_Sample_R[15] ), .A1(\SM_Sample_Output[0] ), 
    .D0(n2759), .C0(\sample_output.r_Sample_R[14] ), 
    .B0(\SM_Sample_Output[0] ), .A0(\sample_output.r_Sample_L[14] ), 
    .CE(n2792), .CLK(Main_Clock), .Q0(\sample_output.Output_Data[12] ), 
    .Q1(\sample_output.Output_Data[13] ), .F0(\sample_output.n3611[12] ), 
    .F1(\sample_output.n3611[13] ));
  sample_output_SLICE_182 \sample_output.SLICE_182 ( 
    .DI1(\sample_output.n3611[15] ), .DI0(\sample_output.n3611[14] ), 
    .D1(\sample_output.r_Sample_L[17] ), .C1(\SM_Sample_Output[0] ), 
    .B1(\sample_output.r_Sample_R[17] ), .A1(n2759), .D0(n2759), 
    .C0(\sample_output.r_Sample_L[16] ), .B0(\SM_Sample_Output[0] ), 
    .A0(\sample_output.r_Sample_R[16] ), .CE(n2792), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[14] ), .Q1(\sample_output.Output_Data[15] ), 
    .F0(\sample_output.n3611[14] ), .F1(\sample_output.n3611[15] ));
  SLICE_184 SLICE_184( .DI1(\r_Adder_Total[1][3].sig_048.FeedThruLUT ), 
    .DI0(\r_Adder_Total[1][2].sig_047.FeedThruLUT ), 
    .A1(\r_Adder_Total[1][3] ), .B0(\r_Adder_Total[1][2] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(\sample_output.r_Sample_R[2] ), .Q1(\sample_output.r_Sample_R[3] ), 
    .F0(\r_Adder_Total[1][2].sig_047.FeedThruLUT ), 
    .F1(\r_Adder_Total[1][3].sig_048.FeedThruLUT ));
  SLICE_186 SLICE_186( .DI1(\r_Adder_Total[1][5].sig_050.FeedThruLUT ), 
    .DI0(\r_Adder_Total[1][4].sig_049.FeedThruLUT ), 
    .A1(\r_Adder_Total[1][5] ), .A0(\r_Adder_Total[1][4] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(\sample_output.r_Sample_R[4] ), .Q1(\sample_output.r_Sample_R[5] ), 
    .F0(\r_Adder_Total[1][4].sig_049.FeedThruLUT ), 
    .F1(\r_Adder_Total[1][5].sig_050.FeedThruLUT ));
  SLICE_188 SLICE_188( .DI1(\r_Adder_Total[1][7].sig_052.FeedThruLUT ), 
    .DI0(\r_Adder_Total[1][6].sig_051.FeedThruLUT ), 
    .C1(\r_Adder_Total[1][7] ), .C0(\r_Adder_Total[1][6] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(\sample_output.r_Sample_R[6] ), .Q1(\sample_output.r_Sample_R[7] ), 
    .F0(\r_Adder_Total[1][6].sig_051.FeedThruLUT ), 
    .F1(\r_Adder_Total[1][7].sig_052.FeedThruLUT ));
  SLICE_192 SLICE_192( .DI1(\r_Adder_Total[0][3].sig_054.FeedThruLUT ), 
    .DI0(\r_Adder_Total[0][2].sig_053.FeedThruLUT ), 
    .C1(\r_Adder_Total[0][3] ), .A0(\r_Adder_Total[0][2] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(\sample_output.r_Sample_L[2] ), .Q1(\sample_output.r_Sample_L[3] ), 
    .F0(\r_Adder_Total[0][2].sig_053.FeedThruLUT ), 
    .F1(\r_Adder_Total[0][3].sig_054.FeedThruLUT ));
  SLICE_194 SLICE_194( .DI1(\r_Adder_Total[0][5].sig_056.FeedThruLUT ), 
    .DI0(\r_Adder_Total[0][4].sig_055.FeedThruLUT ), 
    .C1(\r_Adder_Total[0][5] ), .A0(\r_Adder_Total[0][4] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(\sample_output.r_Sample_L[4] ), .Q1(\sample_output.r_Sample_L[5] ), 
    .F0(\r_Adder_Total[0][4].sig_055.FeedThruLUT ), 
    .F1(\r_Adder_Total[0][5].sig_056.FeedThruLUT ));
  SLICE_196 SLICE_196( .DI1(\r_Adder_Total[0][7].sig_058.FeedThruLUT ), 
    .DI0(\r_Adder_Total[0][6].sig_057.FeedThruLUT ), 
    .B1(\r_Adder_Total[0][7] ), .B0(\r_Adder_Total[0][6] ), 
    .CE(\sample_output.n2982 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(\sample_output.r_Sample_L[6] ), .Q1(\sample_output.r_Sample_L[7] ), 
    .F0(\r_Adder_Total[0][6].sig_057.FeedThruLUT ), 
    .F1(\r_Adder_Total[0][7].sig_058.FeedThruLUT ));
  sample_output_SLICE_198 \sample_output.SLICE_198 ( 
    .DI1(\sample_output.n6841 ), .DI0(\sample_output.n6842 ), .D1(n2792), 
    .C1(n2759), .B1(\SM_Sample_Output[0] ), 
    .A1(\sample_output.Output_Data[20] ), .D0(\sample_output.Output_Data[21] ), 
    .C0(n2792), .B0(n2759), .A0(\SM_Sample_Output[0] ), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[21] ), .Q1(\sample_output.Output_Data[20] ), 
    .F0(\sample_output.n6842 ), .F1(\sample_output.n6841 ));
  SLICE_200 SLICE_200( .DI0(n6840), .D0(\Output_Data[17] ), .B0(n2759), 
    .A0(n2792), .CLK(Main_Clock), .Q0(\Output_Data[17] ), .F0(n6840));
  SLICE_201 SLICE_201( .DI0(\SM_Sample_Output[0].sig_059.FeedThruLUT ), 
    .A0(\SM_Sample_Output[0] ), .CE(n2792), .LSR(\sample_output.n6725 ), 
    .CLK(Main_Clock), .Q0(\sample_output.Output_Data[16] ), 
    .F0(\SM_Sample_Output[0].sig_059.FeedThruLUT ));
  sample_output_SLICE_202 \sample_output.SLICE_202 ( 
    .DI1(\sample_output.Output_Data[21].sig_079.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[20].sig_060.FeedThruLUT ), 
    .D1(\sample_output.Output_Data[21] ), .B0(\sample_output.Output_Data[20] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[3] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[2] ), 
    .F0(\sample_output.Output_Data[20].sig_060.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[21].sig_079.FeedThruLUT ));
  SLICE_203 SLICE_203( 
    .DI1(\sample_output.Output_Data[16].sig_062.FeedThruLUT ), 
    .DI0(\Output_Data[17].sig_061.FeedThruLUT ), 
    .C1(\sample_output.Output_Data[16] ), .C0(\Output_Data[17] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[6] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[7] ), 
    .F0(\Output_Data[17].sig_061.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[16].sig_062.FeedThruLUT ));
  sample_output_SLICE_205 \sample_output.SLICE_205 ( 
    .DI1(\sample_output.Output_Data[14].sig_064.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[15].sig_063.FeedThruLUT ), 
    .D1(\sample_output.Output_Data[14] ), .B0(\sample_output.Output_Data[15] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[8] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[9] ), 
    .F0(\sample_output.Output_Data[15].sig_063.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[14].sig_064.FeedThruLUT ));
  sample_output_SLICE_207 \sample_output.SLICE_207 ( 
    .DI1(\sample_output.Output_Data[12].sig_066.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[13].sig_065.FeedThruLUT ), 
    .D1(\sample_output.Output_Data[12] ), .D0(\sample_output.Output_Data[13] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[10] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[11] ), 
    .F0(\sample_output.Output_Data[13].sig_065.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[12].sig_066.FeedThruLUT ));
  sample_output_SLICE_209 \sample_output.SLICE_209 ( 
    .DI1(\sample_output.Output_Data[10].sig_068.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[11].sig_067.FeedThruLUT ), 
    .A1(\sample_output.Output_Data[10] ), .A0(\sample_output.Output_Data[11] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[12] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[13] ), 
    .F0(\sample_output.Output_Data[11].sig_067.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[10].sig_068.FeedThruLUT ));
  sample_output_SLICE_211 \sample_output.SLICE_211 ( 
    .DI1(\sample_output.Output_Data[8].sig_070.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[9].sig_069.FeedThruLUT ), 
    .D1(\sample_output.Output_Data[8] ), .C0(\sample_output.Output_Data[9] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[14] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[15] ), 
    .F0(\sample_output.Output_Data[9].sig_069.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[8].sig_070.FeedThruLUT ));
  sample_output_SLICE_213 \sample_output.SLICE_213 ( 
    .DI1(\sample_output.Output_Data[6].sig_072.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[7].sig_071.FeedThruLUT ), 
    .C1(\sample_output.Output_Data[6] ), .B0(\sample_output.Output_Data[7] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[16] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[17] ), 
    .F0(\sample_output.Output_Data[7].sig_071.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[6].sig_072.FeedThruLUT ));
  sample_output_SLICE_215 \sample_output.SLICE_215 ( 
    .DI1(\sample_output.Output_Data[4].sig_074.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[5].sig_073.FeedThruLUT ), 
    .D1(\sample_output.Output_Data[4] ), .B0(\sample_output.Output_Data[5] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[18] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[19] ), 
    .F0(\sample_output.Output_Data[5].sig_073.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[4].sig_074.FeedThruLUT ));
  sample_output_SLICE_217 \sample_output.SLICE_217 ( 
    .DI1(\sample_output.Output_Data[2].sig_076.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[3].sig_075.FeedThruLUT ), 
    .B1(\sample_output.Output_Data[2] ), .A0(\sample_output.Output_Data[3] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[20] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[21] ), 
    .F0(\sample_output.Output_Data[3].sig_075.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[2].sig_076.FeedThruLUT ));
  sample_output_SLICE_219 \sample_output.SLICE_219 ( 
    .DI1(\sample_output.Output_Data[0].sig_080.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[1].sig_077.FeedThruLUT ), 
    .A1(\sample_output.Output_Data[0] ), .A0(\sample_output.Output_Data[1] ), 
    .CE(\sample_output.dac.n2947 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[22] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[23] ), 
    .F0(\sample_output.Output_Data[1].sig_077.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[0].sig_080.FeedThruLUT ));
  sample_output_dac_SLICE_220 \sample_output.dac.SLICE_220 ( 
    .DI0(\sample_output.dac.n8724 ), 
    .D0(\sample_output.dac.o_SPI_Data_N_1068 ), .B0(\SM_DAC_Out[0] ), 
    .A0(n2613), .CE(n6909), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(o_DAC_MOSI_c), .F0(\sample_output.dac.n8724 ));
  sample_output_dac_SLICE_221 \sample_output.dac.SLICE_221 ( 
    .DI1(\sample_output.dac.n25[1] ), .DI0(\sample_output.dac.n25[0] ), 
    .D1(\sample_output.dac.Current_Bit[1] ), 
    .A1(\sample_output.dac.Current_Bit[0] ), 
    .B0(\sample_output.dac.Current_Bit[0] ), .CE(\sample_output.dac.n6361 ), 
    .LSR(\sample_output.dac.n6694 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.Current_Bit[0] ), 
    .Q1(\sample_output.dac.Current_Bit[1] ), .F0(\sample_output.dac.n25[0] ), 
    .F1(\sample_output.dac.n25[1] ));
  sample_output_dac_SLICE_227 \sample_output.dac.SLICE_227 ( 
    .DI1(\sample_output.dac.n25[3] ), .DI0(\sample_output.dac.n25[2] ), 
    .D1(\sample_output.dac.Current_Bit[3] ), 
    .C1(\sample_output.dac.Current_Bit[2] ), 
    .B1(\sample_output.dac.Current_Bit[1] ), 
    .A1(\sample_output.dac.Current_Bit[0] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.Current_Bit[1] ), 
    .B0(\sample_output.dac.Current_Bit[2] ), .CE(\sample_output.dac.n6361 ), 
    .LSR(\sample_output.dac.n6694 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.Current_Bit[2] ), 
    .Q1(\sample_output.dac.Current_Bit[3] ), .F0(\sample_output.dac.n25[2] ), 
    .F1(\sample_output.dac.n25[3] ));
  SLICE_231 SLICE_231( .DI1(\sample_output.dac.n6117 ), .DI0(n8823), 
    .D1(Clock_Counter), .C1(reset_n_c), .D0(Clock_Counter), 
    .C0(\SM_DAC_Out[1] ), .B0(reset_n_c), .A0(n9_adj_1185), .CLK(Main_Clock), 
    .Q0(\SM_DAC_Out[1] ), .Q1(Clock_Counter), .F0(n8823), 
    .F1(\sample_output.dac.n6117 ));
  sample_output_dac_SLICE_232 \sample_output.dac.SLICE_232 ( 
    .DI0(\sample_output.dac.n2614[0]$n1 ), .B0(\SM_DAC_Out[2] ), 
    .CE(\sample_output.dac.n6374 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(o_DAC_CS_c), .F0(\sample_output.dac.n2614[0]$n1 ));
  SLICE_237 SLICE_237( .DI1(\ADC_Data[2][0].sig_205.FeedThruLUT ), 
    .DI0(\ADC_Data[2][1].sig_082.FeedThruLUT ), .C1(\ADC_Data[2][0] ), 
    .C0(\ADC_Data[2][1] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[1] ), 
    .Q1(\Scale_Initial[0] ), .F0(\ADC_Data[2][1].sig_082.FeedThruLUT ), 
    .F1(\ADC_Data[2][0].sig_205.FeedThruLUT ));
  SLICE_238 SLICE_238( .DI1(\ADC_Data[4][5].sig_105.FeedThruLUT ), 
    .DI0(\ADC_Data[4][4].sig_083.FeedThruLUT ), .C1(\ADC_Data[4][5] ), 
    .A0(\ADC_Data[4][4] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[4] ), 
    .Q1(\Comb_Interval[5] ), .F0(\ADC_Data[4][4].sig_083.FeedThruLUT ), 
    .F1(\ADC_Data[4][5].sig_105.FeedThruLUT ));
  SLICE_240 SLICE_240( .DI1(\ADC_Data[3][14].sig_086.FeedThruLUT ), 
    .DI0(\ADC_Data[3][15].sig_085.FeedThruLUT ), .C1(\ADC_Data[3][14] ), 
    .B0(\ADC_Data[3][15] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[15] ), 
    .Q1(\Freq_Scale[14] ), .F0(\ADC_Data[3][15].sig_085.FeedThruLUT ), 
    .F1(\ADC_Data[3][14].sig_086.FeedThruLUT ));
  SLICE_241 SLICE_241( .DI1(n10_adj_1157), .DI0(n6455), .C1(\SM_Top[1] ), 
    .A1(n40), .D0(n39), .B0(\SM_Top[1] ), .CE(n6880), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\Harmonic[7] ), .Q1(\Harmonic[6] ), .F0(n6455), 
    .F1(n10_adj_1157));
  SLICE_243 SLICE_243( .DI1(n10_adj_1194), .DI0(n10_adj_1193), .D1(n42), 
    .A1(\SM_Top[1] ), .C0(n41), .B0(\SM_Top[1] ), .CE(n6880), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\Harmonic[5] ), 
    .Q1(\Harmonic[4] ), .F0(n10_adj_1193), .F1(n10_adj_1194));
  SLICE_245 SLICE_245( .DI1(n10_adj_1196), .DI0(n10_adj_1195), 
    .B1(\SM_Top[1] ), .A1(n44_adj_1182), .C0(\SM_Top[1] ), .A0(n43), 
    .CE(n6880), .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\Harmonic[3] ), 
    .Q1(\Harmonic[2] ), .F0(n10_adj_1195), .F1(n10_adj_1196));
  SLICE_249 SLICE_249( .DI1(\ADC_Data[3][12].sig_088.FeedThruLUT ), 
    .DI0(\ADC_Data[3][13].sig_087.FeedThruLUT ), .B1(\ADC_Data[3][12] ), 
    .B0(\ADC_Data[3][13] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[13] ), 
    .Q1(\Freq_Scale[12] ), .F0(\ADC_Data[3][13].sig_087.FeedThruLUT ), 
    .F1(\ADC_Data[3][12].sig_088.FeedThruLUT ));
  SLICE_251 SLICE_251( .DI1(\ADC_Data[3][10].sig_090.FeedThruLUT ), 
    .DI0(\ADC_Data[3][11].sig_089.FeedThruLUT ), .B1(\ADC_Data[3][10] ), 
    .B0(\ADC_Data[3][11] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[11] ), 
    .Q1(\Freq_Scale[10] ), .F0(\ADC_Data[3][11].sig_089.FeedThruLUT ), 
    .F1(\ADC_Data[3][10].sig_090.FeedThruLUT ));
  SLICE_253 SLICE_253( .DI1(\ADC_Data[3][8].sig_092.FeedThruLUT ), 
    .DI0(\ADC_Data[3][9].sig_091.FeedThruLUT ), .B1(\ADC_Data[3][8] ), 
    .B0(\ADC_Data[3][9] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[9] ), 
    .Q1(\Freq_Scale[8] ), .F0(\ADC_Data[3][9].sig_091.FeedThruLUT ), 
    .F1(\ADC_Data[3][8].sig_092.FeedThruLUT ));
  SLICE_255 SLICE_255( .DI1(\ADC_Data[3][6].sig_094.FeedThruLUT ), 
    .DI0(\ADC_Data[3][7].sig_093.FeedThruLUT ), .A1(\ADC_Data[3][6] ), 
    .C0(\ADC_Data[3][7] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[7] ), 
    .Q1(\Freq_Scale[6] ), .F0(\ADC_Data[3][7].sig_093.FeedThruLUT ), 
    .F1(\ADC_Data[3][6].sig_094.FeedThruLUT ));
  SLICE_257 SLICE_257( .DI1(\ADC_Data[3][4].sig_096.FeedThruLUT ), 
    .DI0(\ADC_Data[3][5].sig_095.FeedThruLUT ), .C1(\ADC_Data[3][4] ), 
    .C0(\ADC_Data[3][5] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[5] ), 
    .Q1(\Freq_Scale[4] ), .F0(\ADC_Data[3][5].sig_095.FeedThruLUT ), 
    .F1(\ADC_Data[3][4].sig_096.FeedThruLUT ));
  SLICE_259 SLICE_259( .DI1(\ADC_Data[3][2].sig_098.FeedThruLUT ), 
    .DI0(\ADC_Data[3][3].sig_097.FeedThruLUT ), .D1(\ADC_Data[3][2] ), 
    .A0(\ADC_Data[3][3] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[3] ), 
    .Q1(\Freq_Scale[2] ), .F0(\ADC_Data[3][3].sig_097.FeedThruLUT ), 
    .F1(\ADC_Data[3][2].sig_098.FeedThruLUT ));
  SLICE_262 SLICE_262( .DI0(\ADC_Data[2][8].sig_100.FeedThruLUT ), 
    .D0(\ADC_Data[2][8] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[8] ), 
    .F0(\ADC_Data[2][8].sig_100.FeedThruLUT ));
  SLICE_263 SLICE_263( .DI1(\ADC_Data[2][6].sig_102.FeedThruLUT ), 
    .DI0(\ADC_Data[2][7].sig_101.FeedThruLUT ), .C1(\ADC_Data[2][6] ), 
    .D0(\ADC_Data[2][7] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[7] ), 
    .Q1(\Scale_Initial[6] ), .F0(\ADC_Data[2][7].sig_101.FeedThruLUT ), 
    .F1(\ADC_Data[2][6].sig_102.FeedThruLUT ));
  SLICE_268 SLICE_268( .DI1(\ADC_Data[4][6].sig_104.FeedThruLUT ), 
    .DI0(\ADC_Data[4][7].sig_103.FeedThruLUT ), .D1(\ADC_Data[4][6] ), 
    .B0(\ADC_Data[4][7] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[7] ), 
    .Q1(\Comb_Interval[6] ), .F0(\ADC_Data[4][7].sig_103.FeedThruLUT ), 
    .F1(\ADC_Data[4][6].sig_104.FeedThruLUT ));
  SLICE_273 SLICE_273( .DI1(\Adder_Total[0][3].sig_109.FeedThruLUT ), 
    .DI0(\Adder_Total[0][2].sig_108.FeedThruLUT ), .C1(\Adder_Total[0][3] ), 
    .A0(\Adder_Total[0][2] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][2] ), .Q1(\r_Adder_Total[0][3] ), 
    .F0(\Adder_Total[0][2].sig_108.FeedThruLUT ), 
    .F1(\Adder_Total[0][3].sig_109.FeedThruLUT ));
  SLICE_275 SLICE_275( .DI1(\Adder_Total[0][5].sig_111.FeedThruLUT ), 
    .DI0(\Adder_Total[0][4].sig_110.FeedThruLUT ), .C1(\Adder_Total[0][5] ), 
    .B0(\Adder_Total[0][4] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][4] ), .Q1(\r_Adder_Total[0][5] ), 
    .F0(\Adder_Total[0][4].sig_110.FeedThruLUT ), 
    .F1(\Adder_Total[0][5].sig_111.FeedThruLUT ));
  SLICE_277 SLICE_277( .DI1(\Adder_Total[0][7].sig_113.FeedThruLUT ), 
    .DI0(\Adder_Total[0][6].sig_112.FeedThruLUT ), .C1(\Adder_Total[0][7] ), 
    .B0(\Adder_Total[0][6] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][6] ), .Q1(\r_Adder_Total[0][7] ), 
    .F0(\Adder_Total[0][6].sig_112.FeedThruLUT ), 
    .F1(\Adder_Total[0][7].sig_113.FeedThruLUT ));
  SLICE_279 SLICE_279( .DI1(\Adder_Total[0][9].sig_115.FeedThruLUT ), 
    .DI0(\Adder_Total[0][8].sig_114.FeedThruLUT ), .B1(\Adder_Total[0][9] ), 
    .C0(\Adder_Total[0][8] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][8] ), .Q1(\r_Adder_Total[0][9] ), 
    .F0(\Adder_Total[0][8].sig_114.FeedThruLUT ), 
    .F1(\Adder_Total[0][9].sig_115.FeedThruLUT ));
  SLICE_281 SLICE_281( .DI1(\Adder_Total[0][11].sig_117.FeedThruLUT ), 
    .DI0(\Adder_Total[0][10].sig_116.FeedThruLUT ), .B1(\Adder_Total[0][11] ), 
    .A0(\Adder_Total[0][10] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][10] ), .Q1(\r_Adder_Total[0][11] ), 
    .F0(\Adder_Total[0][10].sig_116.FeedThruLUT ), 
    .F1(\Adder_Total[0][11].sig_117.FeedThruLUT ));
  SLICE_283 SLICE_283( .DI1(\Adder_Total[0][13].sig_119.FeedThruLUT ), 
    .DI0(\Adder_Total[0][12].sig_118.FeedThruLUT ), .C1(\Adder_Total[0][13] ), 
    .A0(\Adder_Total[0][12] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][12] ), .Q1(\r_Adder_Total[0][13] ), 
    .F0(\Adder_Total[0][12].sig_118.FeedThruLUT ), 
    .F1(\Adder_Total[0][13].sig_119.FeedThruLUT ));
  SLICE_285 SLICE_285( .DI1(\Adder_Total[0][15].sig_121.FeedThruLUT ), 
    .DI0(\Adder_Total[0][14].sig_120.FeedThruLUT ), .C1(\Adder_Total[0][15] ), 
    .D0(\Adder_Total[0][14] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][14] ), .Q1(\r_Adder_Total[0][15] ), 
    .F0(\Adder_Total[0][14].sig_120.FeedThruLUT ), 
    .F1(\Adder_Total[0][15].sig_121.FeedThruLUT ));
  SLICE_287 SLICE_287( .DI1(\Adder_Total[0][17].sig_123.FeedThruLUT ), 
    .DI0(\Adder_Total[0][16].sig_122.FeedThruLUT ), .D1(\Adder_Total[0][17] ), 
    .B0(\Adder_Total[0][16] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][16] ), .Q1(\r_Adder_Total[0][17] ), 
    .F0(\Adder_Total[0][16].sig_122.FeedThruLUT ), 
    .F1(\Adder_Total[0][17].sig_123.FeedThruLUT ));
  SLICE_289 SLICE_289( .DI1(\Adder_Total[1][3].sig_125.FeedThruLUT ), 
    .DI0(\Adder_Total[1][2].sig_124.FeedThruLUT ), .D1(\Adder_Total[1][3] ), 
    .C0(\Adder_Total[1][2] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][2] ), .Q1(\r_Adder_Total[1][3] ), 
    .F0(\Adder_Total[1][2].sig_124.FeedThruLUT ), 
    .F1(\Adder_Total[1][3].sig_125.FeedThruLUT ));
  SLICE_291 SLICE_291( .DI1(\Adder_Total[1][5].sig_127.FeedThruLUT ), 
    .DI0(\Adder_Total[1][4].sig_126.FeedThruLUT ), .C1(\Adder_Total[1][5] ), 
    .B0(\Adder_Total[1][4] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][4] ), .Q1(\r_Adder_Total[1][5] ), 
    .F0(\Adder_Total[1][4].sig_126.FeedThruLUT ), 
    .F1(\Adder_Total[1][5].sig_127.FeedThruLUT ));
  SLICE_293 SLICE_293( .DI1(\Adder_Total[1][7].sig_129.FeedThruLUT ), 
    .DI0(\Adder_Total[1][6].sig_128.FeedThruLUT ), .D1(\Adder_Total[1][7] ), 
    .B0(\Adder_Total[1][6] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][6] ), .Q1(\r_Adder_Total[1][7] ), 
    .F0(\Adder_Total[1][6].sig_128.FeedThruLUT ), 
    .F1(\Adder_Total[1][7].sig_129.FeedThruLUT ));
  SLICE_295 SLICE_295( .DI1(\Adder_Total[1][9].sig_131.FeedThruLUT ), 
    .DI0(\Adder_Total[1][8].sig_130.FeedThruLUT ), .B1(\Adder_Total[1][9] ), 
    .C0(\Adder_Total[1][8] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][8] ), .Q1(\r_Adder_Total[1][9] ), 
    .F0(\Adder_Total[1][8].sig_130.FeedThruLUT ), 
    .F1(\Adder_Total[1][9].sig_131.FeedThruLUT ));
  SLICE_297 SLICE_297( .DI1(\Adder_Total[1][11].sig_133.FeedThruLUT ), 
    .DI0(\Adder_Total[1][10].sig_132.FeedThruLUT ), .A1(\Adder_Total[1][11] ), 
    .D0(\Adder_Total[1][10] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][10] ), .Q1(\r_Adder_Total[1][11] ), 
    .F0(\Adder_Total[1][10].sig_132.FeedThruLUT ), 
    .F1(\Adder_Total[1][11].sig_133.FeedThruLUT ));
  SLICE_299 SLICE_299( .DI1(\Adder_Total[1][13].sig_135.FeedThruLUT ), 
    .DI0(\Adder_Total[1][12].sig_134.FeedThruLUT ), .D1(\Adder_Total[1][13] ), 
    .C0(\Adder_Total[1][12] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][12] ), .Q1(\r_Adder_Total[1][13] ), 
    .F0(\Adder_Total[1][12].sig_134.FeedThruLUT ), 
    .F1(\Adder_Total[1][13].sig_135.FeedThruLUT ));
  SLICE_301 SLICE_301( .DI1(\Adder_Total[1][15].sig_137.FeedThruLUT ), 
    .DI0(\Adder_Total[1][14].sig_136.FeedThruLUT ), .B1(\Adder_Total[1][15] ), 
    .C0(\Adder_Total[1][14] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][14] ), .Q1(\r_Adder_Total[1][15] ), 
    .F0(\Adder_Total[1][14].sig_136.FeedThruLUT ), 
    .F1(\Adder_Total[1][15].sig_137.FeedThruLUT ));
  SLICE_303 SLICE_303( .DI1(\Adder_Total[1][17].sig_139.FeedThruLUT ), 
    .DI0(\Adder_Total[1][16].sig_138.FeedThruLUT ), .D1(\Adder_Total[1][17] ), 
    .D0(\Adder_Total[1][16] ), .CE(n6437), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][16] ), .Q1(\r_Adder_Total[1][17] ), 
    .F0(\Adder_Total[1][16].sig_138.FeedThruLUT ), 
    .F1(\Adder_Total[1][17].sig_139.FeedThruLUT ));
  SLICE_305 SLICE_305( .DI1(n6847), .DI0(n6799), .D1(\SM_Top[0] ), 
    .C1(\Adder_Start[1] ), .B1(n6436), .A1(reset_n_c), .D0(\Adder_Start[0] ), 
    .C0(\SM_Top[0] ), .B0(n6206), .A0(reset_n_c), .CLK(Main_Clock), 
    .Q0(\Adder_Start[0] ), .Q1(\Adder_Start[1] ), .F0(n6799), .F1(n6847));
  genadder_1__adder_SLICE_310 \genadder[1].adder.SLICE_310 ( 
    .DI1(\genadder[1].adder.n6756 ), .DI0(\genadder[1].adder.n6758 ), 
    .C1(\genadder[1].adder.n167[16] ), .A1(reset_n_c), .B0(reset_n_c), 
    .A0(\genadder[1].adder.n167[17] ), .CE(\genadder[1].adder.n2977 ), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][17] ), 
    .Q1(\Adder_Total[1][16] ), .F0(\genadder[1].adder.n6758 ), 
    .F1(\genadder[1].adder.n6756 ));
  genadder_1__adder_SLICE_313 \genadder[1].adder.SLICE_313 ( 
    .DI1(\genadder[1].adder.n6752 ), .DI0(\genadder[1].adder.n6754 ), 
    .B1(\genadder[1].adder.n167[14] ), .A1(reset_n_c), 
    .D0(\genadder[1].adder.n167[15] ), .B0(reset_n_c), 
    .CE(\genadder[1].adder.n2977 ), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q0(\Adder_Total[1][15] ), .Q1(\Adder_Total[1][14] ), 
    .F0(\genadder[1].adder.n6754 ), .F1(\genadder[1].adder.n6752 ));
  genadder_1__adder_SLICE_315 \genadder[1].adder.SLICE_315 ( 
    .DI1(\genadder[1].adder.n6748 ), .DI0(\genadder[1].adder.n6750 ), 
    .D1(\genadder[1].adder.n167[12] ), .C1(reset_n_c), .B0(reset_n_c), 
    .A0(\genadder[1].adder.n167[13] ), .CE(\genadder[1].adder.n2977 ), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][13] ), 
    .Q1(\Adder_Total[1][12] ), .F0(\genadder[1].adder.n6750 ), 
    .F1(\genadder[1].adder.n6748 ));
  genadder_1__adder_SLICE_316 \genadder[1].adder.SLICE_316 ( 
    .DI1(\genadder[1].adder.n6726 ), .DI0(\genadder[1].adder.n6615 ), 
    .D1(\genadder[1].adder.n167[1] ), .C1(reset_n_c), .D0(reset_n_c), 
    .A0(\genadder[1].adder.n167[0] ), .CE(\genadder[1].adder.n2977 ), 
    .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q0(\genadder[1].adder.Adder_Total[1][0] ), 
    .Q1(\genadder[1].adder.Adder_Total[1][1] ), .F0(\genadder[1].adder.n6615 ), 
    .F1(\genadder[1].adder.n6726 ));
  genadder_1__adder_SLICE_318 \genadder[1].adder.SLICE_318 ( 
    .DI1(\genadder[1].adder.n6744 ), .DI0(\genadder[1].adder.n6746 ), 
    .C1(\genadder[1].adder.n167[10] ), .A1(reset_n_c), .D0(reset_n_c), 
    .B0(\genadder[1].adder.n167[11] ), .CE(\genadder[1].adder.n2977 ), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][11] ), 
    .Q1(\Adder_Total[1][10] ), .F0(\genadder[1].adder.n6746 ), 
    .F1(\genadder[1].adder.n6744 ));
  genadder_1__adder_SLICE_320 \genadder[1].adder.SLICE_320 ( 
    .DI1(\genadder[1].adder.n6740 ), .DI0(\genadder[1].adder.n6742 ), 
    .C1(reset_n_c), .A1(\genadder[1].adder.n167[8] ), .B0(reset_n_c), 
    .A0(\genadder[1].adder.n167[9] ), .CE(\genadder[1].adder.n2977 ), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][9] ), 
    .Q1(\Adder_Total[1][8] ), .F0(\genadder[1].adder.n6742 ), 
    .F1(\genadder[1].adder.n6740 ));
  genadder_1__adder_SLICE_322 \genadder[1].adder.SLICE_322 ( 
    .DI1(\genadder[1].adder.n6736 ), .DI0(\genadder[1].adder.n6738 ), 
    .D1(\genadder[1].adder.n167[6] ), .A1(reset_n_c), .D0(reset_n_c), 
    .B0(\genadder[1].adder.n167[7] ), .CE(\genadder[1].adder.n2977 ), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][7] ), 
    .Q1(\Adder_Total[1][6] ), .F0(\genadder[1].adder.n6738 ), 
    .F1(\genadder[1].adder.n6736 ));
  genadder_1__adder_SLICE_324 \genadder[1].adder.SLICE_324 ( 
    .DI1(\genadder[1].adder.n6732 ), .DI0(\genadder[1].adder.n6734 ), 
    .C1(reset_n_c), .B1(\genadder[1].adder.n167[4] ), .D0(reset_n_c), 
    .A0(\genadder[1].adder.n167[5] ), .CE(\genadder[1].adder.n2977 ), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][5] ), 
    .Q1(\Adder_Total[1][4] ), .F0(\genadder[1].adder.n6734 ), 
    .F1(\genadder[1].adder.n6732 ));
  genadder_1__adder_SLICE_326 \genadder[1].adder.SLICE_326 ( 
    .DI1(\genadder[1].adder.n6728 ), .DI0(\genadder[1].adder.n6730 ), 
    .B1(\genadder[1].adder.n167[2] ), .A1(reset_n_c), .D0(reset_n_c), 
    .B0(\genadder[1].adder.n167[3] ), .CE(\genadder[1].adder.n2977 ), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][3] ), 
    .Q1(\Adder_Total[1][2] ), .F0(\genadder[1].adder.n6730 ), 
    .F1(\genadder[1].adder.n6728 ));
  SLICE_329 SLICE_329( .DI1(n6796), .DI0(n6817), .D1(n18), 
    .C1(\Working_Total_adj_1201[9] ), .B1(n2945), .D0(n17_2), 
    .C0(\Working_Total_adj_1201[10] ), .A0(n2945), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1201[10] ), .Q1(\Working_Total_adj_1201[9] ), 
    .F0(n6817), .F1(n6796));
  SLICE_330 SLICE_330( .DI1(n6815), .DI0(n6816), .D1(n15), 
    .C1(\Working_Total_adj_1201[12] ), .A1(n2945), .D0(n16), .B0(n2945), 
    .A0(\Working_Total_adj_1201[11] ), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1201[11] ), .Q1(\Working_Total_adj_1201[12] ), 
    .F0(n6816), .F1(n6815));
  SLICE_332 SLICE_332( .DI1(n6813), .DI0(n6814), .D1(n13), .C1(n2945), 
    .B1(\Working_Total_adj_1201[14] ), .D0(n14), 
    .C0(\Working_Total_adj_1201[13] ), .B0(n2945), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1201[13] ), .Q1(\Working_Total_adj_1201[14] ), 
    .F0(n6814), .F1(n6813));
  SLICE_334 SLICE_334( .DI1(n6811), .DI0(n6812), .D1(n11), 
    .C1(\Working_Total_adj_1201[16] ), .B1(n2945), .D0(n12), .C0(n2945), 
    .A0(\Working_Total_adj_1201[15] ), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1201[15] ), .Q1(\Working_Total_adj_1201[16] ), 
    .F0(n6812), .F1(n6811));
  SLICE_336 SLICE_336( .DI1(n6809), .DI0(n6810), .D1(n9_adj_1160), 
    .C1(\Working_Total_adj_1201[18] ), .A1(n2945), .D0(n10_adj_1161), 
    .C0(\Working_Total_adj_1201[17] ), .B0(n2945), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1201[17] ), .Q1(\Working_Total_adj_1201[18] ), 
    .F0(n6810), .F1(n6809));
  SLICE_338 SLICE_338( .DI1(n6807), .DI0(n6808), .D1(n7_adj_1159), 
    .C1(\Working_Total_adj_1201[20] ), .A1(n2945), .D0(n8_2), .B0(n2945), 
    .A0(\Working_Total_adj_1201[19] ), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1201[19] ), .Q1(\Working_Total_adj_1201[20] ), 
    .F0(n6808), .F1(n6807));
  SLICE_340 SLICE_340( .DI1(n6805), .DI0(n6806), .D1(n5), 
    .C1(\Working_Total_adj_1201[22] ), .A1(n2945), .D0(n6), 
    .C0(\Working_Total_adj_1201[21] ), .B0(n2945), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1201[21] ), .Q1(\Working_Total_adj_1201[22] ), 
    .F0(n6806), .F1(n6805));
  SLICE_342 SLICE_342( .DI1(n6803), .DI0(n6804), .D1(n3), 
    .B1(\Working_Total_adj_1201[31] ), .A1(n2945), .D0(n4), .B0(n2945), 
    .A0(\Working_Total_adj_1201[23] ), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1201[23] ), .Q1(\Working_Total_adj_1201[31] ), 
    .F0(n6804), .F1(n6803));
  adc_SLICE_346 \adc.SLICE_346 ( .DI0(\adc.Data_State.sig_141.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n8698 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][8] ), .F0(\adc.Data_State.sig_141.FeedThruLUT ));
  adc_SLICE_347 \adc.SLICE_347 ( .DI0(\adc.Data_State.sig_142.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6053 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][7] ), .F0(\adc.Data_State.sig_142.FeedThruLUT ));
  adc_SLICE_348 \adc.SLICE_348 ( .DI0(\adc.Data_State.sig_143.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6089 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][6] ), .F0(\adc.Data_State.sig_143.FeedThruLUT ));
  adc_SLICE_350 \adc.SLICE_350 ( .DI0(\adc.Data_State.sig_145.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6087 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][4] ), .F0(\adc.Data_State.sig_145.FeedThruLUT ));
  adc_SLICE_351 \adc.SLICE_351 ( .DI0(\adc.Data_State.sig_146.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6046 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][3] ), .F0(\adc.Data_State.sig_146.FeedThruLUT ));
  adc_SLICE_352 \adc.SLICE_352 ( .DI0(\adc.Data_State.sig_147.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6086 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][2] ), .F0(\adc.Data_State.sig_147.FeedThruLUT ));
  adc_SLICE_353 \adc.SLICE_353 ( .DI0(\adc.Data_State.sig_148.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6085 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][1] ), .F0(\adc.Data_State.sig_148.FeedThruLUT ));
  adc_SLICE_354 \adc.SLICE_354 ( .DI0(\adc.Data_State.sig_149.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6079 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][0] ), .F0(\adc.Data_State.sig_149.FeedThruLUT ));
  adc_SLICE_355 \adc.SLICE_355 ( .DI0(\adc.Data_State.sig_150.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n8696 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][8] ), .F0(\adc.Data_State.sig_150.FeedThruLUT ));
  adc_SLICE_356 \adc.SLICE_356 ( .DI0(\adc.Data_State.sig_151.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6052 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][7] ), .F0(\adc.Data_State.sig_151.FeedThruLUT ));
  adc_SLICE_357 \adc.SLICE_357 ( .DI1(\adc.n17[1] ), .DI0(\adc.n17[0] ), 
    .D1(\adc.Count_Stable[1] ), .A1(\adc.Count_Stable[0] ), 
    .B0(\adc.Count_Stable[0] ), .CE(reset_n_c), .LSR(\adc.n6788 ), 
    .CLK(Main_Clock), .Q0(\adc.Count_Stable[0] ), .Q1(\adc.Count_Stable[1] ), 
    .F0(\adc.n17[0] ), .F1(\adc.n17[1] ));
  adc_SLICE_358 \adc.SLICE_358 ( .DI0(\adc.Data_State.sig_152.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6062 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][6] ), .F0(\adc.Data_State.sig_152.FeedThruLUT ));
  adc_SLICE_359 \adc.SLICE_359 ( .DI0(\adc.Data_State.sig_153.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6061 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][5] ), .F0(\adc.Data_State.sig_153.FeedThruLUT ));
  adc_SLICE_360 \adc.SLICE_360 ( .DI0(\adc.Data_State.sig_154.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6060 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][4] ), .F0(\adc.Data_State.sig_154.FeedThruLUT ));
  adc_SLICE_361 \adc.SLICE_361 ( .DI0(\adc.Data_State.sig_155.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6043 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][3] ), .F0(\adc.Data_State.sig_155.FeedThruLUT ));
  adc_SLICE_362 \adc.SLICE_362 ( .DI0(\adc.Data_State.sig_156.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6057 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][2] ), .F0(\adc.Data_State.sig_156.FeedThruLUT ));
  adc_SLICE_363 \adc.SLICE_363 ( .DI0(\adc.Data_State.sig_157.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6058 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][1] ), .F0(\adc.Data_State.sig_157.FeedThruLUT ));
  adc_SLICE_364 \adc.SLICE_364 ( .DI0(\adc.Data_State.sig_158.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6059 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][0] ), .F0(\adc.Data_State.sig_158.FeedThruLUT ));
  adc_SLICE_365 \adc.SLICE_365 ( .DI0(\adc.Data_State.sig_159.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n4586 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][15] ), .F0(\adc.Data_State.sig_159.FeedThruLUT ));
  adc_SLICE_366 \adc.SLICE_366 ( .DI0(\adc.Data_State.sig_160.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6064 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][14] ), .F0(\adc.Data_State.sig_160.FeedThruLUT ));
  adc_SLICE_367 \adc.SLICE_367 ( .DI0(\adc.Data_State.sig_161.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6065 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][13] ), .F0(\adc.Data_State.sig_161.FeedThruLUT ));
  adc_SLICE_368 \adc.SLICE_368 ( .DI0(\adc.Data_State.sig_162.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6066 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][12] ), .F0(\adc.Data_State.sig_162.FeedThruLUT ));
  adc_SLICE_369 \adc.SLICE_369 ( .DI0(\adc.Data_State.sig_163.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6044 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][11] ), .F0(\adc.Data_State.sig_163.FeedThruLUT ));
  adc_SLICE_370 \adc.SLICE_370 ( .DI0(\adc.Data_State.sig_164.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6067 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][10] ), .F0(\adc.Data_State.sig_164.FeedThruLUT ));
  adc_SLICE_371 \adc.SLICE_371 ( .DI0(\adc.Data_State.sig_165.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6068 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][9] ), .F0(\adc.Data_State.sig_165.FeedThruLUT ));
  adc_SLICE_372 \adc.SLICE_372 ( .DI0(\adc.Data_State.sig_166.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6069 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][8] ), .F0(\adc.Data_State.sig_166.FeedThruLUT ));
  adc_SLICE_373 \adc.SLICE_373 ( .DI0(\adc.Data_State.sig_167.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6051 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][7] ), .F0(\adc.Data_State.sig_167.FeedThruLUT ));
  adc_SLICE_374 \adc.SLICE_374 ( .DI0(\adc.Data_State.sig_168.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6071 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][6] ), .F0(\adc.Data_State.sig_168.FeedThruLUT ));
  adc_SLICE_376 \adc.SLICE_376 ( .DI0(\adc.Data_State.sig_170.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6072 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][5] ), .F0(\adc.Data_State.sig_170.FeedThruLUT ));
  adc_SLICE_377 \adc.SLICE_377 ( .DI0(\adc.Data_State.sig_171.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6073 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][4] ), .F0(\adc.Data_State.sig_171.FeedThruLUT ));
  adc_SLICE_380 \adc.SLICE_380 ( .DI0(\adc.Data_State.sig_174.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6045 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][3] ), .F0(\adc.Data_State.sig_174.FeedThruLUT ));
  adc_SLICE_381 \adc.SLICE_381 ( .DI0(\adc.Data_State.sig_175.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6074 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][2] ), .F0(\adc.Data_State.sig_175.FeedThruLUT ));
  adc_SLICE_383 \adc.SLICE_383 ( .DI0(\adc.Data_State.sig_176.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6075 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][1] ), .F0(\adc.Data_State.sig_176.FeedThruLUT ));
  SLICE_384 SLICE_384( .DI0(\i_ADC_Clock_c.sig_177.FeedThruLUT ), 
    .A0(i_ADC_Clock_c), .CE(\adc.n9048 ), .CLK(Main_Clock), 
    .Q0(\adc.Clock_Stable ), .F0(\i_ADC_Clock_c.sig_177.FeedThruLUT ));
  adc_SLICE_386 \adc.SLICE_386 ( .DI0(\adc.n17[2] ), 
    .C0(\adc.Count_Stable[2] ), .B0(\adc.Count_Stable[0] ), 
    .A0(\adc.Count_Stable[1] ), .CE(reset_n_c), .LSR(\adc.n6788 ), 
    .CLK(Main_Clock), .Q0(\adc.Count_Stable[2] ), .F0(\adc.n17[2] ));
  adc_SLICE_388 \adc.SLICE_388 ( .DI0(\adc.Data_State.sig_178.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6076 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][0] ), .F0(\adc.Data_State.sig_178.FeedThruLUT ));
  SLICE_390 SLICE_390( .DI0(n6845), .C0(\Receive_Byte[0] ), .B0(n6689), 
    .A0(n6171), .CLK(\adc.Clock_Stable ), .Q0(\Receive_Byte[0] ), .F0(n6845));
  adc_SLICE_392 \adc.SLICE_392 ( .DI0(\adc.Data_State.sig_179.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6081 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][0] ), .F0(\adc.Data_State.sig_179.FeedThruLUT ));
  adc_SLICE_393 \adc.SLICE_393 ( .DI0(\adc.Data_State.sig_180.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6091 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][1] ), .F0(\adc.Data_State.sig_180.FeedThruLUT ));
  adc_SLICE_394 \adc.SLICE_394 ( .DI0(\adc.Data_State.sig_181.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6092 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][2] ), .F0(\adc.Data_State.sig_181.FeedThruLUT ));
  adc_SLICE_395 \adc.SLICE_395 ( .DI0(\adc.Data_State.sig_182.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6042 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][3] ), .F0(\adc.Data_State.sig_182.FeedThruLUT ));
  adc_SLICE_396 \adc.SLICE_396 ( .DI0(\adc.Data_State.sig_183.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6093 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][4] ), .F0(\adc.Data_State.sig_183.FeedThruLUT ));
  adc_SLICE_397 \adc.SLICE_397 ( .DI0(\adc.Data_State.sig_184.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6094 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][5] ), .F0(\adc.Data_State.sig_184.FeedThruLUT ));
  adc_SLICE_398 \adc.SLICE_398 ( .DI0(\adc.Data_State.sig_185.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6095 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][6] ), .F0(\adc.Data_State.sig_185.FeedThruLUT ));
  adc_SLICE_399 \adc.SLICE_399 ( .DI0(\adc.Data_State.sig_186.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6054 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][7] ), .F0(\adc.Data_State.sig_186.FeedThruLUT ));
  adc_SLICE_400 \adc.SLICE_400 ( .DI0(\adc.Data_State.sig_187.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6082 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][8] ), .F0(\adc.Data_State.sig_187.FeedThruLUT ));
  adc_SLICE_401 \adc.SLICE_401 ( .DI0(\adc.Data_State.sig_188.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6097 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][9] ), .F0(\adc.Data_State.sig_188.FeedThruLUT ));
  adc_SLICE_402 \adc.SLICE_402 ( .DI0(\adc.Data_State.sig_189.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6098 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][10] ), .F0(\adc.Data_State.sig_189.FeedThruLUT ));
  adc_SLICE_403 \adc.SLICE_403 ( .DI0(\adc.Data_State.sig_190.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6047 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][11] ), .F0(\adc.Data_State.sig_190.FeedThruLUT ));
  adc_SLICE_404 \adc.SLICE_404 ( .DI0(\adc.Data_State.sig_191.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6099 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][12] ), .F0(\adc.Data_State.sig_191.FeedThruLUT ));
  adc_SLICE_405 \adc.SLICE_405 ( .DI0(\adc.Data_State.sig_192.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6100 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][13] ), .F0(\adc.Data_State.sig_192.FeedThruLUT ));
  adc_SLICE_406 \adc.SLICE_406 ( .DI0(\adc.Data_State.sig_193.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6101 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][14] ), .F0(\adc.Data_State.sig_193.FeedThruLUT ));
  adc_SLICE_407 \adc.SLICE_407 ( .DI0(\adc.Data_State.sig_194.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6055 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][15] ), .F0(\adc.Data_State.sig_194.FeedThruLUT ));
  adc_SLICE_408 \adc.SLICE_408 ( .DI0(\adc.Data_State.sig_195.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6083 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][0] ), .F0(\adc.Data_State.sig_195.FeedThruLUT ));
  adc_SLICE_409 \adc.SLICE_409 ( .DI0(\adc.Data_State.sig_196.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6103 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][1] ), .F0(\adc.Data_State.sig_196.FeedThruLUT ));
  adc_SLICE_411 \adc.SLICE_411 ( .DI0(\adc.Data_State.sig_198.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6048 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][3] ), .F0(\adc.Data_State.sig_198.FeedThruLUT ));
  adc_SLICE_412 \adc.SLICE_412 ( .DI0(\adc.Data_State.sig_199.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6105 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][4] ), .F0(\adc.Data_State.sig_199.FeedThruLUT ));
  adc_SLICE_413 \adc.SLICE_413 ( .DI0(\adc.Data_State.sig_200.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6106 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][5] ), .F0(\adc.Data_State.sig_200.FeedThruLUT ));
  adc_SLICE_414 \adc.SLICE_414 ( .DI0(\adc.Data_State.sig_201.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6107 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][6] ), .F0(\adc.Data_State.sig_201.FeedThruLUT ));
  adc_SLICE_415 \adc.SLICE_415 ( .DI0(\adc.Data_State.sig_202.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6050 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][7] ), .F0(\adc.Data_State.sig_202.FeedThruLUT ));
  adc_SLICE_416 \adc.SLICE_416 ( .DI1(\adc.n377[3] ), .DI0(\adc.n377[2] ), 
    .D1(\adc.Receive_Byte[3]_2 ), .C1(\Receive_Byte[0] ), 
    .B1(\adc.Receive_Byte[1]_2 ), .A1(\adc.Receive_Byte[2]_2 ), 
    .D0(\Receive_Byte[0] ), .B0(\adc.Receive_Byte[2]_2 ), 
    .A0(\adc.Receive_Byte[1]_2 ), .CE(n6171), .LSR(n6689), 
    .CLK(\adc.Clock_Stable ), .Q0(\adc.Receive_Byte[2]_2 ), 
    .Q1(\adc.Receive_Byte[3]_2 ), .F0(\adc.n377[2] ), .F1(\adc.n377[3] ));
  adc_SLICE_417 \adc.SLICE_417 ( .DI1(\adc.n370[2] ), .DI0(\adc.n370[1] ), 
    .D1(\adc.Receive_Bit[0] ), .C1(\adc.Receive_Bit[2] ), 
    .B1(\adc.Receive_Bit[1] ), .C0(\adc.Receive_Bit[0] ), 
    .A0(\adc.Receive_Bit[1] ), .CE(\adc.n2964 ), .LSR(\adc.n6700 ), 
    .CLK(\adc.Clock_Stable ), .Q0(\adc.Receive_Bit[1] ), 
    .Q1(\adc.Receive_Bit[2] ), .F0(\adc.n370[1] ), .F1(\adc.n370[2] ));
  mult_SLICE_422 \mult.SLICE_422 ( .DI1(\mult.o_Mult_8__N_740[1] ), 
    .DI0(\mult.o_Mult_8__N_740[0] ), .D1(\mult.cout ), .C1(\mult.n57[2] ), 
    .B1(Reset_Mult_Scaler), .A1(\Scale_Initial[1] ), .D0(\mult.n57[1] ), 
    .C0(Reset_Mult_Scaler), .B0(\Scale_Initial[0] ), .A0(\mult.cout ), 
    .CE(\mult.n6420 ), .CLK(Main_Clock), .Q0(\Adder_Mult[0] ), 
    .Q1(\Adder_Mult[1] ), .F0(\mult.o_Mult_8__N_740[0] ), 
    .F1(\mult.o_Mult_8__N_740[1] ));
  mult_SLICE_423 \mult.SLICE_423 ( .DI1(\mult.n1_adj_1077 ), .DI0(\mult.n1_2 ), 
    .D1(\SM_Scale_Mult[0] ), .C1(\mult.n15 ), .B1(\mult.n8704 ), 
    .D0(\mult.n15 ), .C0(\SM_Scale_Mult[0] ), .CE(\mult.n6350 ), 
    .LSR(o_Mult_Ready_N_781), .CLK(Main_Clock), .Q0(\mult.SM_Scale_Mult[1] ), 
    .Q1(\SM_Scale_Mult[0] ), .F0(\mult.n1_2 ), .F1(\mult.n1_adj_1077 ));
  mult_SLICE_424 \mult.SLICE_424 ( .DI1(\mult.n4116 ), .DI0(\mult.n4114 ), 
    .D1(\mult.SM_Scale_Mult[1] ), .A1(\mult.n47[6] ), 
    .C0(\mult.SM_Scale_Mult[1] ), .A0(\mult.n47[7] ), .CE(n6921), 
    .LSR(Reset_Mult_Scaler), .CLK(Main_Clock), .Q0(\mult.Comb_Counter[7] ), 
    .Q1(\mult.Comb_Counter[6] ), .F0(\mult.n4114 ), .F1(\mult.n4116 ));
  mult_SLICE_426 \mult.SLICE_426 ( .DI1(\mult.n4120 ), .DI0(\mult.n4118 ), 
    .D1(\mult.n47[4] ), .B1(\mult.SM_Scale_Mult[1] ), 
    .C0(\mult.SM_Scale_Mult[1] ), .A0(\mult.n47[5] ), .CE(n6921), 
    .LSR(Reset_Mult_Scaler), .CLK(Main_Clock), .Q0(\mult.Comb_Counter[5] ), 
    .Q1(\mult.Comb_Counter[4] ), .F0(\mult.n4118 ), .F1(\mult.n4120 ));
  mult_SLICE_428 \mult.SLICE_428 ( .DI1(\mult.n4124 ), .DI0(\mult.n4122 ), 
    .D1(\mult.SM_Scale_Mult[1] ), .A1(\mult.n47[2] ), .B0(\mult.n47[3] ), 
    .A0(\mult.SM_Scale_Mult[1] ), .CE(n6921), .LSR(Reset_Mult_Scaler), 
    .CLK(Main_Clock), .Q0(\mult.Comb_Counter[3] ), .Q1(\mult.Comb_Counter[2] ), 
    .F0(\mult.n4122 ), .F1(\mult.n4124 ));
  mult_SLICE_430 \mult.SLICE_430 ( .DI1(\mult.n3803 ), .DI0(\mult.n4126 ), 
    .D1(\mult.n47[0] ), .B1(\mult.SM_Scale_Mult[1] ), .C0(\mult.n47[1] ), 
    .A0(\mult.SM_Scale_Mult[1] ), .CE(n6921), .LSR(Reset_Mult_Scaler), 
    .CLK(Main_Clock), .Q0(\mult.Comb_Counter[1] ), .Q1(\mult.Comb_Counter[0] ), 
    .F0(\mult.n4126 ), .F1(\mult.n3803 ));
  mult_SLICE_433 \mult.SLICE_433 ( .DI1(\mult.o_Mult_8__N_740[3] ), 
    .DI0(\mult.o_Mult_8__N_740[2] ), .D1(Reset_Mult_Scaler), 
    .C1(\Scale_Initial[3] ), .B1(\mult.n57[4] ), .A1(\mult.cout ), 
    .D0(\Scale_Initial[2] ), .C0(\mult.cout ), .B0(Reset_Mult_Scaler), 
    .A0(\mult.n57[3] ), .CE(\mult.n6420 ), .CLK(Main_Clock), 
    .Q0(\Adder_Mult[2] ), .Q1(\Adder_Mult[3] ), .F0(\mult.o_Mult_8__N_740[2] ), 
    .F1(\mult.o_Mult_8__N_740[3] ));
  mult_SLICE_435 \mult.SLICE_435 ( .DI1(\mult.o_Mult_8__N_740[5] ), 
    .DI0(\mult.o_Mult_8__N_740[4] ), .D1(\Scale_Initial[5] ), 
    .C1(\mult.n57[6] ), .B1(\mult.cout ), .A1(Reset_Mult_Scaler), 
    .D0(Reset_Mult_Scaler), .C0(\mult.cout ), .B0(\Scale_Initial[4] ), 
    .A0(\mult.n57[5] ), .CE(\mult.n6420 ), .CLK(Main_Clock), 
    .Q0(\Adder_Mult[4] ), .Q1(\Adder_Mult[5] ), .F0(\mult.o_Mult_8__N_740[4] ), 
    .F1(\mult.o_Mult_8__N_740[5] ));
  mult_SLICE_437 \mult.SLICE_437 ( .DI1(\mult.o_Mult_8__N_740[7] ), 
    .DI0(\mult.o_Mult_8__N_740[6] ), .D1(\mult.cout ), .C1(\Scale_Initial[7] ), 
    .B1(\mult.n57[8] ), .A1(Reset_Mult_Scaler), .D0(\mult.n57[7] ), 
    .C0(\Scale_Initial[6] ), .B0(Reset_Mult_Scaler), .A0(\mult.cout ), 
    .CE(\mult.n6420 ), .CLK(Main_Clock), .Q0(\Adder_Mult[6] ), 
    .Q1(\Adder_Mult[7] ), .F0(\mult.o_Mult_8__N_740[6] ), 
    .F1(\mult.o_Mult_8__N_740[7] ));
  genadder_0__adder_SLICE_443 \genadder[0].adder.SLICE_443 ( 
    .DI1(\genadder[0].adder.n6684 ), .DI0(\genadder[0].adder.n6682 ), 
    .D1(reset_n_c), .B1(\genadder[0].adder.n167[2] ), 
    .B0(\genadder[0].adder.n167[3] ), .A0(reset_n_c), .CE(n2972), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[0][3] ), 
    .Q1(\Adder_Total[0][2] ), .F0(\genadder[0].adder.n6682 ), 
    .F1(\genadder[0].adder.n6684 ));
  genadder_0__adder_SLICE_444 \genadder[0].adder.SLICE_444 ( 
    .DI1(\genadder[0].adder.n6678 ), .DI0(\genadder[0].adder.n6680 ), 
    .D1(\genadder[0].adder.n167[5] ), .C1(reset_n_c), .D0(reset_n_c), 
    .C0(\genadder[0].adder.n167[4] ), .CE(n2972), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[0][4] ), .Q1(\Adder_Total[0][5] ), 
    .F0(\genadder[0].adder.n6680 ), .F1(\genadder[0].adder.n6678 ));
  genadder_0__adder_SLICE_446 \genadder[0].adder.SLICE_446 ( 
    .DI1(\genadder[0].adder.n6674 ), .DI0(\genadder[0].adder.n6676 ), 
    .C1(reset_n_c), .B1(\genadder[0].adder.n167[7] ), .D0(reset_n_c), 
    .B0(\genadder[0].adder.n167[6] ), .CE(n2972), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[0][6] ), .Q1(\Adder_Total[0][7] ), 
    .F0(\genadder[0].adder.n6676 ), .F1(\genadder[0].adder.n6674 ));
  genadder_0__adder_SLICE_449 \genadder[0].adder.SLICE_449 ( 
    .DI1(\genadder[0].adder.n6670 ), .DI0(\genadder[0].adder.n6672 ), 
    .D1(reset_n_c), .B1(\genadder[0].adder.n167[9] ), 
    .C0(\genadder[0].adder.n167[8] ), .A0(reset_n_c), .CE(n2972), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[0][8] ), 
    .Q1(\Adder_Total[0][9] ), .F0(\genadder[0].adder.n6672 ), 
    .F1(\genadder[0].adder.n6670 ));
  genadder_0__adder_SLICE_451 \genadder[0].adder.SLICE_451 ( 
    .DI1(\genadder[0].adder.n6665 ), .DI0(\genadder[0].adder.n6667 ), 
    .B1(reset_n_c), .A1(\genadder[0].adder.n167[11] ), 
    .D0(\genadder[0].adder.n167[10] ), .C0(reset_n_c), .CE(n2972), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[0][10] ), 
    .Q1(\Adder_Total[0][11] ), .F0(\genadder[0].adder.n6667 ), 
    .F1(\genadder[0].adder.n6665 ));
  genadder_0__adder_SLICE_453 \genadder[0].adder.SLICE_453 ( 
    .DI1(\genadder[0].adder.n6661 ), .DI0(\genadder[0].adder.n6663 ), 
    .D1(\genadder[0].adder.n167[13] ), .B1(reset_n_c), 
    .C0(\genadder[0].adder.n167[12] ), .A0(reset_n_c), .CE(n2972), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[0][12] ), 
    .Q1(\Adder_Total[0][13] ), .F0(\genadder[0].adder.n6663 ), 
    .F1(\genadder[0].adder.n6661 ));
  genadder_0__adder_SLICE_455 \genadder[0].adder.SLICE_455 ( 
    .DI1(\genadder[0].adder.n6643 ), .DI0(\genadder[0].adder.n6659 ), 
    .D1(\genadder[0].adder.n167[15] ), .B1(reset_n_c), 
    .D0(\genadder[0].adder.n167[14] ), .A0(reset_n_c), .CE(n2972), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[0][14] ), 
    .Q1(\Adder_Total[0][15] ), .F0(\genadder[0].adder.n6659 ), 
    .F1(\genadder[0].adder.n6643 ));
  genadder_0__adder_SLICE_457 \genadder[0].adder.SLICE_457 ( 
    .DI1(\genadder[0].adder.n6591 ), .DI0(\genadder[0].adder.n6629 ), 
    .B1(\genadder[0].adder.n167[17] ), .A1(reset_n_c), .D0(reset_n_c), 
    .A0(\genadder[0].adder.n167[16] ), .CE(n2972), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[0][16] ), .Q1(\Adder_Total[0][17] ), 
    .F0(\genadder[0].adder.n6629 ), .F1(\genadder[0].adder.n6591 ));
  genadder_0__adder_SLICE_459 \genadder[0].adder.SLICE_459 ( 
    .DI0(\genadder[0].adder.n6574 ), .D0(\genadder[0].adder.n167[18] ), 
    .B0(reset_n_c), .CE(n2972), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q0(\genadder[0].adder.Adder_Total[0][18] ), 
    .F0(\genadder[0].adder.n6574 ));
  genadder_0__adder_SLICE_460 \genadder[0].adder.SLICE_460 ( 
    .DI1(\genadder[0].adder.n6686 ), .DI0(\genadder[0].adder.n6562 ), 
    .D1(\genadder[0].adder.n167[1] ), .B1(reset_n_c), .C0(reset_n_c), 
    .A0(\genadder[0].adder.n167[0] ), .CE(n2972), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\genadder[0].adder.Adder_Total[0][0] ), 
    .Q1(\genadder[0].adder.Adder_Total[0][1] ), .F0(\genadder[0].adder.n6562 ), 
    .F1(\genadder[0].adder.n6686 ));
  SLICE_461 SLICE_461( .DI1(n6795), .DI0(n6832), .D1(n18), 
    .C1(\Working_Total[9] ), .A1(n2943), .D0(n17_2), .B0(\Working_Total[10] ), 
    .A0(n2943), .CLK(Main_Clock), .Q0(\Working_Total[10] ), 
    .Q1(\Working_Total[9] ), .F0(n6832), .F1(n6795));
  SLICE_462 SLICE_462( .DI1(n6830), .DI0(n6831), .D1(n15), 
    .C1(\Working_Total[12] ), .A1(n2943), .D0(n16), .B0(n2943), 
    .A0(\Working_Total[11] ), .CLK(Main_Clock), .Q0(\Working_Total[11] ), 
    .Q1(\Working_Total[12] ), .F0(n6831), .F1(n6830));
  SLICE_464 SLICE_464( .DI1(n6828), .DI0(n6829), .D1(n13), 
    .C1(\Working_Total[14] ), .A1(n2943), .D0(n14), .B0(n2943), 
    .A0(\Working_Total[13] ), .CLK(Main_Clock), .Q0(\Working_Total[13] ), 
    .Q1(\Working_Total[14] ), .F0(n6829), .F1(n6828));
  SLICE_466 SLICE_466( .DI1(n6826), .DI0(n6827), .D1(n11), 
    .C1(\Working_Total[16] ), .A1(n2943), .D0(n12), .B0(n2943), 
    .A0(\Working_Total[15] ), .CLK(Main_Clock), .Q0(\Working_Total[15] ), 
    .Q1(\Working_Total[16] ), .F0(n6827), .F1(n6826));
  SLICE_468 SLICE_468( .DI1(n6824), .DI0(n6825), .D1(n9_adj_1160), 
    .C1(\Working_Total[18] ), .A1(n2943), .D0(n10_adj_1161), .B0(n2943), 
    .A0(\Working_Total[17] ), .CLK(Main_Clock), .Q0(\Working_Total[17] ), 
    .Q1(\Working_Total[18] ), .F0(n6825), .F1(n6824));
  SLICE_470 SLICE_470( .DI1(n6822), .DI0(n6823), .D1(n7_adj_1159), 
    .C1(\Working_Total[20] ), .A1(n2943), .D0(n8_2), .B0(n2943), 
    .A0(\Working_Total[19] ), .CLK(Main_Clock), .Q0(\Working_Total[19] ), 
    .Q1(\Working_Total[20] ), .F0(n6823), .F1(n6822));
  SLICE_472 SLICE_472( .DI1(n6820), .DI0(n6821), .D1(n5), 
    .C1(\Working_Total[22] ), .A1(n2943), .D0(n6), .C0(n2943), 
    .B0(\Working_Total[21] ), .CLK(Main_Clock), .Q0(\Working_Total[21] ), 
    .Q1(\Working_Total[22] ), .F0(n6821), .F1(n6820));
  SLICE_474 SLICE_474( .DI1(n6818), .DI0(n6819), .D1(n3), .C1(n2943), 
    .B1(\Working_Total[31] ), .D0(n4), .B0(n2943), .A0(\Working_Total[23] ), 
    .CLK(Main_Clock), .Q0(\Working_Total[23] ), .Q1(\Working_Total[31] ), 
    .F0(n6819), .F1(n6818));
  sample_output_dac_SLICE_480 \sample_output.dac.SLICE_480 ( .D1(n10_adj_1158), 
    .C1(\sample_output.dac.n24 ), .B1(reset_n_N_191), .A1(Clock_Counter), 
    .D0(\SM_DAC_Out[3] ), .C0(\SM_DAC_Out[1] ), .B0(\SM_DAC_Out[0] ), 
    .A0(\SM_DAC_Out[2] ), .F0(\sample_output.dac.n24 ), .F1(n6909));
  sample_output_dac_SLICE_481 \sample_output.dac.SLICE_481 ( 
    .D1(\SM_DAC_Out[1] ), .C1(\SM_DAC_Out[3] ), .B1(\SM_DAC_Out[2] ), 
    .A1(\SM_DAC_Out[0] ), .D0(\SM_DAC_Out[2] ), .C0(n2613), 
    .B0(\SM_DAC_Out[0] ), .A0(\sample_output.dac.n24 ), 
    .F0(\sample_output.dac.n4 ), .F1(n2613));
  SLICE_482 SLICE_482( .D1(DAC_Ready), .C1(n9456), .B1(reset_n_c), 
    .A1(\SM_Sample_Output[0] ), .D0(\SM_Sample_Output[0] ), .C0(DAC_Ready), 
    .B0(\SM_Sample_Output[2] ), .A0(\SM_Sample_Output[1] ), .F0(n9456), 
    .F1(n9460));
  SLICE_484 SLICE_484( .D1(n31_adj_1186), .C1(n44), .B1(\SM_Top[2] ), 
    .A1(reset_n_c), .D0(n9758), .C0(n9382), .B0(\SM_Top[3] ), .A0(\SM_Top[1] ), 
    .F0(n44), .F1(n24));
  SLICE_485 SLICE_485( .D1(Mult_Ready), .C1(n31), .B1(\SM_Top[1] ), 
    .A1(\SM_Top[0] ), .D0(\Sample_Timer[5] ), .C0(n8718), 
    .B0(\Sample_Timer[3] ), .A0(n9442), .F0(n31), .F1(n9382));
  sample_output_dac_SLICE_486 \sample_output.dac.SLICE_486 ( 
    .D1(\sample_output.dac.n10375 ), .C1(\sample_output.dac.n9741 ), 
    .B1(\sample_output.dac.n9742 ), .A1(\sample_output.dac.Current_Bit[2] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.r_Data_To_Send[16] ), 
    .A0(\sample_output.dac.r_Data_To_Send[17] ), 
    .F0(\sample_output.dac.n9741 ), .F1(\sample_output.dac.n10378 ));
  sample_output_dac_SLICE_487 \sample_output.dac.SLICE_487 ( 
    .D1(\sample_output.dac.n9754 ), .C1(\sample_output.dac.n9753 ), 
    .B1(\sample_output.dac.Current_Bit[1] ), 
    .A1(\sample_output.dac.Current_Bit[2] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .B0(\sample_output.dac.r_Data_To_Send[21] ), 
    .A0(\sample_output.dac.r_Data_To_Send[20] ), 
    .F0(\sample_output.dac.n9753 ), .F1(\sample_output.dac.n10375 ));
  sample_output_dac_SLICE_488 \sample_output.dac.SLICE_488 ( 
    .D0(\sample_output.dac.n10378 ), .C0(\sample_output.dac.n15 ), 
    .B0(\sample_output.dac.Current_Bit[3] ), 
    .A0(\sample_output.dac.Current_Bit[4] ), 
    .F0(\sample_output.dac.o_SPI_Data_N_1068 ));
  sample_output_dac_SLICE_489 \sample_output.dac.SLICE_489 ( 
    .D1(\sample_output.dac.n10390 ), .C1(\sample_output.dac.n10384 ), 
    .B1(\sample_output.dac.Current_Bit[1] ), 
    .A1(\sample_output.dac.Current_Bit[3] ), .D0(\sample_output.dac.n9750 ), 
    .C0(\sample_output.dac.n10381 ), .B0(\sample_output.dac.n9751 ), 
    .A0(\sample_output.dac.Current_Bit[2] ), .F0(\sample_output.dac.n10384 ), 
    .F1(\sample_output.dac.n15 ));
  sample_output_dac_SLICE_491 \sample_output.dac.SLICE_491 ( 
    .D1(\sample_output.dac.Current_Bit[1] ), .C1(\sample_output.dac.n9744 ), 
    .B1(\sample_output.dac.Current_Bit[2] ), .A1(\sample_output.dac.n9745 ), 
    .D0(\sample_output.dac.r_Data_To_Send[13] ), 
    .C0(\sample_output.dac.Current_Bit[0] ), 
    .B0(\sample_output.dac.r_Data_To_Send[12] ), 
    .F0(\sample_output.dac.n9744 ), .F1(\sample_output.dac.n10381 ));
  sample_output_dac_SLICE_492 \sample_output.dac.SLICE_492 ( 
    .D1(\sample_output.dac.r_Data_To_Send[2] ), 
    .C1(\sample_output.dac.n10387 ), .B1(\sample_output.dac.Current_Bit[2] ), 
    .A1(\sample_output.dac.r_Data_To_Send[3] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.Current_Bit[2] ), 
    .B0(\sample_output.dac.r_Data_To_Send[6] ), 
    .A0(\sample_output.dac.r_Data_To_Send[7] ), 
    .F0(\sample_output.dac.n10387 ), .F1(\sample_output.dac.n10390 ));
  sample_output_dac_SLICE_494 \sample_output.dac.SLICE_494 ( .D1(n9029), 
    .C1(n9372), .B1(n9460), .A1(\SM_Sample_Output[2] ), 
    .D0(\SM_Sample_Output[2] ), .C0(\SM_Sample_Output[1] ), 
    .B0(\SM_Sample_Output[0] ), .A0(DAC_Ready), .F0(n9372), .F1(n6956));
  sample_output_dac_SLICE_497 \sample_output.dac.SLICE_497 ( 
    .D1(\sample_output.dac.n4 ), .C1(\sample_output.dac.n15_adj_1089 ), 
    .B1(reset_n_c), .A1(Clock_Counter), .D0(\SM_DAC_Out[0] ), .C0(n2613), 
    .A0(DAC_Send_adj_1184), .F0(\sample_output.dac.n15_adj_1089 ), 
    .F1(\sample_output.dac.n6374 ));
  sample_output_dac_SLICE_498 \sample_output.dac.SLICE_498 ( .D1(n9408), 
    .C1(\sample_output.dac.n10 ), .B1(reset_n_c), .A1(Clock_Counter), 
    .D0(\SM_DAC_Out[1] ), .C0(\SM_DAC_Out[0] ), .B0(DAC_Send_adj_1184), 
    .F0(\sample_output.dac.n10 ), .F1(\sample_output.dac.n6361 ));
  sample_output_dac_SLICE_499 \sample_output.dac.SLICE_499 ( 
    .C1(DAC_Send_adj_1184), .B1(\SM_DAC_Out[0] ), .D0(\SM_DAC_Out[1] ), 
    .C0(\sample_output.dac.n6361 ), .B0(\SM_DAC_Out[0] ), .A0(n9408), 
    .F0(\sample_output.dac.n6694 ), .F1(\sample_output.dac.n5542 ));
  SLICE_500 SLICE_500( .D1(\SM_Top[0] ), .C1(n9021), .B1(\SM_Top[1] ), 
    .A1(Sample_Ready), .D0(\SM_Top[2] ), .B0(\SM_Top[3] ), .A0(reset_n_c), 
    .F0(n9021), .F1(n9068));
  SLICE_501 SLICE_501( .D1(n9068), .C1(n9076), .B1(\SM_Top[1] ), 
    .A1(\SM_Top[2] ), .D0(\SM_Top[3] ), .C0(reset_n_c), .F0(n9076), .F1(n9069));
  SLICE_502 SLICE_502( .D0(n9386), .C0(n19), .B0(\SM_Top[1] ), .A0(reset_n_c), 
    .F0(n14_adj_1162));
  SLICE_503 SLICE_503( .D1(\SM_Top[1] ), .C1(n3681), .B1(\SM_Top[2] ), 
    .A1(\SM_Top[3] ), .D0(n31), .B0(\SM_Top[0] ), .F0(n3681), .F1(n19));
  SLICE_504 SLICE_504( .D1(n9406), .C1(n9418), .B1(\SM_Top[0] ), 
    .A1(reset_n_c), .D0(\SM_Top[3] ), .C0(n31), .F0(n9418), .F1(n9450));
  SLICE_505 SLICE_505( .D1(n31), .C1(n9406), .B1(\SM_Top[0] ), .A1(n9380), 
    .D0(\SM_Top[2] ), .B0(\SM_Top[1] ), .F0(n9406), .F1(n9059));
  SLICE_506 SLICE_506( .D1(\SM_Adder_adj_1202[0] ), .B1(reset_n_c), 
    .B0(\SM_Top[3] ), .A0(reset_n_c), .F0(n9380), 
    .F1(\genadder[1].adder.n2977 ));
  SLICE_507 SLICE_507( .D1(n9068), .C1(n9090), .B1(n9380), .A1(\SM_Top[2] ), 
    .D0(\SM_Top[1] ), .C0(n31), .B0(\SM_Top[0] ), .A0(Mult_Ready), .F0(n9090), 
    .F1(n9070));
  SLICE_508 SLICE_508( .D1(reset_n_c), .C1(n9033), .D0(\SM_Sample_Output[0] ), 
    .C0(\SM_Sample_Output[1] ), .B0(\SM_Sample_Output[2] ), .A0(DAC_Ready), 
    .F0(n9033), .F1(n9034));
  sample_position_SLICE_510 \sample_position.SLICE_510 ( 
    .D1(\sample_position.n5941 ), 
    .C1(\sample_position.Accumulated_Frequency[6] ), 
    .B1(\SM_Sample_Position[2] ), .D0(\sample_position.n5941 ), 
    .C0(\sample_position.Accumulated_Frequency[8] ), 
    .A0(\SM_Sample_Position[2] ), .F0(\sample_position.n7733 ), 
    .F1(\sample_position.n7737 ));
  sample_position_SLICE_511 \sample_position.SLICE_511 ( 
    .D1(\sample_position.Accumulated_Frequency[0] ), 
    .C1(\sample_position.n5941 ), .B1(\SM_Sample_Position[2] ), 
    .D0(\SM_Sample_Position[0] ), .C0(reset_n_c), .B0(\SM_Sample_Position[1] ), 
    .F0(\sample_position.n5941 ), .F1(\sample_position.n7749 ));
  sample_position_SLICE_512 \sample_position.SLICE_512 ( 
    .D1(\SM_Sample_Position[2] ), .C1(\sample_position.n6038 ), 
    .B1(\SM_Sample_Position[1] ), .A1(Next_Sample), 
    .C0(\SM_Sample_Position[0] ), .A0(reset_n_c), .F0(\sample_position.n6038 ), 
    .F1(\sample_position.n6362 ));
  sample_position_SLICE_514 \sample_position.SLICE_514 ( 
    .D1(\SM_Sample_Position[1] ), .C1(\sample_position.n9392 ), .B1(n5939), 
    .A1(\Harmonic[0] ), .D0(\Harmonic[6] ), .C0(\Harmonic[4] ), 
    .B0(\Harmonic[7] ), .A0(\Harmonic[5] ), .F0(\sample_position.n9392 ), 
    .F1(\sample_position.n9762 ));
  sample_position_SLICE_516 \sample_position.SLICE_516 ( 
    .D1(\SM_Sample_Position[1] ), .C1(\sample_position.n9071 ), 
    .B1(\SM_Sample_Position[2] ), .A1(reset_n_c), .D0(Next_Sample), 
    .C0(\SM_Sample_Position[0] ), .F0(\sample_position.n9071 ), 
    .F1(\sample_position.n6153 ));
  sample_position_SLICE_518 \sample_position.SLICE_518 ( 
    .D1(\SM_Sample_Position[2] ), .C1(\sample_position.n4_adj_1142 ), 
    .B1(\sample_position.n6_adj_1141 ), .A1(\SM_Sample_Position[0] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .C0(\sample_position.n30 ), 
    .B0(\sample_position.Accumulated_Frequency[15] ), .A0(\Harmonic[0] ), 
    .F0(\sample_position.n4_adj_1142 ), .F1(\sample_position.n6148 ));
  sample_position_SLICE_520 \sample_position.SLICE_520 ( 
    .D1(\sample_position.Accumulated_Frequency[14] ), 
    .C1(\sample_position.n28 ), 
    .A1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .C0(\sample_position.n26 ), 
    .B0(\sample_position.Accumulated_Frequency[13] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .F0(\sample_position.n28 ), .F1(\sample_position.n30 ));
  sample_position_SLICE_522 \sample_position.SLICE_522 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .C1(\sample_position.n24 ), 
    .A1(\sample_position.Accumulated_Frequency[12] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .C0(\sample_position.n22 ), 
    .B0(\sample_position.Accumulated_Frequency[11] ), 
    .F0(\sample_position.n24 ), .F1(\sample_position.n26 ));
  sample_position_SLICE_524 \sample_position.SLICE_524 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .C1(\sample_position.n20 ), 
    .B1(\sample_position.Accumulated_Frequency[10] ), 
    .D0(\sample_position.Accumulated_Frequency[9] ), 
    .C0(\sample_position.n18 ), 
    .A0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .F0(\sample_position.n20 ), .F1(\sample_position.n22 ));
  sample_position_SLICE_526 \sample_position.SLICE_526 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[8] ), 
    .C1(\sample_position.n16_adj_1143 ), 
    .A1(\sample_position.Accumulated_Frequency[8] ), 
    .D0(\sample_position.Accumulated_Frequency[7] ), 
    .C0(\sample_position.n14_adj_1144 ), 
    .A0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .F0(\sample_position.n16_adj_1143 ), .F1(\sample_position.n18 ));
  sample_position_SLICE_528 \sample_position.SLICE_528 ( 
    .D1(\sample_position.Accumulated_Frequency[6] ), 
    .C1(\sample_position.n12_adj_1145 ), 
    .B1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .D0(\sample_position.Accumulated_Frequency[5] ), 
    .C0(\sample_position.n10_adj_1146 ), 
    .A0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .F0(\sample_position.n12_adj_1145 ), .F1(\sample_position.n14_adj_1144 ));
  sample_position_SLICE_530 \sample_position.SLICE_530 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .C1(\sample_position.n8_adj_1147 ), 
    .A1(\sample_position.Accumulated_Frequency[4] ), 
    .D0(\sample_position.Accumulated_Frequency[3] ), 
    .C0(\sample_position.n6_adj_1148 ), 
    .A0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .F0(\sample_position.n8_adj_1147 ), .F1(\sample_position.n10_adj_1146 ));
  sample_position_SLICE_532 \sample_position.SLICE_532 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .C1(\sample_position.n4_adj_1150 ), 
    .A1(\sample_position.Accumulated_Frequency[2] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[0] ), 
    .C0(\sample_position.Accumulated_Frequency[1] ), 
    .B0(\sample_position.Accumulated_Frequency[0] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .F0(\sample_position.n4_adj_1150 ), .F1(\sample_position.n6_adj_1148 ));
  sample_position_SLICE_534 \sample_position.SLICE_534 ( .D1(reset_n_c), 
    .C1(\sample_position.n2_adj_1149 ), .B1(\SM_Sample_Position[0] ), 
    .A1(\SM_Sample_Position[2] ), .B0(Next_Sample), 
    .A0(\SM_Sample_Position[1] ), .F0(\sample_position.n2_adj_1149 ), 
    .F1(\sample_position.n6155 ));
  sample_position_SLICE_536 \sample_position.SLICE_536 ( 
    .D1(\SM_Sample_Position[2] ), .C1(o_Freq_Too_High_N_369), .B1(reset_n_c), 
    .A1(n9424), .D0(\sample_position.Accumulated_Frequency[14] ), 
    .C0(\sample_position.n4_adj_1151 ), 
    .B0(\sample_position.Accumulated_Frequency[13] ), 
    .A0(\sample_position.Accumulated_Frequency[15] ), 
    .F0(o_Freq_Too_High_N_369), .F1(n8783));
  sample_position_SLICE_538 \sample_position.SLICE_538 ( 
    .D1(\sample_position.n6_adj_1152 ), .C1(\sample_position.n8686 ), 
    .B1(\sample_position.Accumulated_Frequency[10] ), 
    .A1(\sample_position.Accumulated_Frequency[12] ), 
    .D0(\sample_position.Accumulated_Frequency[6] ), 
    .C0(\sample_position.n12_adj_1153 ), 
    .B0(\sample_position.Accumulated_Frequency[7] ), 
    .A0(\sample_position.Accumulated_Frequency[8] ), 
    .F0(\sample_position.n8686 ), .F1(\sample_position.n4_adj_1151 ));
  sample_position_SLICE_539 \sample_position.SLICE_539 ( 
    .B0(\sample_position.Accumulated_Frequency[11] ), 
    .A0(\sample_position.Accumulated_Frequency[9] ), 
    .F0(\sample_position.n6_adj_1152 ));
  sample_position_SLICE_541 \sample_position.SLICE_541 ( 
    .D1(\sample_position.Accumulated_Frequency[5] ), 
    .C1(\sample_position.n8_adj_1154 ), 
    .B1(\sample_position.Accumulated_Frequency[2] ), 
    .A1(\sample_position.Accumulated_Frequency[0] ), 
    .D0(\sample_position.Accumulated_Frequency[1] ), 
    .C0(\sample_position.Accumulated_Frequency[3] ), 
    .B0(\sample_position.Accumulated_Frequency[4] ), 
    .F0(\sample_position.n8_adj_1154 ), .F1(\sample_position.n12_adj_1153 ));
  sample_output_SLICE_542 \sample_output.SLICE_542 ( 
    .D1(\SM_Sample_Output[1] ), .C1(\sample_output.n55 ), .B1(DAC_Ready), 
    .A1(reset_n_c), .D0(\SM_Sample_Output[0] ), .B0(\SM_Sample_Output[2] ), 
    .F0(\sample_output.n55 ), .F1(n2792));
  sample_output_SLICE_543 \sample_output.SLICE_543 ( .B1(reset_n_c), 
    .D0(reset_n_c), .C0(DAC_Ready), .B0(\sample_output.n55 ), 
    .A0(\SM_Sample_Output[1] ), .F0(\sample_output.n6725 ), .F1(reset_n_N_191));
  sample_output_SLICE_544 \sample_output.SLICE_544 ( 
    .D1(\SM_Sample_Output[0] ), .C1(\sample_output.n6 ), 
    .B1(\SM_Sample_Output[2] ), .A1(reset_n_c), .D0(\SM_Sample_Output[1] ), 
    .C0(DAC_Ready), .A0(DAC_Send), .F0(\sample_output.n6 ), 
    .F1(\sample_output.n2982 ));
  sample_output_dac_SLICE_546 \sample_output.dac.SLICE_546 ( 
    .D1(Clock_Counter), .C1(\sample_output.dac.n9416 ), 
    .B1(\sample_output.dac.n9412 ), .A1(\sample_output.dac.n22 ), 
    .D0(\sample_output.dac.Current_Bit[4] ), 
    .B0(\sample_output.dac.Current_Bit[2] ), 
    .A0(\sample_output.dac.Current_Bit[1] ), .F0(\sample_output.dac.n9416 ), 
    .F1(o_DAC_SCK_c));
  sample_output_dac_SLICE_547 \sample_output.dac.SLICE_547 ( 
    .DI1(\SM_DAC_Out[1].sig_078.FeedThruLUT ), .C1(\SM_DAC_Out[1] ), 
    .D0(\SM_DAC_Out[1] ), .C0(\SM_DAC_Out[0] ), .B0(\SM_DAC_Out[3] ), 
    .A0(\SM_DAC_Out[2] ), .CE(n2079), .LSR(\sample_output.dac.n7252 ), 
    .CLK(Main_Clock), .Q1(\SM_DAC_Out[2] ), .F0(\sample_output.dac.n22 ), 
    .F1(\SM_DAC_Out[1].sig_078.FeedThruLUT ));
  sample_output_dac_SLICE_548 \sample_output.dac.SLICE_548 ( 
    .D1(\SM_DAC_Out[2] ), .C1(\sample_output.dac.n5966 ), .B1(\SM_DAC_Out[1] ), 
    .A1(\sample_output.dac.n5953 ), .D0(DAC_Send_adj_1184), 
    .A0(\SM_DAC_Out[0] ), .F0(\sample_output.dac.n5966 ), 
    .F1(\sample_output.dac.n2947 ));
  sample_output_dac_SLICE_550 \sample_output.dac.SLICE_550 ( .C0(n2079), 
    .B0(n2102), .F0(\sample_output.dac.n7252 ));
  SLICE_551 SLICE_551( .D1(Clock_Counter), .C1(n5544), .B1(n9408), 
    .A1(reset_n_c), .D0(DAC_Send_adj_1184), .C0(n2119), .B0(\SM_DAC_Out[1] ), 
    .A0(\SM_DAC_Out[0] ), .F0(n5544), .F1(n2079));
  sample_output_dac_SLICE_552 \sample_output.dac.SLICE_552 ( .D1(n9763), 
    .C1(n7446), .B1(n9408), .A1(\SM_DAC_Out[1] ), .D0(n2119), 
    .C0(\SM_DAC_Out[0] ), .F0(n7446), .F1(n9_adj_1185));
  sample_output_dac_SLICE_554 \sample_output.dac.SLICE_554 ( 
    .D1(\sample_output.dac.Current_Bit[3] ), .C1(\sample_output.dac.n6_c ), 
    .B1(\sample_output.dac.Current_Bit[1] ), 
    .A1(\sample_output.dac.Current_Bit[4] ), 
    .D0(\sample_output.dac.Current_Bit[2] ), 
    .B0(\sample_output.dac.Current_Bit[0] ), .F0(\sample_output.dac.n6_c ), 
    .F1(n2119));
  sample_output_dac_SLICE_556 \sample_output.dac.SLICE_556 ( 
    .D1(\sample_output.dac.n5953 ), .C1(\SM_DAC_Out[2] ), .B1(\SM_DAC_Out[0] ), 
    .A1(\SM_DAC_Out[1] ), .C0(reset_n_c), .B0(Clock_Counter), 
    .A0(\SM_DAC_Out[3] ), .F0(\sample_output.dac.n5953 ), .F1(n2086));
  sample_output_dac_SLICE_558 \sample_output.dac.SLICE_558 ( .D0(n2079), 
    .C0(n2102), .F0(\sample_output.dac.n6618 ));
  sample_output_dac_SLICE_559 \sample_output.dac.SLICE_559 ( .D1(n9408), 
    .C1(n5548), .B1(reset_n_c), .A1(Clock_Counter), .D0(\SM_DAC_Out[0] ), 
    .C0(n2119), .B0(DAC_Send_adj_1184), .A0(\SM_DAC_Out[1] ), .F0(n5548), 
    .F1(n2102));
  sample_output_dac_SLICE_560 \sample_output.dac.SLICE_560 ( 
    .D1(\SM_DAC_Out[2] ), .C1(\sample_output.dac.n9039 ), .B1(reset_n_c), 
    .A1(DAC_Send_adj_1184), .D0(Clock_Counter), .C0(\sample_output.dac.n24 ), 
    .B0(n2613), .A0(\SM_DAC_Out[0] ), .F0(\sample_output.dac.n9039 ), 
    .F1(\sample_output.dac.n6232 ));
  SLICE_562 SLICE_562( .D1(n9404), .C1(n16_adj_1188), .B1(reset_n_c), 
    .A1(\SM_Top[2] ), .D0(n31), .C0(\SM_Top[1] ), .B0(\SM_Top[3] ), 
    .A0(\SM_Top[0] ), .F0(n16_adj_1188), .F1(n8809));
  SLICE_563 SLICE_563( .D1(Sample_Ready), .C1(\SM_Top[3] ), .B1(\SM_Top[1] ), 
    .A1(\SM_Top[0] ), .D0(\SM_Top[3] ), .C0(\SM_Top[0] ), .A0(\SM_Top[1] ), 
    .F0(n9404), .F1(n31_adj_1186));
  SLICE_564 SLICE_564( .D1(n4_adj_1189), .C1(n9444), .B1(\SM_Top[0] ), 
    .A1(\SM_Top[2] ), .D0(\SM_Top[1] ), .C0(reset_n_c), .B0(\SM_Top[3] ), 
    .F0(n9444), .F1(n6206));
  SLICE_566 SLICE_566( .D1(\SM_Top[1] ), .C1(n9802), .B1(n10), 
    .A1(\SM_Top[0] ), .D0(n9021), .B0(\SM_Top[0] ), .A0(\SM_Top[1] ), 
    .F0(n6437), .F1(n9804));
  SLICE_568 SLICE_568( .D1(reset_n_c), .C1(n9770), .B1(n9771), 
    .A1(\SM_Top[2] ), .D0(n31), .C0(\SM_Top[3] ), .B0(\SM_Top[0] ), 
    .A0(\SM_Top[1] ), .F0(n9770), .F1(n6379));
  SLICE_572 SLICE_572( .D1(\SM_Top[3] ), .C1(n7462), .B1(reset_n_c), 
    .A1(\SM_Top[2] ), .C0(n31), .B0(\SM_Top[1] ), .A0(\SM_Top[0] ), .F0(n7462), 
    .F1(n6691));
  SLICE_574 SLICE_574( .D1(\Harmonic[5] ), .C1(n4_adj_1183), 
    .B1(Freq_Too_High), .A1(n6035), .D0(\Harmonic[3] ), .C0(\Harmonic[4] ), 
    .B0(\Harmonic[2] ), .A0(\Harmonic[1] ), .F0(n4_adj_1183), .F1(n10));
  SLICE_577 SLICE_577( .DI1(n8977), .D1(\SM_Scale_Mult[0] ), 
    .C1(o_Mult_Ready_N_781), .B1(Mult_Ready), .A1(Start_Mult_Scaler), 
    .C0(Comb_Muted), .A0(Mult_Ready), .CLK(Main_Clock), .Q1(Mult_Ready), 
    .F0(n9802), .F1(n8977));
  SLICE_579 SLICE_579( .D1(\SM_Top[3] ), .C1(\SM_Top[0] ), .B1(\SM_Top[1] ), 
    .D0(\SM_Top[0] ), .C0(\SM_Top[1] ), .A0(\SM_Top[3] ), .F0(n9771), 
    .F1(n9_adj_1190));
  SLICE_580 SLICE_580( .D1(\SM_Top[3] ), .C1(n9_adj_1181), .B1(reset_n_c), 
    .A1(\SM_Top[2] ), .D0(n31), .C0(\SM_Top[0] ), .A0(\SM_Top[1] ), 
    .F0(n9_adj_1181), .F1(n6880));
  SLICE_584 SLICE_584( .D1(n16_adj_1198), .C1(n17_adj_1197), 
    .B1(\Sample_Timer[4] ), .A1(\Sample_Timer[10] ), .D0(\Sample_Timer[15] ), 
    .C0(\Sample_Timer[12] ), .B0(\Sample_Timer[0] ), .A0(\Sample_Timer[1] ), 
    .F0(n17_adj_1197), .F1(n8718));
  SLICE_585 SLICE_585( .D0(\Sample_Timer[13] ), .C0(\Sample_Timer[14] ), 
    .B0(\Sample_Timer[11] ), .A0(\Sample_Timer[2] ), .F0(n16_adj_1198));
  SLICE_586 SLICE_586( .D1(\SM_Top[0] ), .C1(\SM_Top[2] ), .D0(n9418), 
    .C0(\SM_Top[0] ), .B0(reset_n_c), .A0(n9406), .F0(n9060), .F1(n9758));
  SLICE_588 SLICE_588( .D1(n9444), .C1(n4_adj_1187), .B1(\SM_Top[0] ), 
    .A1(\SM_Top[2] ), .D0(Sample_Ready), .A0(\Harmonic[0] ), .F0(n4_adj_1187), 
    .F1(n6436));
  adc_SLICE_590 \adc.SLICE_590 ( .D1(\adc.CS_State_N_587 ), 
    .C1(\adc.CS_Stable_N_597 ), .B1(i_ADC_Clock_c), .A1(\adc.Clock_State ), 
    .D0(\adc.Data_State ), .B0(i_ADC_Data_c), .F0(\adc.CS_Stable_N_597 ), 
    .F1(\adc.n6692 ));
  adc_SLICE_592 \adc.SLICE_592 ( .D1(\adc.n6084 ), .C1(\adc.Receive_Bit[2] ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[2] ), .C0(\adc.n6084 ), .B0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n6087 ), .F1(\adc.n6088 ));
  adc_SLICE_593 \adc.SLICE_593 ( .D1(CS_Stable), .C1(\adc.n12 ), 
    .A1(SM_ADC_In), .D0(\adc.Receive_Bit[3] ), .C0(\adc.Receive_Byte[1]_2 ), 
    .B0(\Receive_Byte[0] ), .A0(\adc.Receive_Byte[2]_2 ), .F0(\adc.n12 ), 
    .F1(\adc.n6084 ));
  adc_SLICE_594 \adc.SLICE_594 ( .D1(\adc.Receive_Bit[0] ), 
    .C1(\adc.Receive_Bit[2] ), .B1(\adc.n6090 ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[1] ), .C0(\adc.n6090 ), .B0(\adc.Receive_Bit[2] ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n6093 ), .F1(\adc.n6095 ));
  adc_SLICE_595 \adc.SLICE_595 ( .D1(CS_Stable), .C1(\adc.n12_adj_1082 ), 
    .A1(SM_ADC_In), .D0(\Receive_Byte[0] ), .C0(\adc.Receive_Byte[1]_2 ), 
    .B0(\adc.Receive_Byte[2]_2 ), .A0(\adc.Receive_Bit[3] ), 
    .F0(\adc.n12_adj_1082 ), .F1(\adc.n6090 ));
  adc_SLICE_596 \adc.SLICE_596 ( .D1(\adc.Receive_Bit[2] ), 
    .C1(\adc.Receive_Bit[1] ), .B1(\adc.n6096 ), .A1(\adc.Receive_Bit[0] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n6096 ), .B0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[2] ), .F0(\adc.n6099 ), .F1(\adc.n6101 ));
  adc_SLICE_597 \adc.SLICE_597 ( .C1(\adc.n12_adj_1085 ), .B1(CS_Stable), 
    .A1(SM_ADC_In), .D0(\adc.Receive_Byte[2]_2 ), .C0(\adc.Receive_Byte[1]_2 ), 
    .B0(\adc.Receive_Bit[3] ), .A0(\Receive_Byte[0] ), .F0(\adc.n12_adj_1085 ), 
    .F1(\adc.n6096 ));
  adc_SLICE_598 \adc.SLICE_598 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n8 ), 
    .B1(CS_Stable), .A1(SM_ADC_In), .D0(\adc.Receive_Bit[2] ), 
    .B0(\adc.Receive_Bit[1] ), .F0(\adc.n8 ), .F1(\adc.n6041 ));
  adc_SLICE_600 \adc.SLICE_600 ( .D1(\adc.Receive_Bit[2] ), .C1(\adc.n6056 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[2] ), .C0(\adc.n6056 ), .B0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n6061 ), .F1(\adc.n6062 ));
  adc_SLICE_601 \adc.SLICE_601 ( .D1(CS_Stable), .C1(\adc.n12_adj_1081 ), 
    .A1(SM_ADC_In), .D0(\adc.Receive_Byte[1]_2 ), .C0(\adc.Receive_Bit[3] ), 
    .B0(\Receive_Byte[0] ), .A0(\adc.Receive_Byte[2]_2 ), 
    .F0(\adc.n12_adj_1081 ), .F1(\adc.n6056 ));
  adc_SLICE_602 \adc.SLICE_602 ( .D1(\adc.Receive_Bit[0] ), 
    .C1(\adc.Receive_Bit[2] ), .B1(\adc.n6090 ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[2] ), .C0(\adc.n6063 ), .B0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n6065 ), .F1(\adc.n6094 ));
  adc_SLICE_603 \adc.SLICE_603 ( .D1(SM_ADC_In), .C1(\adc.n12_adj_1083 ), 
    .B1(CS_Stable), .D0(\adc.Receive_Byte[2]_2 ), .C0(\adc.Receive_Byte[1]_2 ), 
    .B0(\Receive_Byte[0] ), .A0(\adc.Receive_Bit[3] ), .F0(\adc.n12_adj_1083 ), 
    .F1(\adc.n6063 ));
  adc_SLICE_604 \adc.SLICE_604 ( .D0(\adc.n6041 ), .A0(\adc.n12_adj_1082 ), 
    .F0(\adc.n6042 ));
  adc_SLICE_606 \adc.SLICE_606 ( .D1(SM_ADC_In), .C1(\adc.n12_adj_1084 ), 
    .A1(CS_Stable), .D0(\adc.Receive_Bit[3] ), .C0(\Receive_Byte[0] ), 
    .B0(\adc.Receive_Byte[1]_2 ), .A0(\adc.Receive_Byte[2]_2 ), 
    .F0(\adc.n12_adj_1084 ), .F1(\adc.n6070 ));
  adc_SLICE_607 \adc.SLICE_607 ( .D1(\adc.Receive_Bit[1] ), 
    .C1(\adc.Receive_Bit[0] ), .B1(\adc.n6056 ), .A1(\adc.Receive_Bit[2] ), 
    .D0(\adc.Receive_Bit[2] ), .C0(\adc.n6070 ), .B0(\adc.Receive_Bit[0] ), 
    .A0(\adc.Receive_Bit[1] ), .F0(\adc.n6073 ), .F1(\adc.n6058 ));
  adc_SLICE_608 \adc.SLICE_608 ( .C1(\adc.n12_adj_1086 ), .B1(CS_Stable), 
    .A1(SM_ADC_In), .D0(\adc.Receive_Bit[3] ), .C0(\adc.Receive_Byte[1]_2 ), 
    .B0(\Receive_Byte[0] ), .A0(\adc.Receive_Byte[2]_2 ), 
    .F0(\adc.n12_adj_1086 ), .F1(\adc.n6102 ));
  adc_SLICE_609 \adc.SLICE_609 ( .D1(\adc.Receive_Bit[1] ), 
    .C1(\adc.Receive_Bit[0] ), .B1(\adc.n6096 ), .A1(\adc.Receive_Bit[2] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n6102 ), .B0(\adc.Receive_Bit[2] ), 
    .A0(\adc.Receive_Bit[1] ), .F0(\adc.n6105 ), .F1(\adc.n6100 ));
  adc_SLICE_611 \adc.SLICE_611 ( .D1(\adc.n12_adj_1085 ), .C1(CS_Stable), 
    .B1(\adc.n7279 ), .A1(SM_ADC_In), .D0(\adc.n12 ), .C0(\adc.n7279 ), 
    .B0(SM_ADC_In), .A0(CS_Stable), .F0(\adc.n6079 ), .F1(\adc.n6082 ));
  adc_SLICE_612 \adc.SLICE_612 ( .C1(\adc.n7279 ), .B1(CS_Stable), 
    .A1(SM_ADC_In), .D0(\adc.Receive_Bit[2] ), .C0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n7279 ), .F1(\adc.n6077 ));
  adc_SLICE_614 \adc.SLICE_614 ( .D1(\Receive_Byte[0] ), .C1(\adc.n11 ), 
    .B1(\adc.n6077 ), .A1(\adc.Receive_Bit[3] ), .D0(\adc.Receive_Byte[2]_2 ), 
    .A0(\adc.Receive_Byte[1]_2 ), .F0(\adc.n11 ), .F1(\adc.n8698 ));
  adc_SLICE_617 \adc.SLICE_617 ( .D1(CS_Stable), .C1(\adc.n7279 ), 
    .B1(\adc.n12_adj_1086 ), .A1(SM_ADC_In), .D0(SM_ADC_In), .C0(CS_Stable), 
    .B0(\adc.n7279 ), .A0(\adc.n12_adj_1084 ), .F0(\adc.n6076 ), 
    .F1(\adc.n6083 ));
  adc_SLICE_618 \adc.SLICE_618 ( .C1(\adc.n6041 ), .A1(\adc.n12_adj_1083 ), 
    .D0(\adc.n6041 ), .B0(\adc.n12_adj_1085 ), .F0(\adc.n6047 ), 
    .F1(\adc.n6044 ));
  adc_SLICE_620 \adc.SLICE_620 ( .D1(CS_Stable), 
    .C1(\adc.o_Data_Received_N_578 ), .A1(SM_ADC_In), 
    .D0(\adc.Receive_Bit[1] ), .C0(\adc.Receive_Bit[2] ), 
    .B0(\adc.Receive_Bit[3] ), .A0(\adc.Receive_Bit[0] ), 
    .F0(\adc.o_Data_Received_N_578 ), .F1(n6171));
  adc_SLICE_622 \adc.SLICE_622 ( .DI1(\adc.n370[3] ), 
    .D1(\adc.Receive_Bit[0] ), .C1(\adc.Receive_Bit[2] ), 
    .B1(\adc.Receive_Bit[1] ), .A1(\adc.Receive_Bit[3] ), 
    .D0(\adc.Receive_Bit[3] ), .C0(\adc.n6077 ), .B0(\adc.n11_adj_1087 ), 
    .A0(\Receive_Byte[0] ), .CE(\adc.n2964 ), .LSR(\adc.n6700 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\adc.Receive_Bit[3] ), .F0(\adc.n8696 ), 
    .F1(\adc.n370[3] ));
  adc_SLICE_623 \adc.SLICE_623 ( .DI1(\adc.n377[1] ), 
    .D1(\adc.Receive_Byte[1]_2 ), .C1(\Receive_Byte[0] ), 
    .C0(\adc.Receive_Byte[2]_2 ), .A0(\adc.Receive_Byte[1]_2 ), .CE(n6171), 
    .LSR(n6689), .CLK(\adc.Clock_Stable ), .Q1(\adc.Receive_Byte[1]_2 ), 
    .F0(\adc.n11_adj_1087 ), .F1(\adc.n377[1] ));
  adc_SLICE_624 \adc.SLICE_624 ( .D1(\adc.n12 ), .C1(\adc.n9 ), .B1(SM_ADC_In), 
    .A1(CS_Stable), .D0(\adc.Receive_Bit[2] ), .C0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n9 ), .F1(\adc.n6053 ));
  adc_SLICE_626 \adc.SLICE_626 ( .D1(reset_n_c), .C1(\adc.n9420 ), 
    .D0(\adc.Count_Stable[1] ), .C0(\adc.n6692 ), .B0(\adc.Count_Stable[0] ), 
    .A0(\adc.Count_Stable[2] ), .F0(\adc.n9420 ), .F1(\adc.n9452 ));
  adc_SLICE_628 \adc.SLICE_628 ( .D1(SM_ADC_In), .C1(\adc.n12_adj_1081 ), 
    .B1(CS_Stable), .A1(\adc.n7279 ), .D0(\adc.n9 ), .C0(SM_ADC_In), 
    .B0(\adc.n12_adj_1081 ), .A0(CS_Stable), .F0(\adc.n6052 ), 
    .F1(\adc.n6059 ));
  adc_SLICE_630 \adc.SLICE_630 ( .D1(\adc.n12_adj_1081 ), .B1(\adc.n6041 ), 
    .C0(\adc.n6041 ), .A0(\adc.n12_adj_1086 ), .F0(\adc.n6048 ), 
    .F1(\adc.n6043 ));
  adc_SLICE_632 \adc.SLICE_632 ( .D1(CS_Stable), .C1(\adc.n7279 ), 
    .B1(SM_ADC_In), .A1(\adc.n12_adj_1083 ), .D0(\adc.n12_adj_1083 ), 
    .C0(SM_ADC_In), .B0(\adc.n9 ), .A0(CS_Stable), .F0(\adc.n4586 ), 
    .F1(\adc.n6069 ));
  adc_SLICE_634 \adc.SLICE_634 ( .D1(\adc.o_Data_Received_N_578 ), 
    .C1(\adc.n7 ), .B1(CS_Stable), .A1(SM_ADC_In), 
    .D0(\adc.Receive_Byte[3]_2 ), .C0(\adc.Receive_Byte[1]_2 ), 
    .B0(\Receive_Byte[0] ), .A0(\adc.Receive_Byte[2]_2 ), .F0(\adc.n7 ), 
    .F1(\adc.n6700 ));
  adc_SLICE_635 \adc.SLICE_635 ( .DI1(\adc.n2 ), 
    .D1(\adc.o_Data_Received_N_578 ), .C1(SM_ADC_In), .B1(\adc.n7 ), 
    .D0(SM_ADC_In), .C0(\adc.n7 ), .B0(CS_Stable), 
    .A0(\adc.o_Data_Received_N_578 ), .LSR(CS_Stable), 
    .CLK(\adc.Clock_Stable ), .Q1(SM_ADC_In), .F0(n6689), .F1(\adc.n2 ));
  mult_SLICE_636 \mult.SLICE_636 ( .D1(\Comb_Interval[0] ), .C1(\mult.n14 ), 
    .B1(\Comb_Interval[6] ), .A1(\mult.n10_adj_1078 ), .D0(\Comb_Interval[5] ), 
    .C0(\Comb_Interval[3] ), .B0(\Comb_Interval[7] ), .A0(\Comb_Interval[1] ), 
    .F0(\mult.n14 ), .F1(\mult.n15 ));
  mult_SLICE_637 \mult.SLICE_637 ( .D1(\mult.Comb_Counter[2] ), 
    .C1(\Comb_Interval[2] ), .B1(\Comb_Interval[4] ), 
    .A1(\mult.Comb_Counter[4] ), .D0(\Comb_Interval[2] ), 
    .C0(\Comb_Interval[4] ), .F0(\mult.n10_adj_1078 ), 
    .F1(\mult.n10_adj_1080 ));
  mult_SLICE_638 \mult.SLICE_638 ( .D1(\mult.n12 ), .C1(\mult.n9_adj_1079 ), 
    .B1(\mult.n11 ), .A1(\mult.n10_adj_1080 ), .D0(\Comb_Interval[0] ), 
    .C0(\Comb_Interval[6] ), .B0(\mult.Comb_Counter[6] ), 
    .A0(\mult.Comb_Counter[0] ), .F0(\mult.n9_adj_1079 ), .F1(\mult.n8704 ));
  mult_SLICE_639 \mult.SLICE_639 ( .D0(\Comb_Interval[7] ), 
    .C0(\mult.Comb_Counter[1] ), .B0(\Comb_Interval[1] ), 
    .A0(\mult.Comb_Counter[7] ), .F0(\mult.n12 ));
  sample_position_SLICE_640 \sample_position.SLICE_640 ( 
    .D1(\SM_Sample_Position[2] ), .C1(reset_n_c), .B1(\SM_Sample_Position[1] ), 
    .A1(\sample_position.n9071 ), .D0(reset_n_c), .C0(\SM_Sample_Position[2] ), 
    .B0(\sample_position.n9071 ), .A0(\SM_Sample_Position[1] ), 
    .F0(\sample_position.n8997 ), .F1(\sample_position.n8939 ));
  sample_position_SLICE_642 \sample_position.SLICE_642 ( 
    .D1(\SM_Sample_Position[0] ), .C1(reset_n_c), .B1(\SM_Sample_Position[1] ), 
    .D0(reset_n_c), .C0(\SM_Sample_Position[1] ), .B0(\SM_Sample_Position[2] ), 
    .A0(\SM_Sample_Position[0] ), .F0(\sample_position.n6635 ), 
    .F1(\sample_position.n6321 ));
  sample_position_SLICE_643 \sample_position.SLICE_643 ( 
    .D1(\SM_Sample_Position[0] ), .C1(\SM_Sample_Position[2] ), 
    .B1(\SM_Sample_Position[1] ), .A1(reset_n_c), .D0(\SM_Sample_Position[2] ), 
    .C0(\SM_Sample_Position[1] ), .B0(reset_n_c), .A0(\SM_Sample_Position[0] ), 
    .F0(\sample_position.n6564 ), .F1(n7));
  sample_position_SLICE_645 \sample_position.SLICE_645 ( 
    .D1(\SM_Sample_Position[1] ), .C1(\SM_Sample_Position[2] ), 
    .B1(\SM_Sample_Position[0] ), .A1(reset_n_c), .D0(reset_n_c), 
    .C0(\SM_Sample_Position[1] ), .B0(\SM_Sample_Position[2] ), 
    .A0(\SM_Sample_Position[0] ), .F0(\sample_position.n7_c ), .F1(n6895));
  SLICE_647 SLICE_647( .DI1(\SM_Sample_Position[0].sig_043.FeedThruLUT ), 
    .B1(\SM_Sample_Position[0] ), .D0(\SM_Sample_Position[2] ), 
    .C0(\SM_Sample_Position[1] ), .B0(reset_n_c), .A0(\SM_Sample_Position[0] ), 
    .CE(\sample_position.n6153 ), .LSR(\sample_position.n8997 ), 
    .CLK(Main_Clock), .Q1(\SM_Sample_Position[2] ), .F0(n6870), 
    .F1(\SM_Sample_Position[0].sig_043.FeedThruLUT ));
  adc_SLICE_648 \adc.SLICE_648 ( .D1(\adc.Receive_Bit[2] ), .C1(\adc.n6070 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[1] ), .C0(\adc.Receive_Bit[0] ), .B0(\adc.n6070 ), 
    .A0(\adc.Receive_Bit[2] ), .F0(\adc.n6072 ), .F1(\adc.n6074 ));
  adc_SLICE_649 \adc.SLICE_649 ( .D1(\adc.Receive_Bit[2] ), 
    .C1(\adc.Receive_Bit[1] ), .B1(\adc.n6070 ), .A1(\adc.Receive_Bit[0] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.Receive_Bit[2] ), 
    .B0(\adc.Receive_Bit[1] ), .A0(\adc.n6070 ), .F0(\adc.n6071 ), 
    .F1(\adc.n6075 ));
  adc_SLICE_654 \adc.SLICE_654 ( .D1(\adc.Receive_Bit[1] ), .C1(\adc.n6102 ), 
    .B1(\adc.Receive_Bit[2] ), .A1(\adc.Receive_Bit[0] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.Receive_Bit[1] ), .B0(\adc.n6102 ), 
    .A0(\adc.Receive_Bit[2] ), .F0(\adc.n6106 ), .F1(\adc.n6107 ));
  adc_SLICE_657 \adc.SLICE_657 ( .D1(\adc.Receive_Bit[2] ), 
    .C1(\adc.Receive_Bit[0] ), .B1(\adc.n6084 ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.Receive_Bit[2] ), 
    .B0(\adc.Receive_Bit[1] ), .A0(\adc.n6084 ), .F0(\adc.n6085 ), 
    .F1(\adc.n6086 ));
  adc_SLICE_659 \adc.SLICE_659 ( .D1(\adc.Receive_Bit[2] ), 
    .C1(\adc.Receive_Bit[0] ), .B1(\adc.n6056 ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n6056 ), .B0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[2] ), .F0(\adc.n6060 ), .F1(\adc.n6057 ));
  adc_SLICE_660 \adc.SLICE_660 ( .D1(\adc.Receive_Bit[0] ), 
    .C1(\adc.Receive_Bit[2] ), .B1(\adc.n6102 ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[2] ), .C0(\adc.n6102 ), .B0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n6104 ), .F1(\adc.n6103 ));
  adc_SLICE_662 \adc.SLICE_662 ( .D1(\adc.n6096 ), .C1(\adc.Receive_Bit[0] ), 
    .B1(\adc.Receive_Bit[2] ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.Receive_Bit[2] ), 
    .B0(\adc.Receive_Bit[1] ), .A0(\adc.n6096 ), .F0(\adc.n6098 ), 
    .F1(\adc.n6097 ));
  adc_SLICE_664 \adc.SLICE_664 ( .D1(\adc.Receive_Bit[2] ), 
    .C1(\adc.Receive_Bit[0] ), .B1(\adc.n6090 ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.Receive_Bit[2] ), 
    .B0(\adc.Receive_Bit[1] ), .A0(\adc.n6090 ), .F0(\adc.n6092 ), 
    .F1(\adc.n6091 ));
  adc_SLICE_668 \adc.SLICE_668 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n6063 ), 
    .B1(\adc.Receive_Bit[2] ), .A1(\adc.Receive_Bit[1] ), 
    .D0(\adc.Receive_Bit[1] ), .C0(\adc.Receive_Bit[2] ), .B0(\adc.n6063 ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n6068 ), .F1(\adc.n6066 ));
  adc_SLICE_670 \adc.SLICE_670 ( .D1(\adc.Receive_Bit[2] ), 
    .C1(\adc.Receive_Bit[1] ), .B1(\adc.Receive_Bit[0] ), .A1(\adc.n6063 ), 
    .D0(\adc.Receive_Bit[1] ), .C0(\adc.Receive_Bit[2] ), .B0(\adc.n6063 ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n6067 ), .F1(\adc.n6064 ));
  adc_SLICE_675 \adc.SLICE_675 ( .DI1(\adc.n1 ), .C1(\adc.Receive_Bit[0] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n6084 ), .B0(\adc.Receive_Bit[1] ), 
    .A0(\adc.Receive_Bit[2] ), .CE(\adc.n2964 ), .LSR(\adc.n7230 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\adc.Receive_Bit[0] ), .F0(\adc.n6089 ), 
    .F1(\adc.n1 ));
  mult_SLICE_676 \mult.SLICE_676 ( .D1(Reset_Mult_Scaler), 
    .C1(Start_Mult_Scaler), .B1(\SM_Scale_Mult[0] ), 
    .A1(\mult.SM_Scale_Mult[1] ), .D0(\mult.SM_Scale_Mult[1] ), 
    .C0(\SM_Scale_Mult[0] ), .B0(Start_Mult_Scaler), .A0(Reset_Mult_Scaler), 
    .F0(\mult.n6350 ), .F1(\mult.n6164 ));
  sample_output_SLICE_678 \sample_output.SLICE_678 ( 
    .DI1(\sample_output.n2807 ), .B1(\SM_Sample_Output[1] ), 
    .A1(\SM_Sample_Output[0] ), .D0(DAC_Ready), .C0(\SM_Sample_Output[1] ), 
    .B0(\SM_Sample_Output[0] ), .A0(\SM_Sample_Output[2] ), .CE(n6956), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(\SM_Sample_Output[2] ), 
    .F0(n2759), .F1(\sample_output.n2807 ));
  SLICE_679 SLICE_679( .DI1(\SM_Top[3].sig_030.FeedThruLUT ), .B1(\SM_Top[3] ), 
    .D0(\SM_Sample_Output[0] ), .C0(\SM_Sample_Output[1] ), .B0(DAC_Send), 
    .A0(DAC_Ready), .CE(n9450), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(DAC_Send), .F0(n9029), .F1(\SM_Top[3].sig_030.FeedThruLUT ));
  SLICE_684 SLICE_684( .DI1(\SM_Top_3__N_121[1] ), .D1(n9), .C1(n9007), 
    .B1(\SM_Top[3] ), .A1(\SM_Top[1] ), .D0(\SM_Top[2] ), .B0(\SM_Top[0] ), 
    .A0(\SM_Top[1] ), .CE(n9070), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(\SM_Top[1] ), .F0(n9007), .F1(\SM_Top_3__N_121[1] ));
  SLICE_685 SLICE_685( .DI1(\SM_Top_3__N_121[2] ), .D1(\SM_Top[3] ), 
    .C1(n7460), .B1(n9804), .A1(\SM_Top[2] ), .C0(\SM_Top[1] ), 
    .B0(\SM_Top[2] ), .A0(\SM_Top[0] ), .CE(n9069), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(\SM_Top[2] ), .F0(n7460), .F1(\SM_Top_3__N_121[2] ));
  SLICE_686 SLICE_686( .D1(Comb_Muted), .C1(\SM_Top[1] ), .A1(\SM_Top[0] ), 
    .D0(\SM_Top[1] ), .C0(n10), .B0(\SM_Top[0] ), .A0(Comb_Muted), .F0(n9767), 
    .F1(n10_adj_1192));
  adc_SLICE_688 \adc.SLICE_688 ( .D1(CS_Stable), .C1(\adc.n9 ), 
    .B1(\adc.n12_adj_1086 ), .A1(SM_ADC_In), .D0(SM_ADC_In), .C0(CS_Stable), 
    .B0(\adc.n9 ), .A0(\adc.n12_adj_1084 ), .F0(\adc.n6051 ), .F1(\adc.n6050 ));
  adc_SLICE_690 \adc.SLICE_690 ( .D1(CS_Stable), .C1(\adc.n9 ), .B1(SM_ADC_In), 
    .A1(\adc.n12_adj_1085 ), .D0(CS_Stable), .C0(SM_ADC_In), .B0(\adc.n9 ), 
    .A0(\adc.n12_adj_1082 ), .F0(\adc.n6054 ), .F1(\adc.n6055 ));
  adc_SLICE_691 \adc.SLICE_691 ( .B1(CS_Stable), .D0(\adc.n7279 ), 
    .C0(CS_Stable), .B0(\adc.n12_adj_1082 ), .A0(SM_ADC_In), .F0(\adc.n6081 ), 
    .F1(\adc.n2964 ));
  SLICE_696 SLICE_696( .D0(\Sample_Timer[7] ), .C0(\Sample_Timer[9] ), 
    .B0(\Sample_Timer[8] ), .A0(\Sample_Timer[6] ), .F0(n9442));
  SLICE_698 SLICE_698( .D0(\Harmonic[7] ), .C0(\Harmonic[6] ), .F0(n6035));
  SLICE_699 SLICE_699( .DI1(\mult.SM_Scale_Mult[1].sig_204.FeedThruLUT ), 
    .B1(\mult.SM_Scale_Mult[1] ), .D0(n10), .B0(\SM_Top[0] ), .A0(Comb_Muted), 
    .CE(\mult.n6164 ), .LSR(Reset_Mult_Scaler), .CLK(Main_Clock), 
    .Q1(Comb_Muted), .F0(n9), .F1(\mult.SM_Scale_Mult[1].sig_204.FeedThruLUT ));
  adc_SLICE_700 \adc.SLICE_700 ( .D0(\adc.i_ADC_CS_c ), .A0(\adc.CS_State ), 
    .F0(\adc.CS_State_N_587 ));
  adc_SLICE_701 \adc.SLICE_701 ( .D1(reset_n_c), .B1(\SM_Adder[0] ), 
    .C0(reset_n_c), .B0(\adc.n6692 ), .F0(\adc.n6788 ), .F1(n2972));
  adc_SLICE_705 \adc.SLICE_705 ( .D1(\adc.n6041 ), .A1(\adc.n12_adj_1084 ), 
    .D0(\adc.n12 ), .A0(\adc.n6041 ), .F0(\adc.n6046 ), .F1(\adc.n6045 ));
  SLICE_706 SLICE_706( .F0(VCC_net));
  SLICE_707 SLICE_707( .DI1(\mult.o_Mult_8__N_740[8] ), .D1(Reset_Mult_Scaler), 
    .C1(\mult.cout ), .B1(\Scale_Initial[8] ), .A1(\mult.n57[9] ), 
    .C0(Reset_Mult_Scaler), .A0(\SM_Scale_Mult[0] ), .CE(\mult.n6420 ), 
    .CLK(Main_Clock), .Q1(\Adder_Mult[8] ), .F0(n6921), 
    .F1(\mult.o_Mult_8__N_740[8] ));
  SLICE_709 SLICE_709( .DI1(\SM_Top_3__N_121[0] ), .D1(\SM_Top[2] ), 
    .C1(n9390), .B1(\SM_Top[3] ), .A1(n9767), .B0(\SM_Top[0] ), 
    .A0(Sample_Ready), .CE(n14_adj_1162), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(\SM_Top[0] ), .F0(n9390), .F1(\SM_Top_3__N_121[0] ));
  sample_position_SLICE_710 \sample_position.SLICE_710 ( 
    .C1(\sample_position.Accumulated_Offset[0] ), .B1(\Frequency[0] ), 
    .A1(\SM_Sample_Position[2] ), .D0(\sample_position.Accumulated_Offset[3] ), 
    .B0(\SM_Sample_Position[2] ), .A0(\Frequency[3] ), 
    .F0(\sample_position.n7742 ), .F1(\sample_position.n7748 ));
  sample_position_SLICE_711 \sample_position.SLICE_711 ( 
    .C1(\SM_Sample_Position[2] ), .B1(\Frequency[11] ), 
    .A1(\sample_position.Accumulated_Offset[11] ), 
    .D0(\sample_position.Accumulated_Offset[4] ), .B0(\SM_Sample_Position[2] ), 
    .A0(\Frequency[4] ), .F0(\sample_position.n7740 ), 
    .F1(\sample_position.n7726 ));
  sample_position_SLICE_712 \sample_position.SLICE_712 ( 
    .C1(\SM_Sample_Position[2] ), 
    .B1(\sample_position.Accumulated_Offset[12] ), .A1(\Frequency[12] ), 
    .D0(\sample_position.Accumulated_Offset[1] ), .B0(\SM_Sample_Position[2] ), 
    .A0(\Frequency[1] ), .F0(\sample_position.n7746 ), 
    .F1(\sample_position.n7724 ));
  sample_position_SLICE_713 \sample_position.SLICE_713 ( 
    .D1(\sample_position.Accumulated_Offset[8] ), .C1(\SM_Sample_Position[2] ), 
    .A1(\Frequency[8] ), .D0(\SM_Sample_Position[2] ), 
    .C0(\sample_position.Accumulated_Offset[15] ), .B0(\Frequency[15] ), 
    .F0(\sample_position.n7718 ), .F1(\sample_position.n7732 ));
  sample_position_SLICE_714 \sample_position.SLICE_714 ( .D1(\Frequency[9] ), 
    .C1(\SM_Sample_Position[2] ), .B1(\sample_position.Accumulated_Offset[9] ), 
    .D0(\sample_position.Accumulated_Offset[2] ), .B0(\SM_Sample_Position[2] ), 
    .A0(\Frequency[2] ), .F0(\sample_position.n7744 ), 
    .F1(\sample_position.n7730 ));
  sample_position_SLICE_715 \sample_position.SLICE_715 ( 
    .D1(\sample_position.Accumulated_Offset[10] ), .C1(\Frequency[10] ), 
    .B1(\SM_Sample_Position[2] ), .D0(\Frequency[13] ), 
    .C0(\SM_Sample_Position[2] ), 
    .B0(\sample_position.Accumulated_Offset[13] ), 
    .F0(\sample_position.n7722 ), .F1(\sample_position.n7728 ));
  sample_position_SLICE_717 \sample_position.SLICE_717 ( .D1(\Frequency[5] ), 
    .C1(\sample_position.Accumulated_Offset[5] ), .A1(\SM_Sample_Position[2] ), 
    .D0(\sample_position.Accumulated_Frequency[7] ), 
    .C0(\sample_position.n5941 ), .B0(\SM_Sample_Position[2] ), 
    .F0(\sample_position.n7735 ), .F1(\sample_position.n7738 ));
  sample_position_SLICE_718 \sample_position.SLICE_718 ( .D1(\Frequency[6] ), 
    .C1(\sample_position.Accumulated_Offset[6] ), .B1(\SM_Sample_Position[2] ), 
    .D0(\sample_position.Accumulated_Offset[14] ), .C0(\Frequency[14] ), 
    .A0(\SM_Sample_Position[2] ), .F0(\sample_position.n7720 ), 
    .F1(\sample_position.n7736 ));
  sample_position_SLICE_719 \sample_position.SLICE_719 ( 
    .D1(\sample_position.Accumulated_Frequency[5] ), 
    .C1(\sample_position.n5941 ), .A1(\SM_Sample_Position[2] ), 
    .D0(\sample_position.n5941 ), 
    .C0(\sample_position.Accumulated_Frequency[10] ), 
    .B0(\SM_Sample_Position[2] ), .F0(\sample_position.n7729 ), 
    .F1(\sample_position.n7739 ));
  sample_position_SLICE_720 \sample_position.SLICE_720 ( 
    .DI1(\sample_position.n87_adj_1156[0].sig_206.FeedThruLUT ), 
    .D1(\sample_position.n87_adj_1156[0] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[0] ), 
    .CE(\sample_position.n5941 ), .LSR(\sample_position.n7_c ), 
    .CLK(Main_Clock), .Q1(\sample_position.Accumulated_Freq_Offset[0] ), 
    .F0(\sample_position.n1[0] ), 
    .F1(\sample_position.n87_adj_1156[0].sig_206.FeedThruLUT ));
  sample_position_SLICE_721 \sample_position.SLICE_721 ( 
    .D1(\sample_position.Accumulated_Frequency[11] ), 
    .B1(\sample_position.n5941 ), .A1(\SM_Sample_Position[2] ), 
    .D0(\sample_position.Accumulated_Frequency[9] ), 
    .C0(\sample_position.n5941 ), .B0(\SM_Sample_Position[2] ), 
    .F0(\sample_position.n7731 ), .F1(\sample_position.n7727 ));
  sample_position_SLICE_722 \sample_position.SLICE_722 ( 
    .D1(\sample_position.Accumulated_Frequency[4] ), 
    .C1(\sample_position.n5941 ), .A1(\SM_Sample_Position[2] ), 
    .D0(\SM_Sample_Position[2] ), .B0(\sample_position.n5941 ), 
    .A0(\sample_position.Accumulated_Frequency[12] ), 
    .F0(\sample_position.n7725 ), .F1(\sample_position.n7741 ));
  sample_position_SLICE_725 \sample_position.SLICE_725 ( .D1(Next_Sample), 
    .C1(\Freq_Scale[3] ), .C0(\Freq_Scale[15] ), .A0(Next_Sample), 
    .F0(\sample_position.n2222[15] ), .F1(\sample_position.n2222[3] ));
  sample_position_SLICE_726 \sample_position.SLICE_726 ( .D1(Next_Sample), 
    .B1(\Freq_Scale[1] ), .C0(\Freq_Scale[13] ), .A0(Next_Sample), 
    .F0(\sample_position.n2222[13] ), .F1(\sample_position.n2222[1] ));
  sample_position_SLICE_727 \sample_position.SLICE_727 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[3] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .F0(\sample_position.n1[7] ), .F1(\sample_position.n1[3] ));
  sample_position_SLICE_728 \sample_position.SLICE_728 ( .D1(Next_Sample), 
    .B1(\Freq_Scale[2] ), .C0(\Freq_Scale[14] ), .A0(Next_Sample), 
    .F0(\sample_position.n2222[14] ), .F1(\sample_position.n2222[2] ));
  sample_position_SLICE_729 \sample_position.SLICE_729 ( .C1(\Freq_Scale[9] ), 
    .B1(Next_Sample), .C0(\Freq_Scale[11] ), .A0(Next_Sample), 
    .F0(\sample_position.n2222[11] ), .F1(\sample_position.n2222[9] ));
  sample_position_SLICE_730 \sample_position.SLICE_730 ( .C0(\Freq_Scale[12] ), 
    .A0(Next_Sample), .F0(\sample_position.n2222[12] ));
  sample_position_SLICE_732 \sample_position.SLICE_732 ( 
    .C1(\sample_position.Accumulated_Frequency[1] ), 
    .B1(\SM_Sample_Position[2] ), .A1(\sample_position.n5941 ), 
    .D0(\sample_position.n5941 ), .C0(\SM_Sample_Position[2] ), 
    .A0(\sample_position.Accumulated_Frequency[14] ), 
    .F0(\sample_position.n7721 ), .F1(\sample_position.n7747 ));
  sample_position_SLICE_733 \sample_position.SLICE_733 ( 
    .D1(\sample_position.n5941 ), 
    .C1(\sample_position.Accumulated_Frequency[3] ), 
    .A1(\SM_Sample_Position[2] ), .D0(\SM_Sample_Position[2] ), 
    .B0(\sample_position.Accumulated_Frequency[13] ), 
    .A0(\sample_position.n5941 ), .F0(\sample_position.n7723 ), 
    .F1(\sample_position.n7743 ));
  sample_position_SLICE_734 \sample_position.SLICE_734 ( 
    .C1(\sample_position.n5941 ), .B1(\SM_Sample_Position[2] ), 
    .A1(\sample_position.Accumulated_Frequency[15] ), 
    .D0(\sample_position.n5941 ), .C0(\SM_Sample_Position[2] ), 
    .A0(\sample_position.Accumulated_Frequency[2] ), 
    .F0(\sample_position.n7745 ), .F1(\sample_position.n7719 ));
  sample_position_SLICE_739 \sample_position.SLICE_739 ( .D1(\Freq_Scale[7] ), 
    .A1(Next_Sample), .D0(Next_Sample), .A0(\Freq_Scale[10] ), 
    .F0(\sample_position.n2222[10] ), .F1(\sample_position.n2222[7] ));
  sample_position_SLICE_740 \sample_position.SLICE_740 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[11] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[8] ), 
    .F0(\sample_position.n1[8] ), .F1(\sample_position.n1[11] ));
  sample_position_SLICE_742 \sample_position.SLICE_742 ( .D1(Next_Sample), 
    .B1(\Freq_Scale[6] ), .B0(\Freq_Scale[8] ), .A0(Next_Sample), 
    .F0(\sample_position.n2222[8] ), .F1(\sample_position.n2222[6] ));
  sample_position_SLICE_744 \sample_position.SLICE_744 ( .C1(\Freq_Scale[4] ), 
    .A1(Next_Sample), .D0(\Freq_Scale[5] ), .B0(Next_Sample), 
    .F0(\sample_position.n2222[5] ), .F1(\sample_position.n2222[4] ));
  sample_position_SLICE_755 \sample_position.SLICE_755 ( 
    .DI1(\SM_Top[3].sig_106.FeedThruLUT ), .A1(\SM_Top[3] ), .C0(Next_Sample), 
    .A0(\Freq_Scale[0] ), .CE(n8809), .CLK(Main_Clock), .Q1(Next_Sample), 
    .F0(\sample_position.n2222[0] ), .F1(\SM_Top[3].sig_106.FeedThruLUT ));
  sample_position_SLICE_756 \sample_position.SLICE_756 ( 
    .C1(\sample_position.Accumulated_Freq_Offset[13] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .F0(\sample_position.n1[15] ), .F1(\sample_position.n1[13] ));
  sample_position_SLICE_758 \sample_position.SLICE_758 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[9] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[14] ), 
    .F0(\sample_position.n1[14] ), .F1(\sample_position.n1[9] ));
  sample_position_SLICE_759 \sample_position.SLICE_759 ( 
    .DI1(\SM_Sample_Position[2].sig_032.FeedThruLUT ), 
    .A1(\SM_Sample_Position[2] ), .D0(\SM_Sample_Position[2] ), 
    .B0(\Frequency[7] ), .A0(\sample_position.Accumulated_Offset[7] ), 
    .CE(n8783), .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(Freq_Too_High), 
    .F0(\sample_position.n7734 ), 
    .F1(\SM_Sample_Position[2].sig_032.FeedThruLUT ));
  sample_position_SLICE_762 \sample_position.SLICE_762 ( 
    .A1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[12] ), 
    .F0(\sample_position.n1[12] ), .F1(\sample_position.n1[10] ));
  sample_position_SLICE_764 \sample_position.SLICE_764 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[1] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .F0(\sample_position.n1[5] ), .F1(\sample_position.n1[1] ));
  sample_position_SLICE_765 \sample_position.SLICE_765 ( 
    .D1(\SM_Sample_Position[1] ), .B1(\SM_Sample_Position[0] ), .C0(reset_n_c), 
    .A0(\SM_Sample_Position[1] ), .F0(\sample_position.n6_adj_1141 ), 
    .F1(n9424));
  sample_position_SLICE_767 \sample_position.SLICE_767 ( 
    .A0(\sample_position.Accumulated_Freq_Offset[6] ), 
    .F0(\sample_position.n1[6] ));
  sample_position_SLICE_771 \sample_position.SLICE_771 ( 
    .D0(\sample_position.Accumulated_Freq_Offset[4] ), 
    .F0(\sample_position.n1[4] ));
  sample_position_SLICE_773 \sample_position.SLICE_773 ( 
    .D0(\sample_position.Accumulated_Freq_Offset[2] ), 
    .F0(\sample_position.n1[2] ));

    sample_position_sp_ram_lscc_ram_dq_inst_inst0_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_SLICE_776
     
    \sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.SLICE_776 
    ( .DI1(\sample_position.n3 ), .D1(\SM_Sample_Position[1] ), 
    .B1(\SM_Sample_Position[0] ), .C0(\sample_position.Sample_Pos_WE ), 
    .CE(n7), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(\sample_position.Sample_Pos_WE ), 
    .F0(\sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.wr_en_i_N_373 )
    , .F1(\sample_position.n3 ));
  sample_output_dac_SLICE_779 \sample_output.dac.SLICE_779 ( 
    .D1(\sample_output.dac.Current_Bit[0] ), 
    .C1(\sample_output.dac.r_Data_To_Send[18] ), 
    .B1(\sample_output.dac.r_Data_To_Send[19] ), 
    .D0(\sample_output.dac.Current_Bit[3] ), 
    .C0(\sample_output.dac.Current_Bit[0] ), .F0(\sample_output.dac.n9412 ), 
    .F1(\sample_output.dac.n9742 ));
  sample_output_dac_SLICE_782 \sample_output.dac.SLICE_782 ( 
    .DI1(\sample_output.dac.o_Ready_N_1070 ), .D1(\sample_output.dac.n5542 ), 
    .C1(n9065), .B1(\SM_DAC_Out[2] ), .A1(n2613), .C0(\sample_output.dac.n24 ), 
    .B0(Clock_Counter), .CE(\sample_output.dac.n6232 ), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(DAC_Ready), .F0(n9065), 
    .F1(\sample_output.dac.o_Ready_N_1070 ));
  sample_output_dac_SLICE_785 \sample_output.dac.SLICE_785 ( 
    .DI1(\sample_output.dac.n25[4] ), .D1(\sample_output.dac.Current_Bit[4] ), 
    .C1(\sample_output.dac.n7787 ), .B1(\sample_output.dac.Current_Bit[3] ), 
    .A1(\sample_output.dac.Current_Bit[2] ), 
    .B0(\sample_output.dac.Current_Bit[0] ), 
    .A0(\sample_output.dac.Current_Bit[1] ), .CE(\sample_output.dac.n6361 ), 
    .LSR(\sample_output.dac.n6694 ), .CLK(Main_Clock), 
    .Q1(\sample_output.dac.Current_Bit[4] ), .F0(\sample_output.dac.n7787 ), 
    .F1(\sample_output.dac.n25[4] ));
  sample_output_dac_SLICE_789 \sample_output.dac.SLICE_789 ( 
    .D1(\sample_output.dac.r_Data_To_Send[10] ), 
    .C1(\sample_output.dac.r_Data_To_Send[11] ), 
    .B1(\sample_output.dac.Current_Bit[0] ), 
    .D0(\sample_output.dac.r_Data_To_Send[14] ), 
    .C0(\sample_output.dac.Current_Bit[0] ), 
    .B0(\sample_output.dac.r_Data_To_Send[15] ), 
    .F0(\sample_output.dac.n9745 ), .F1(\sample_output.dac.n9751 ));
  sample_output_dac_SLICE_791 \sample_output.dac.SLICE_791 ( 
    .C1(\sample_output.dac.Current_Bit[0] ), 
    .B1(\sample_output.dac.r_Data_To_Send[23] ), 
    .A1(\sample_output.dac.r_Data_To_Send[22] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.r_Data_To_Send[8] ), 
    .A0(\sample_output.dac.r_Data_To_Send[9] ), .F0(\sample_output.dac.n9750 ), 
    .F1(\sample_output.dac.n9754 ));
  sample_output_dac_SLICE_794 \sample_output.dac.SLICE_794 ( .DI1(n6835), 
    .D1(n2102), .C1(n2079), .B1(n2086), .A1(\SM_DAC_Out[3] ), 
    .B0(\SM_DAC_Out[3] ), .A0(\SM_DAC_Out[2] ), .CLK(Main_Clock), 
    .Q1(\SM_DAC_Out[3] ), .F0(n9408), .F1(n6835));
  SLICE_795 SLICE_795( .DI1(\SM_Sample_Position[1].sig_044.FeedThruLUT ), 
    .B1(\SM_Sample_Position[1] ), .D0(\Harmonic[0] ), .A0(Sample_Ready), 
    .CE(\sample_position.n6155 ), .LSR(\sample_position.n8939 ), 
    .CLK(Main_Clock), .Q1(Sample_Ready), .F0(n4_adj_1189), 
    .F1(\SM_Sample_Position[1].sig_044.FeedThruLUT ));
  SLICE_796 SLICE_796( .DI1(\sample_output.n55$n2 ), 
    .B1(\SM_Sample_Output[0] ), .A1(\SM_Sample_Output[2] ), 
    .C0(DAC_Send_adj_1184), .B0(Clock_Counter), .A0(\SM_DAC_Out[0] ), 
    .CE(n9034), .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(DAC_Send_adj_1184), 
    .F0(n9763), .F1(\sample_output.n55$n2 ));
  SLICE_800 SLICE_800( .DI1(n6_adj_1180), .D1(reset_n_c), 
    .C1(\Adder_Start[0] ), .B1(\SM_Adder[0] ), .D0(\Adder_Start[0] ), 
    .C0(reset_n_c), .B0(Adder_Clear), .A0(\SM_Adder[0] ), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q1(\SM_Adder[0] ), .F0(n2943), .F1(n6_adj_1180));
  SLICE_801 SLICE_801( .DI1(\genadder[1].adder.n8[0] ), 
    .D1(\SM_Adder_adj_1202[0] ), .C1(reset_n_c), .B1(\Adder_Start[1] ), 
    .D0(Adder_Clear), .C0(\SM_Adder_adj_1202[0] ), .B0(reset_n_c), 
    .A0(\Adder_Start[1] ), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q1(\SM_Adder_adj_1202[0] ), .F0(n2945), .F1(\genadder[1].adder.n8[0] ));
  SLICE_802 SLICE_802( .DI1(\SM_Top_3__N_121[3] ), .D1(n7460), 
    .C1(n10_adj_1192), .A1(\SM_Top[3] ), .D0(\SM_Top[3] ), .B0(\SM_Top[0] ), 
    .A0(Mult_Ready), .CE(n24), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(\SM_Top[3] ), .F0(n9386), .F1(\SM_Top_3__N_121[3] ));
  SLICE_804 SLICE_804( .D0(\Harmonic[2] ), .C0(\Harmonic[3] ), 
    .A0(\Harmonic[1] ), .F0(n5939));
  SLICE_806 SLICE_806( .F0(GND_net));
  adc_SLICE_809 \adc.SLICE_809 ( .DI1(\adc.i_ADC_CS_c.sig_203.FeedThruLUT ), 
    .B1(\adc.i_ADC_CS_c ), .D0(SM_ADC_In), .A0(CS_Stable), .CE(\adc.n9452 ), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(CS_Stable), .F0(\adc.n7230 ), 
    .F1(\adc.i_ADC_CS_c.sig_203.FeedThruLUT ));
  adc_SLICE_812 \adc.SLICE_812 ( .DI1(n6802), .D1(CS_Stable), .C1(n7226), 
    .B1(ADC_Data_Received), .A1(SM_ADC_In), .D0(\adc.n7 ), 
    .B0(\adc.o_Data_Received_N_578 ), .CLK(\adc.Clock_Stable ), 
    .Q1(ADC_Data_Received), .F0(n7226), .F1(n6802));
  adc_SLICE_813 \adc.SLICE_813 ( .DI1(\genadder[1].adder.n6760 ), 
    .D1(\genadder[1].adder.n167[18] ), .A1(reset_n_c), .D0(\adc.n9420 ), 
    .B0(reset_n_c), .CE(\genadder[1].adder.n2977 ), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q1(\genadder[1].adder.Adder_Total[1][18] ), 
    .F0(\adc.n9048 ), .F1(\genadder[1].adder.n6760 ));
  adc_SLICE_814 \adc.SLICE_814 ( .DI1(\i_ADC_Clock_c.sig_169.FeedThruLUT ), 
    .C1(i_ADC_Clock_c), .D0(i_ADC_Clock_c), .B0(reset_n_c), 
    .A0(\adc.Clock_State ), .CE(\adc.n3663 ), .CLK(Main_Clock), 
    .Q1(\adc.Clock_State ), .F0(\adc.n3663 ), 
    .F1(\i_ADC_Clock_c.sig_169.FeedThruLUT ));
  adc_SLICE_815 \adc.SLICE_815 ( .DI1(\adc.i_ADC_CS_c.sig_173.FeedThruLUT ), 
    .C1(\adc.i_ADC_CS_c ), .D0(\adc.i_ADC_CS_c ), .C0(reset_n_c), 
    .A0(\adc.CS_State ), .CE(\adc.n3659 ), .CLK(Main_Clock), 
    .Q1(\adc.CS_State ), .F0(\adc.n3659 ), 
    .F1(\adc.i_ADC_CS_c.sig_173.FeedThruLUT ));
  adc_SLICE_816 \adc.SLICE_816 ( .DI1(\i_ADC_Data_c.sig_172.FeedThruLUT ), 
    .C1(i_ADC_Data_c), .C0(reset_n_c), .B0(i_ADC_Data_c), 
    .A0(\adc.Data_State ), .CE(\adc.n3661 ), .CLK(Main_Clock), 
    .Q1(\adc.Data_State ), .F0(\adc.n3661 ), 
    .F1(\i_ADC_Data_c.sig_172.FeedThruLUT ));
  mult_SLICE_817 \mult.SLICE_817 ( .A0(\Harmonic_Scale[4] ), .F0(\mult.n1[4] ));
  mult_SLICE_818 \mult.SLICE_818 ( .C0(\Harmonic_Scale[5] ), .F0(\mult.n1[5] ));
  mult_SLICE_819 \mult.SLICE_819 ( .A0(\Harmonic_Scale[2] ), .F0(\mult.n1[2] ));
  mult_SLICE_820 \mult.SLICE_820 ( .DI1(\adc.Data_State.sig_144.FeedThruLUT ), 
    .C1(\adc.Data_State ), .A0(\Harmonic_Scale[3] ), .CE(\adc.n6088 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\ADC_Data[2][5] ), .F0(\mult.n1[3] ), 
    .F1(\adc.Data_State.sig_144.FeedThruLUT ));
  mult_SLICE_821 \mult.SLICE_821 ( .DI1(\ADC_Data[1][8].sig_027.FeedThruLUT ), 
    .D1(\ADC_Data[1][8] ), .A0(\Harmonic_Scale[8] ), .CLK(ADC_Data_Received), 
    .Q1(\Harmonic_Scale[8] ), .F0(\mult.n1[8] ), 
    .F1(\ADC_Data[1][8].sig_027.FeedThruLUT ));
  mult_SLICE_822 \mult.SLICE_822 ( .A1(\Harmonic_Scale[1] ), 
    .A0(\Harmonic_Scale[0] ), .F0(\mult.n1[0] ), .F1(\mult.n1[1] ));
  mult_SLICE_824 \mult.SLICE_824 ( .A0(\Harmonic_Scale[6] ), .F0(\mult.n1[6] ));
  mult_SLICE_825 \mult.SLICE_825 ( .B0(\Harmonic_Scale[7] ), .F0(\mult.n1[7] ));
  mult_SLICE_826 \mult.SLICE_826 ( .DI1(n6839), .D1(\SM_Top[3] ), 
    .C1(Start_Mult_Scaler), .B1(n9_adj_1190), .A1(n4_adj_1191), 
    .D0(\mult.SM_Scale_Mult[1] ), .C0(Reset_Mult_Scaler), 
    .B0(Start_Mult_Scaler), .A0(\SM_Scale_Mult[0] ), .CLK(Main_Clock), 
    .Q1(Start_Mult_Scaler), .F0(\mult.n6420 ), .F1(n6839));
  mult_SLICE_827 \mult.SLICE_827 ( .DI1(\SM_Top[3].sig_029.FeedThruLUT ), 
    .A1(\SM_Top[3] ), .D0(\mult.SM_Scale_Mult[1] ), .B0(Reset_Mult_Scaler), 
    .CE(n9060), .CLK(Main_Clock), .Q1(Reset_Mult_Scaler), 
    .F0(o_Mult_Ready_N_781), .F1(\SM_Top[3].sig_029.FeedThruLUT ));
  mult_SLICE_830 \mult.SLICE_830 ( .DI1(\adc.Data_State.sig_197.FeedThruLUT ), 
    .B1(\adc.Data_State ), .D0(\mult.Comb_Counter[5] ), 
    .C0(\Comb_Interval[3] ), .B0(\Comb_Interval[5] ), 
    .A0(\mult.Comb_Counter[3] ), .CE(\adc.n6104 ), .CLK(\adc.Clock_Stable ), 
    .Q1(\ADC_Data[4][2] ), .F0(\mult.n11 ), 
    .F1(\adc.Data_State.sig_197.FeedThruLUT ));
  SLICE_832 SLICE_832( .DI1(\SM_Top[2].sig_107.FeedThruLUT ), .C1(\SM_Top[2] ), 
    .D0(\SM_Top[2] ), .A0(reset_n_c), .CE(n6379), .LSR(n9059), 
    .CLK(Main_Clock), .Q1(Adder_Clear), .F0(n4_adj_1191), 
    .F1(\SM_Top[2].sig_107.FeedThruLUT ));
  SLICE_833 SLICE_833( .DI1(\n2086$n0 ), .D1(\SM_DAC_Out[0] ), 
    .C1(\SM_DAC_Out[1] ), .B1(\sample_output.dac.n5953 ), .A1(\SM_DAC_Out[2] ), 
    .D0(\SM_DAC_Out[1] ), .C0(\SM_DAC_Out[0] ), .B0(\SM_DAC_Out[2] ), 
    .A0(\SM_DAC_Out[3] ), .CE(n2079), .LSR(\sample_output.dac.n6618 ), 
    .CLK(Main_Clock), .Q1(\SM_DAC_Out[0] ), .F0(n10_adj_1158), .F1(\n2086$n0 ));

    sample_position_sp_ram_lscc_ram_dq_inst_inst0_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR7(\Harmonic[7] ), .RADDR6(\Harmonic[6] ), .RADDR5(\Harmonic[5] ), 
    .RADDR4(\Harmonic[4] ), .RADDR3(\Harmonic[3] ), .RADDR2(\Harmonic[2] ), 
    .RADDR1(\Harmonic[1] ), .RADDR0(\Harmonic[0] ), .WADDR7(\Harmonic[7] ), 
    .WADDR6(\Harmonic[6] ), .WADDR5(\Harmonic[5] ), .WADDR4(\Harmonic[4] ), 
    .WADDR3(\Harmonic[3] ), .WADDR2(\Harmonic[2] ), .WADDR1(\Harmonic[1] ), 
    .WADDR0(\Harmonic[0] ), .WDATA15(\sample_position.Sample_Position[15] ), 
    .WDATA14(\sample_position.Sample_Position[14] ), 
    .WDATA13(\sample_position.Sample_Position[13] ), 
    .WDATA12(\sample_position.Sample_Position[12] ), 
    .WDATA11(\sample_position.Sample_Position[11] ), 
    .WDATA10(\sample_position.Sample_Position[10] ), 
    .WDATA9(\sample_position.Sample_Position[9] ), 
    .WDATA8(\sample_position.Sample_Position[8] ), 
    .WDATA7(\sample_position.Sample_Position[7] ), 
    .WDATA6(\sample_position.Sample_Position[6] ), 
    .WDATA5(\sample_position.Sample_Position[5] ), 
    .WDATA4(\sample_position.Sample_Position[4] ), 
    .WDATA3(\sample_position.Sample_Position[3] ), 
    .WDATA2(\sample_position.Sample_Position[2] ), 
    .WDATA1(\sample_position.Sample_Position[1] ), 
    .WDATA0(\sample_position.Sample_Position[0] ), .RCLKE(VCC_net), 
    .RCLK(Main_Clock), 
    .RE(\sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.wr_en_i_N_373 )
    , .WCLKE(VCC_net), .WCLK(Main_Clock), .WE(\sample_position.Sample_Pos_WE ), 
    .RDATA15(\sample_position.Sample_Pos_Read[15] ), 
    .RDATA14(\sample_position.Sample_Pos_Read[14] ), 
    .RDATA13(\sample_position.Sample_Pos_Read[13] ), 
    .RDATA12(\sample_position.Sample_Pos_Read[12] ), 
    .RDATA11(\sample_position.Sample_Pos_Read[11] ), 
    .RDATA10(\sample_position.Sample_Pos_Read[10] ), 
    .RDATA9(\sample_position.Sample_Pos_Read[9] ), 
    .RDATA8(\sample_position.Sample_Pos_Read[8] ), 
    .RDATA7(\sample_position.Sample_Pos_Read[7] ), 
    .RDATA6(\sample_position.Sample_Pos_Read[6] ), 
    .RDATA5(\sample_position.Sample_Pos_Read[5] ), 
    .RDATA4(\sample_position.Sample_Pos_Read[4] ), 
    .RDATA3(\sample_position.Sample_Pos_Read[3] ), 
    .RDATA2(\sample_position.Sample_Pos_Read[2] ), 
    .RDATA1(\sample_position.Sample_Pos_Read[1] ), 
    .RDATA0(\sample_position.Sample_Pos_Read[0] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_7__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[7].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[15] ), .RDATA3(\Sample_Value[14] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_6__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[6].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[13] ), .RDATA3(\Sample_Value[12] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_5__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[5].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[11] ), .RDATA3(\Sample_Value[10] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_4__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[4].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[9] ), .RDATA3(\Sample_Value[8] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_3__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[3].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[7] ), .RDATA3(\Sample_Value[6] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_2__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[2].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[5] ), .RDATA3(\Sample_Value[4] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_1__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[1].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[3] ), .RDATA3(\Sample_Value[2] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[1] ), .RDATA3(\Sample_Value[0] ));
  pll_48_lscc_pll_inst_u_PLL_B \pll_48.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(i_Clock_c), .FEEDBACK(\pll_48.lscc_pll_inst.feedback_w ), 
    .RESET_N(reset_n_c), .INTFBOUT(\pll_48.lscc_pll_inst.feedback_w ), 
    .OUTCORE(Main_Clock));
  reset_n reset_n_I( .PADDI(reset_n_c), .reset_n(reset_n));
  i_ADC_CS i_ADC_CS_I( .PADDI(\adc.i_ADC_CS_c ), .i_ADC_CS(i_ADC_CS));
  genadder_0__adder_mult_3 \genadder[0].adder.mult_3 ( .A15(\Adder_Mult[8] ), 
    .A14(\Adder_Mult[8] ), .A13(\Adder_Mult[8] ), .A12(\Adder_Mult[8] ), 
    .A11(\Adder_Mult[8] ), .A10(\Adder_Mult[8] ), .A9(\Adder_Mult[8] ), 
    .A8(\Adder_Mult[8] ), .A7(\Adder_Mult[7] ), .A6(\Adder_Mult[6] ), 
    .A5(\Adder_Mult[5] ), .A4(\Adder_Mult[4] ), .A3(\Adder_Mult[3] ), 
    .A2(\Adder_Mult[2] ), .A1(\Adder_Mult[1] ), .A0(\Adder_Mult[0] ), 
    .B15(\Sample_Value[15] ), .B14(\Sample_Value[14] ), 
    .B13(\Sample_Value[13] ), .B12(\Sample_Value[12] ), 
    .B11(\Sample_Value[11] ), .B10(\Sample_Value[10] ), .B9(\Sample_Value[9] ), 
    .B8(\Sample_Value[8] ), .B7(\Sample_Value[7] ), .B6(\Sample_Value[6] ), 
    .B5(\Sample_Value[5] ), .B4(\Sample_Value[4] ), .B3(\Sample_Value[3] ), 
    .B2(\Sample_Value[2] ), .B1(\Sample_Value[1] ), .B0(\Sample_Value[0] ), 
    .O24(n3), .O23(n4), .O22(n5), .O21(n6), .O20(n7_adj_1159), .O19(n8_2), 
    .O18(n9_adj_1160), .O17(n10_adj_1161), .O16(n11), .O15(n12), .O14(n13), 
    .O13(n14), .O12(n15), .O11(n16), .O10(n17_2), .O9(n18));
  o_DAC_SCK o_DAC_SCK_I( .PADDO(o_DAC_SCK_c), .o_DAC_SCK(o_DAC_SCK));
  o_DAC_MOSI o_DAC_MOSI_I( .PADDO(o_DAC_MOSI_c), .o_DAC_MOSI(o_DAC_MOSI));
  test test_I( .PADDO(test_c), .test(test));
  debug debug_I( .PADDO(GND_net), .debug(debug));
  i_ADC_Clock i_ADC_Clock_I( .PADDI(i_ADC_Clock_c), .i_ADC_Clock(i_ADC_Clock));
  i_ADC_Data i_ADC_Data_I( .PADDI(i_ADC_Data_c), .i_ADC_Data(i_ADC_Data));
  i_Clock i_Clock_I( .PADDI(i_Clock_c), .i_Clock(i_Clock));
  o_DAC_CS o_DAC_CS_I( .PADDO(o_DAC_CS_c), .o_DAC_CS(o_DAC_CS));
endmodule

module sample_position_SLICE_0 ( input DI0, D1, D0, C0, B0, CE, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_17 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i15 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module sample_position_SLICE_1 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_15 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i13 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i14 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_2 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_13 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i11 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i12 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_3 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_11 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i9 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i10 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_4 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_9 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i7 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i8 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_5 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_7 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i5 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i6 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_6 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_5 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i3 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i4 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_7 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_3 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i1 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i2 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_8 ( input DI1, D1, C1, B1, CE, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i0 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module sample_position_SLICE_9 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_10 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i13 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_11 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_12 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_13 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_14 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_15 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_16 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_17 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_position/Sample_Position__i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_18 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i15 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_19 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i13 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i14 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_20 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i11 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i12 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_21 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i9 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i10 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_22 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i7 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i8 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_23 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/add_535_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_24 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/add_535_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_25 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/add_535_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_26 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \sample_position/add_535_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_27 ( input D1, D0, C0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_17 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_28 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_15 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_29 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_13 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_30 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_11 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_31 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_9 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_32 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_7 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_33 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_5 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_34 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_3 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_35 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_SLICE_36 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1692_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_37 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1692_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_R__i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_38 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1692_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_R__i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_39 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1692_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_R__i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_40 ( input DI1, DI0, D1, C1, B1, D0, B0, CE, LSR, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1692_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_R__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_41 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1692_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_output/r_Sample_R__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_42 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1695_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_43 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1695_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_L__i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_44 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1695_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_L__i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_45 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1695_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_L__i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_46 ( input DI1, DI0, D1, C1, B1, D0, B0, CE, LSR, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1695_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_L__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_47 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1695_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_output/r_Sample_L__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_48 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_17( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i15( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_49 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_15( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i13( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i14( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_50 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_51 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_13( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i11( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i12( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_52 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i9( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i10( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_53 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_54 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_55 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 add_20_add_5_7( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_56 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_57 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 add_20_add_5_3( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_58 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_59 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 add_20_add_5_5( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_60 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 add_20_add_5_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_61 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 add_20_add_5_9( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_62 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_63 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_64 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_65 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \genadder[1].adder/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_66 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_67 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_68 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_69 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_70 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_71 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_72 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1299_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_73 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1299_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_74 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1299_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_75 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1299_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_76 ( input D1, C1, B1, D0, C0, B0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mult/add_1299_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_77 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mult/add_12_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_78 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \mult/add_12_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_79 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \mult/add_12_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_80 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \mult/add_12_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_81 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mult/add_12_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_82 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_83 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \genadder[0].adder/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_84 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_85 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_86 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_87 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_88 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_89 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_90 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_91 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_92 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_92_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_92_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Scale_Initial_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_93 ( input DI1, DI0, C1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_93_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_93_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_94 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_94_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_94_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_95 ( input DI0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40005 test_I_99_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 test_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_96 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40006 i5097_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 i5099_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Harmonic__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  ffsre2 Harmonic__i0( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_97 ( input DI1, DI0, A1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_97_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_97_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Harmonic_Scale_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_98 ( input DI1, DI0, A1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_98_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_98_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Frequency_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_100 ( input DI1, DI0, B1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 SLICE_100_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_100_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_102 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_102_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_102_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Frequency_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_104 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_104_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_104_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Frequency_i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_106 ( input DI1, DI0, C1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_106_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_106_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i9( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_108 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_108_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_108_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i11( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i10( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_110 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40010 SLICE_110_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_110_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Frequency_i13( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i12( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_112 ( input DI1, DI0, D1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40010 SLICE_112_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_112_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i15( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i14( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_115 ( input DI1, DI0, A1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_115_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_115_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Harmonic_Scale_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_117 ( input DI1, DI0, B1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 SLICE_117_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_117_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Harmonic_Scale_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_119 ( input DI1, DI0, B1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 SLICE_119_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_119_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Harmonic_Scale_i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_122 ( input DI1, DI0, A1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_122_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_122_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module sample_position_SLICE_125 ( input DI1, DI0, B1, B0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40008 \sample_position.SLICE_125_K1 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \sample_position.SLICE_125_K0 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_126 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40011 \sample_position/mux_23_Mux_1_i7_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \sample_position/i30_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_position/SM_Sample_Position__i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_position/SM_Sample_Position__i0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xC3CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xB5A5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_129 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \sample_position.SLICE_129_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/LUT_Pos__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_130 ( input DI1, DI0, C1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \sample_position.SLICE_130_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \sample_position.SLICE_130_K0 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_132 ( input DI1, DI0, C1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \sample_position.SLICE_132_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \sample_position.SLICE_132_K0 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_134 ( input DI1, DI0, A1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 \sample_position.SLICE_134_K1 ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \sample_position.SLICE_134_K0 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_136 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 \sample_position.SLICE_136_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \sample_position.SLICE_136_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_140 ( input DI1, DI0, B1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40008 \sample_position.SLICE_140_K1 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \sample_position.SLICE_140_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i2 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i1 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_142 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 \sample_position.SLICE_142_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \sample_position.SLICE_142_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i4 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i3 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_144 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 \sample_position.SLICE_144_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \sample_position.SLICE_144_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i6 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i5 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_147 ( input DI1, DI0, D1, C1, B1, D0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40013 \sample_position/mux_8_i15_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \sample_position/mux_8_i16_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i14 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i15 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xBB88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_149 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40015 \sample_position/mux_8_i13_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \sample_position/mux_8_i14_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i12 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i13 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xEE44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_151 ( input DI1, DI0, C1, B1, A1, D0, C0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40017 \sample_position/mux_8_i11_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \sample_position/mux_8_i12_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i10 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i11 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xB8B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_153 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40019 \sample_position/mux_8_i9_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \sample_position/mux_8_i10_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_155 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40013 \sample_position/mux_8_i7_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \sample_position/mux_8_i8_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_158 ( input DI1, DI0, C1, B1, A1, D0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40022 \sample_position/mux_8_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \sample_position/mux_8_i6_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_160 ( input DI1, DI0, C1, B1, A1, C0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40017 \sample_position/mux_8_i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \sample_position/mux_8_i4_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xACAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_161 ( input DI1, DI0, D1, B1, A1, D0, C0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40024 \sample_position/mux_8_i2_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 \sample_position/mux_8_i1_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_165 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_165_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_165_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module sample_output_SLICE_167 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40026 \sample_output/mux_1330_i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40027 \sample_output/mux_1330_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xACA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xE2C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_168 ( input DI1, DI0, D1, C1, D0, C0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40028 \sample_output/i15_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \sample_output/dac/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/SM_Sample_Output__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/SM_Sample_Output__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x3323") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_170 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40030 \sample_output/mux_1330_i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40031 \sample_output/mux_1330_i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data_i0_i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xCAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_172 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40030 \sample_output/mux_1330_i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40032 \sample_output/mux_1330_i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data_i0_i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_174 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40026 \sample_output/mux_1330_i8_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40033 \sample_output/mux_1330_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data_i0_i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xB888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_176 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40034 \sample_output/mux_1330_i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40035 \sample_output/mux_1330_i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data_i0_i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xAAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xCAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_178 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40036 \sample_output/mux_1330_i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40037 \sample_output/mux_1330_i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data_i0_i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xF088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xEA40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_180 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40038 \sample_output/mux_1330_i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40039 \sample_output/mux_1330_i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data_i0_i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i13 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xCAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xF088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_182 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 \sample_output/mux_1330_i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40041 \sample_output/mux_1330_i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data_i0_i16 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xD888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xAAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_184 ( input DI1, DI0, A1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 SLICE_184_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_184_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_R__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_R__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_186 ( input DI1, DI0, A1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 SLICE_186_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_186_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_R__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_R__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_188 ( input DI1, DI0, C1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_188_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_188_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_R__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_R__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_192 ( input DI1, DI0, C1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_192_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_192_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_L__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_L__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_194 ( input DI1, DI0, C1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_194_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_194_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_L__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_L__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_196 ( input DI1, DI0, B1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40008 SLICE_196_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_196_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_L__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_L__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_198 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40042 \sample_output/i4509_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \sample_output/i4510_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data_i0_i19 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i20 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xFCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xEFE0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_200 ( input DI0, D0, B0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40044 i4508_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i18 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xDD88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_201 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40004 SLICE_201_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data_i0_i17 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_202 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \sample_output.SLICE_202_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \sample_output.SLICE_202_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i20 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i19 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_203 ( input DI1, DI0, C1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_203_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_203_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_205 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \sample_output.SLICE_205_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \sample_output.SLICE_205_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_207 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \sample_output.SLICE_207_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \sample_output.SLICE_207_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_209 ( input DI1, DI0, A1, A0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \sample_output.SLICE_209_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \sample_output.SLICE_209_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_211 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \sample_output.SLICE_211_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \sample_output.SLICE_211_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_213 ( input DI1, DI0, C1, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 \sample_output.SLICE_213_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \sample_output.SLICE_213_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_215 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \sample_output.SLICE_215_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \sample_output.SLICE_215_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_217 ( input DI1, DI0, B1, A0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 \sample_output.SLICE_217_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \sample_output.SLICE_217_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_219 ( input DI1, DI0, A1, A0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \sample_output.SLICE_219_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \sample_output.SLICE_219_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_dac_SLICE_220 ( input DI0, D0, B0, A0, CE, LSR, CLK, 
    output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40045 \sample_output/dac/i2_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/dac/o_SPI_Data ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x2200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_221 ( input DI1, DI0, D1, A1, B0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40046 \sample_output/dac/i5443_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \sample_output/dac/i5441_1_lut ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_output/dac/Current_Bit_854__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/dac/Current_Bit_854__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x55AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_227 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40048 \sample_output/dac/i5457_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40049 \sample_output/dac/i5450_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/dac/Current_Bit_854__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/dac/Current_Bit_854__i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x3CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_231 ( input DI1, DI0, D1, C1, D0, C0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 \sample_output/dac/i1_2_lut_adj_472 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i1_4_lut_adj_482( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/Clock_Counter_c ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_output/dac/SM_DAC_Out_i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x88C8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_232 ( input DI0, B0, CE, LSR, CLK, output Q0, 
    F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \sample_output.dac.i4927_2_lut$r1 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20052 \sample_output/dac/o_SPI_CS ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20052 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_237 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_237_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_237_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_238 ( input DI1, DI0, C1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_238_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_238_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_240 ( input DI1, DI0, C1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_240_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_240_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i14( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i15( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_241 ( input DI1, DI0, C1, A1, D0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 i5047_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i4940_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Harmonic__i6( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  ffsre2 Harmonic__i7( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_243 ( input DI1, DI0, D1, A1, C0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40055 i5088_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 i5083_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Harmonic__i4( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  ffsre2 Harmonic__i5( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_245 ( input DI1, DI0, B1, A1, C0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40057 i5090_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 i5089_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Harmonic__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  ffsre2 Harmonic__i3( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_249 ( input DI1, DI0, B1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 SLICE_249_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_249_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i12( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i13( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_251 ( input DI1, DI0, B1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 SLICE_251_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_251_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i10( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i11( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_253 ( input DI1, DI0, B1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 SLICE_253_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_253_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i9( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_255 ( input DI1, DI0, A1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_255_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_255_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_257 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_257_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_257_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_259 ( input DI1, DI0, D1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40010 SLICE_259_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_259_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_262 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40001 SLICE_262_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Scale_Initial_i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_263 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_263_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_263_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Scale_Initial_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_268 ( input DI1, DI0, D1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40010 SLICE_268_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_268_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_273 ( input DI1, DI0, C1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_273_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_273_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_275 ( input DI1, DI0, C1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_275_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_275_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_277 ( input DI1, DI0, C1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_277_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_277_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i8 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_279 ( input DI1, DI0, B1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_279_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_279_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i10 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_281 ( input DI1, DI0, B1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_281_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_281_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i12 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_283 ( input DI1, DI0, C1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_283_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_283_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i14 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i13 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_285 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_285_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_285_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i16 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i15 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_287 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 SLICE_287_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_287_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i18 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i17 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_289 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 SLICE_289_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_289_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i36 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i35 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_291 ( input DI1, DI0, C1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_291_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_291_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i38 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i37 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_293 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 SLICE_293_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_293_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i40 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i39 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_295 ( input DI1, DI0, B1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_295_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_295_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i42 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i41 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_297 ( input DI1, DI0, A1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 SLICE_297_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_297_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i44 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i43 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_299 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 SLICE_299_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_299_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i46 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i45 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_301 ( input DI1, DI0, B1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_301_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_301_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i48 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i47 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_303 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 SLICE_303_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_303_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i50 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i49 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_305 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 i4515_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 i4467_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 Adder_Start__i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Adder_Start__i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x20A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x2A08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_310 ( input DI1, DI0, C1, A1, B0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40061 \genadder[1].adder/i5027_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \genadder[1].adder/i5028_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i16 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[1].adder/o_Accumulator__i17 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20063 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module genadder_1__adder_SLICE_313 ( input DI1, DI0, B1, A1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40064 \genadder[1].adder/i5025_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \genadder[1].adder/i5026_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[1].adder/o_Accumulator__i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_315 ( input DI1, DI0, D1, C1, B0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40006 \genadder[1].adder/i5023_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \genadder[1].adder/i5024_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[1].adder/o_Accumulator__i13 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_316 ( input DI1, DI0, D1, C1, D0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40006 \genadder[1].adder/i5011_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \genadder[1].adder/i4920_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[1].adder/o_Accumulator__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_318 ( input DI1, DI0, C1, A1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40061 \genadder[1].adder/i5021_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \genadder[1].adder/i5022_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[1].adder/o_Accumulator__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_320 ( input DI1, DI0, C1, A1, B0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \genadder[1].adder/i5019_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \genadder[1].adder/i5020_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[1].adder/o_Accumulator__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_322 ( input DI1, DI0, D1, A1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40055 \genadder[1].adder/i5017_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \genadder[1].adder/i5018_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[1].adder/o_Accumulator__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_324 ( input DI1, DI0, C1, B1, D0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40066 \genadder[1].adder/i5015_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \genadder[1].adder/i5016_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[1].adder/o_Accumulator__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_326 ( input DI1, DI0, B1, A1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40064 \genadder[1].adder/i5013_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \genadder[1].adder/i5014_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[1].adder/o_Accumulator__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_329 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 i4464_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 i4485_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i2 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_330 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4483_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i4484_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_332 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40070 i4481_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 i4482_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_334 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 i4479_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 i4480_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_336 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4477_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 i4478_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_338 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4475_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i4476_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_340 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4473_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 i4474_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_342 ( input DI1, DI0, D1, B1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40073 i4471_3_lut( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i4472_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xEE44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_346 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40009 \adc.SLICE_346_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i41 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_347 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_347_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i40 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_348 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_348_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i39 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_350 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_350_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i37 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_351 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_351_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i36 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_352 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_352_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i35 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_353 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_353_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i34 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_354 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_354_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i33 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_355 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_355_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i25 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_356 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_356_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i24 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_357 ( input DI1, DI0, D1, A1, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40046 \adc/i5421_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \adc/i5419_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \adc/Count_Stable_853__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \adc/Count_Stable_853__i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module adc_SLICE_358 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_358_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i23 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_359 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_359_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i22 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_360 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_360_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i21 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_361 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_361_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i20 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_362 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_362_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i19 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_363 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_363_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i18 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_364 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_364_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i17 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_365 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_365_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i16 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_366 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_366_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i15 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_367 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_367_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i14 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_368 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_368_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i13 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_369 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_369_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_370 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_370_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_371 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40009 \adc.SLICE_371_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_372 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_372_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_373 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_373_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_374 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_374_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_376 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_376_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_377 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_377_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_380 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_380_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_381 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_381_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_383 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_383_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_384 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 SLICE_384_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/Clock_Stable_c ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_386 ( input DI0, C0, B0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40074 \adc/i5428_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/Count_Stable_853__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0x7878") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_388 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_388_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_390 ( input DI0, C0, B0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40075 i4513_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/Receive_Byte_i0_i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x1212") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_392 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_392_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i49 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_393 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40009 \adc.SLICE_393_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i50 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_394 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_394_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i51 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_395 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_395_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i52 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_396 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_396_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i53 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_397 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_397_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i54 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_398 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40009 \adc.SLICE_398_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i55 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_399 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_399_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i56 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_400 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40009 \adc.SLICE_400_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i57 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_401 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_401_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i58 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_402 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_402_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i59 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_403 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_403_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i60 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_404 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40009 \adc.SLICE_404_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i61 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_405 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_405_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i62 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_406 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40009 \adc.SLICE_406_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i63 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_407 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_407_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i64 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_408 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40002 \adc.SLICE_408_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i65 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_409 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_409_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i66 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_411 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_411_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i68 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_412 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_412_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i69 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_413 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_413_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i70 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_414 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40001 \adc.SLICE_414_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i71 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_415 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_415_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i72 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_416 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40076 \adc/i1025_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \adc/i1018_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/Receive_Byte_i0_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \adc/Receive_Byte_i0_i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0x66CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_417 ( input DI1, DI0, D1, C1, B1, C0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40078 \adc/i989_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \adc/i982_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \adc/Receive_Bit_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \adc/Receive_Bit_i0_i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x3CF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0x5A5A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_422 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40080 \mult/o_Mult_8__I_0_i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40035 \mult/o_Mult_8__I_0_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xB888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_423 ( input DI1, DI0, D1, C1, B1, D0, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40081 \mult/mux_18_Mux_0_i1_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \mult/i4971_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \mult/SM_Scale_Mult__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/SM_Scale_Mult__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0x33F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xF0FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_424 ( input DI1, DI0, D1, A1, C0, A0, CE, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40083 \mult/i5065_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \mult/i5098_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mult/Comb_Counter__i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/Comb_Counter__i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_426 ( input DI1, DI0, D1, B1, C0, A0, CE, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40085 \mult/i5067_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \mult/i5066_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mult/Comb_Counter__i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/Comb_Counter__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_428 ( input DI1, DI0, D1, A1, B0, A0, CE, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40083 \mult/i5069_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 \mult/i5068_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \mult/Comb_Counter__i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/Comb_Counter__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_430 ( input DI1, DI0, D1, B1, C0, A0, CE, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40085 \mult/i4976_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \mult/i5070_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mult/Comb_Counter__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/Comb_Counter__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_433 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40088 \mult/o_Mult_8__I_0_i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40089 \mult/o_Mult_8__I_0_i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xF088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xEC20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_435 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40090 \mult/o_Mult_8__I_0_i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40031 \mult/o_Mult_8__I_0_i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xEA40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_437 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40091 \mult/o_Mult_8__I_0_i8_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40027 \mult/o_Mult_8__I_0_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xE4A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_443 ( input DI1, DI0, D1, B1, B0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40092 \genadder[0].adder/i4946_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \genadder[0].adder/i4945_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre20063 \genadder[0].adder/o_Accumulator__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[0].adder/o_Accumulator__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_444 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40006 \genadder[0].adder/i4943_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \genadder[0].adder/i4944_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[0].adder/o_Accumulator__i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[0].adder/o_Accumulator__i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_446 ( input DI1, DI0, C1, B1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40066 \genadder[0].adder/i4941_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \genadder[0].adder/i4942_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[0].adder/o_Accumulator__i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[0].adder/o_Accumulator__i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_0__adder_SLICE_449 ( input DI1, DI0, D1, B1, C0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40092 \genadder[0].adder/i4938_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \genadder[0].adder/i4939_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20063 \genadder[0].adder/o_Accumulator__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[0].adder/o_Accumulator__i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_451 ( input DI1, DI0, B1, A1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40057 \genadder[0].adder/i4934_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \genadder[0].adder/i4935_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[0].adder/o_Accumulator__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[0].adder/o_Accumulator__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_453 ( input DI1, DI0, D1, B1, C0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40097 \genadder[0].adder/i4932_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \genadder[0].adder/i4933_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20063 \genadder[0].adder/o_Accumulator__i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[0].adder/o_Accumulator__i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_455 ( input DI1, DI0, D1, B1, D0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40097 \genadder[0].adder/i4928_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \genadder[0].adder/i4931_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[0].adder/o_Accumulator__i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[0].adder/o_Accumulator__i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_457 ( input DI1, DI0, B1, A1, D0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40064 \genadder[0].adder/i4915_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \genadder[0].adder/i4926_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20063 \genadder[0].adder/o_Accumulator__i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[0].adder/o_Accumulator__i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_0__adder_SLICE_459 ( input DI0, D0, B0, CE, LSR, CLK, output 
    Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40054 \genadder[0].adder/i4907_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20063 \genadder[0].adder/o_Accumulator__i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_0__adder_SLICE_460 ( input DI1, DI0, D1, B1, C0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40097 \genadder[0].adder/i4947_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \genadder[0].adder/i4894_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20063 \genadder[0].adder/o_Accumulator__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20063 \genadder[0].adder/o_Accumulator__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_461 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4463_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i4500_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i2 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_462 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4498_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i4499_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_464 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4496_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i4497_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_466 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4494_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i4495_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_468 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4492_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i4493_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_470 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4490_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i4491_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_472 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 i4488_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 i4489_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_474 ( input DI1, DI0, D1, C1, B1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40070 i4486_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i4487_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module sample_output_dac_SLICE_480 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40100 i1_3_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40101 \sample_output/dac/i1_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xECCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x0116") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_481 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40102 \sample_output/dac/i1_3_lut_4_lut_adj_463 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40103 \sample_output/dac/i1_4_lut_4_lut_adj_465 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0x0102") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0x8A80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_482 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40104 i6623_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40105 i42_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0xDDD9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_484 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40106 i7126_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 i48_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0x575F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0x2E0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_485 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40108 i6547_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40109 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xEFAB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_486 ( input D1, C1, B1, A1, D0, C0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40110 \sample_output/dac/n10375_bdd_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40111 \sample_output/dac/i6811_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xEE50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_487 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40112 \sample_output/dac/Current_Bit[1]_bdd_4_lut_113 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40113 \sample_output/dac/i6823_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xEC64") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_488 ( input D0, C0, B0, A0, output F0 );

  lut40114 \sample_output/dac/Current_Bit_4__I_0_i31_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0x7250") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_489 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40115 \sample_output/dac/Current_Bit_4__I_0_i15_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40116 \sample_output/dac/n10381_bdd_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xE4A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xE5E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_491 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40117 \sample_output/dac/Current_Bit[1]_bdd_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40099 \sample_output/dac/i6814_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0xBBC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_492 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40118 \sample_output/dac/n10387_bdd_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40119 \sample_output/dac/Current_Bit[0]_bdd_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xE3E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xAFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_494 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40120 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40121 \sample_output/dac/i6537_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0x7737") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_497 ( input D1, C1, B1, A1, D0, C0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40122 \sample_output/dac/i1_4_lut_4_lut_adj_467 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40123 \sample_output/dac/i2_3_lut_adj_471 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xB333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xAFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_498 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40124 \sample_output/dac/i3_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40125 \sample_output/dac/i21_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0x0FC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_499 ( input C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40126 \sample_output/dac/i1_2_lut_adj_459 ( .A(GNDI), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40127 \sample_output/dac/i4362_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xE0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_500 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40128 i1_4_lut_adj_481( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40129 i1_2_lut_3_lut_adj_484( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xF3FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xDDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_501 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40130 i1_4_lut_adj_490( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40131 i1_2_lut_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xFB00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_502 ( input D0, C0, B0, A0, output F0 );

  lut40132 i7330_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0x5F57") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_503 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40133 i1_4_lut_adj_485( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40134 i1377_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0x88A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_504 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40135 i7210_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 i6583_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0x5557") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_505 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40136 i3_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40137 i6571_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0x080A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_506 ( input D1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40138 \genadder[1].adder/i886_2_lut_2_lut ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 i6545_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0xFF33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_507 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40139 i1_4_lut_adj_487( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40140 i6927_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0x7300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0xEECF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_508 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40141 i1_2_lut_2_lut_adj_488( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40142 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0xF0FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0x2317") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_510 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40143 \sample_position/i5707_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40144 \sample_position/i5719_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0xC0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0xA0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_511 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40145 \sample_position/i5724_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40146 \sample_position/i7117_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0xCF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_512 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40147 \sample_position/i7241_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40148 \sample_position/i1_2_lut_2_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0x020F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_514 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40149 \sample_position/i6925_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40150 \sample_position/i6557_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0xFF01") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_516 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40151 \sample_position.i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40152 \sample_position/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0x77F7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_518 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40153 \sample_position/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40154 \sample_position/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0x00C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0xEAFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_520 ( input D1, C1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40155 \sample_position/LessThan_5_i30_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40156 \sample_position/LessThan_5_i28_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0xD4D4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_522 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40157 \sample_position/LessThan_5_i26_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40158 \sample_position/LessThan_5_i24_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_524 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40159 \sample_position/LessThan_5_i22_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \sample_position/LessThan_5_i20_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40160 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_526 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40157 \sample_position/LessThan_5_i18_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \sample_position/LessThan_5_i16_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_528 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40161 \sample_position/LessThan_5_i14_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \sample_position/LessThan_5_i12_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_530 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40157 \sample_position/LessThan_5_i10_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \sample_position/LessThan_5_i8_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_532 ( input D1, C1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40157 \sample_position/LessThan_5_i6_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40162 \sample_position/LessThan_5_i4_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  LUT4 #("0x50D4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_534 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40163 \sample_position.i1_4_lut_adj_474 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40164 \sample_position/i1_2_lut_adj_475 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  LUT4 #("0x31FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40164 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_536 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40165 i1_4_lut_adj_498( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40166 \sample_position/i944_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40165 ( input A, B, C, D, output Z );

  LUT4 #("0x7377") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40166 ( input A, B, C, D, output Z );

  LUT4 #("0xFEAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_538 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40167 \sample_position/i1_4_lut_adj_476 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40168 \sample_position/i3_4_lut_adj_477 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40167 ( input A, B, C, D, output Z );

  LUT4 #("0xEAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40168 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_539 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40093 \sample_position/i2_2_lut_adj_478 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_541 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40169 \sample_position/i949_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40170 \sample_position/i3_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40169 ( input A, B, C, D, output Z );

  LUT4 #("0xFE00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40170 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_542 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40171 \sample_output/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40134 \sample_output/i1_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  LUT4 #("0x80A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_543 ( input B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40172 i4_1_lut( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40173 \sample_output.i4393_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40173 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_544 ( input D1, C1, B1, A1, D0, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40174 \sample_output/dac/i1_4_lut_4_lut_adj_466 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40175 \sample_output/i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  LUT4 #("0x5575") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40175 ( input A, B, C, D, output Z );

  LUT4 #("0x00A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_546 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40176 \sample_output/dac/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40177 \sample_output/dac/i6581_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40176 ( input A, B, C, D, output Z );

  LUT4 #("0xABFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40177 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_547 ( input DI1, C1, D0, C0, B0, A0, CE, LSR, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \sample_output.dac.SLICE_547_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40178 \sample_output/dac/i2_3_lut_4_lut_adj_470 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/SM_DAC_Out_i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  LUT4 #("0x0014") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_548 ( input D1, C1, B1, A1, D0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40179 \sample_output/dac/i2_3_lut_4_lut_adj_469 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40065 \sample_output/dac/i1_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_550 ( input C0, B0, output F0 );
  wire   GNDI;

  lut40180 \sample_output/dac/i7192_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_551 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40181 i511_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40182 i3217_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  LUT4 #("0xDF55") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40182 ( input A, B, C, D, output Z );

  LUT4 #("0x0426") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_552 ( input D1, C1, B1, A1, D0, C0, output F0, 
    F1 );
  wire   GNDI;

  lut40183 i1_4_lut_adj_483( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40184 \sample_output/dac/i5114_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  LUT4 #("0x1302") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40184 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_554 ( input D1, C1, B1, A1, D0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40185 \sample_output/dac/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40054 \sample_output/dac/i1_2_lut_adj_460 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_556 ( input D1, C1, B1, A1, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40186 \sample_output/dac/i7214_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40187 \sample_output/dac/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40186 ( input A, B, C, D, output Z );

  LUT4 #("0xEFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40187 ( input A, B, C, D, output Z );

  LUT4 #("0x4040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_558 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40096 \sample_output/dac/i4286_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_dac_SLICE_559 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40124 \sample_output/dac/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40188 i3221_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  LUT4 #("0x44A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_560 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40189 \sample_output.dac.i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40190 \sample_output/dac/i1_3_lut_4_lut_adj_464 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40189 ( input A, B, C, D, output Z );

  LUT4 #("0xBBBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40190 ( input A, B, C, D, output Z );

  LUT4 #("0x4FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_562 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40191 i1_4_lut_adj_479( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40192 i32_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  LUT4 #("0x40C8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40192 ( input A, B, C, D, output Z );

  LUT4 #("0x8387") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_563 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40193 i1_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40194 i6569_2_lut_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40194 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_564 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40195 i1_4_lut_adj_480( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40196 i6608_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40195 ( input A, B, C, D, output Z );

  LUT4 #("0x0E0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40196 ( input A, B, C, D, output Z );

  LUT4 #("0xF0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_566 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40197 i6917_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40198 i7243_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  LUT4 #("0xD800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40198 ( input A, B, C, D, output Z );

  LUT4 #("0x0022") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_568 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40199 i1_4_lut_adj_491( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40200 i6903_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40199 ( input A, B, C, D, output Z );

  LUT4 #("0xD800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40200 ( input A, B, C, D, output Z );

  LUT4 #("0x4151") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_572 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40201 i1_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40202 i5130_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  LUT4 #("0x3733") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40202 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_574 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40203 i1_4_lut_adj_486( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40204 i1_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40203 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40204 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_577 ( input DI1, D1, C1, B1, A1, C0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40205 i1_4_lut_adj_496( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40206 i6916_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_Ready ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40206 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_579 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40207 i20_4_lut_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40208 i6902_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40207 ( input A, B, C, D, output Z );

  LUT4 #("0x0C30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40208 ( input A, B, C, D, output Z );

  LUT4 #("0x0050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_580 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40209 i1_4_lut_4_lut_adj_492( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40210 i22_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  LUT4 #("0x7333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40210 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_584 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40211 i9_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40212 i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40212 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_585 ( input D0, C0, B0, A0, output F0 );

  lut40213 i6_4_lut_adj_493( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_586 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40214 i6884_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40215 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40215 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_588 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40216 i1_4_lut_adj_495( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 i1_2_lut_adj_497( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40216 ( input A, B, C, D, output Z );

  LUT4 #("0x00EC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_590 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40217 \adc/i2_3_lut_4_lut_adj_458 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40218 \adc/i_SPI_Data_I_0_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40217 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40218 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_592 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40219 \adc/i7229_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40220 \adc/i7226_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40219 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40220 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_593 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40221 \adc/i1_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40222 \adc/equal_782_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40221 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40222 ( input A, B, C, D, output Z );

  LUT4 #("0xEFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_594 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40223 \adc/i7300_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40224 \adc/i7306_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40223 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40224 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_595 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40221 \adc/i1_2_lut_3_lut_adj_453 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40225 \adc/equal_791_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40225 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_596 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40226 \adc/i7276_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40227 \adc/i7282_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40226 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40227 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_597 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40228 \adc/i1_2_lut_3_lut_adj_454 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40229 \adc/equal_821_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40228 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40229 ( input A, B, C, D, output Z );

  LUT4 #("0xFFDF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_598 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40230 \adc/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40231 \adc/equal_821_i8_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40230 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40231 ( input A, B, C, D, output Z );

  LUT4 #("0xCCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_600 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40232 \adc/i7198_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40233 \adc/i7195_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40232 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40233 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_601 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40221 \adc/i1_2_lut_3_lut_adj_450 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40234 \adc/equal_788_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40234 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_602 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40235 \adc/i7303_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40233 \adc/i7164_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40235 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_603 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40236 \adc/i1_2_lut_3_lut_adj_451 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 \adc/equal_829_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40237 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_604 ( input D0, A0, output F0 );
  wire   GNDI;

  lut40238 \adc/i7309_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  LUT4 #("0x0055") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_606 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40239 \adc/i1_2_lut_3_lut_adj_452 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40240 \adc/equal_809_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40239 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40240 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_607 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40241 \adc/i7175_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40242 \adc/i7138_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40241 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40242 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_608 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40228 \adc/i1_2_lut_3_lut_adj_455 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40243 \adc/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40243 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_609 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40244 \adc/i7279_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40245 \adc/i7258_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40245 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_611 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40246 \adc.i7294_2_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40247 \adc.i7207_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40246 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40247 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_612 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40248 \adc/i1_2_lut_3_lut_adj_456 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40249 \adc/i4948_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  LUT4 #("0xDFDF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40249 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_614 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40250 \adc/i7238_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40251 \adc/equal_791_i11_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40250 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40251 ( input A, B, C, D, output Z );

  LUT4 #("0xFF55") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_617 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40252 \adc.i7270_2_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40253 \adc.i7119_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40252 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40253 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_618 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40254 \adc/i7158_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40255 \adc/i7285_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40254 ( input A, B, C, D, output Z );

  LUT4 #("0x0505") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40255 ( input A, B, C, D, output Z );

  LUT4 #("0x0033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_620 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40256 \adc/i1_3_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40257 \adc/i3_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40256 ( input A, B, C, D, output Z );

  LUT4 #("0x00F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40257 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_622 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40258 \adc/i996_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40259 \adc/i7204_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/Receive_Bit_i0_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40258 ( input A, B, C, D, output Z );

  LUT4 #("0x6AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40259 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_623 ( input DI1, D1, C1, C0, A0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40260 \adc/i1011_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40261 \adc/equal_788_i11_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \adc/Receive_Byte_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40260 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40261 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_624 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40262 \adc/i7235_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40263 \adc/equal_809_i9_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40262 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40263 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_626 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40264 \adc/i7184_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40265 \adc/i6585_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40264 ( input A, B, C, D, output Z );

  LUT4 #("0x0FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40265 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_628 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40266 \adc.i7172_2_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40267 \adc/i7201_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40266 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40267 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_630 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40268 \adc/i7181_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40269 \adc/i7261_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40268 ( input A, B, C, D, output Z );

  LUT4 #("0x0033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40269 ( input A, B, C, D, output Z );

  LUT4 #("0x0505") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_632 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40270 \adc.i7149_2_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40271 \adc/i7170_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40270 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40271 ( input A, B, C, D, output Z );

  LUT4 #("0x0515") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_634 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40272 \adc/i7246_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40273 \adc/i2_3_lut_4_lut_adj_457 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40272 ( input A, B, C, D, output Z );

  LUT4 #("0x3111") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40273 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_635 ( input DI1, D1, C1, B1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40274 \adc/i7350_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40275 \adc.i4358_3_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20063 \adc/SM_ADC_In_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40274 ( input A, B, C, D, output Z );

  LUT4 #("0xCFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40275 ( input A, B, C, D, output Z );

  LUT4 #("0x0233") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_636 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40276 \mult/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40150 \mult/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40276 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_637 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40277 \mult/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40278 \mult/i2_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40277 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40278 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_638 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40279 \mult/i7_4_lut_adj_449 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40280 \mult/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40279 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40280 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_639 ( input D0, C0, B0, A0, output F0 );

  lut40281 \mult/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40281 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_640 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40282 \sample_position.i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40283 \sample_position/i1_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40282 ( input A, B, C, D, output Z );

  LUT4 #("0x2F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40283 ( input A, B, C, D, output Z );

  LUT4 #("0x45FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_642 ( input D1, C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40284 \sample_position/i1_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40285 \sample_position/i4326_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40284 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40285 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_643 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40286 i7321_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40287 \sample_position.i4258_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40286 ( input A, B, C, D, output Z );

  LUT4 #("0x575F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40287 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_645 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40288 i4563_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40289 \sample_position.i7348_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40288 ( input A, B, C, D, output Z );

  LUT4 #("0x555D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40289 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_647 ( input DI1, B1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40008 SLICE_647_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40290 i7324_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_position/SM_Sample_Position__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40290 ( input A, B, C, D, output Z );

  LUT4 #("0x3373") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_648 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40291 \adc/i7132_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40285 \adc/i7141_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40291 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_649 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40292 \adc/i7129_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40293 \adc/i7144_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40292 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40293 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_654 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40294 \adc/i7252_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40295 \adc/i7255_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40294 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40295 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_657 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40296 \adc/i7220_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40297 \adc/i7217_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40296 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40297 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_659 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40296 \adc/i7178_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40227 \adc/i7187_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module adc_SLICE_660 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40298 \adc/i7267_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40299 \adc/i7264_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40298 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40299 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_662 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40300 \adc/i7291_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40301 \adc/i7288_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40300 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40301 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_664 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40302 \adc/i7315_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40301 \adc/i7312_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40302 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_668 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40303 \adc/i7161_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40304 \adc/i7152_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40303 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40304 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_670 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40305 \adc/i7167_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40306 \adc/i7155_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40305 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40306 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_675 ( input DI1, C1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40307 \adc/i5143_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40308 \adc/i7232_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20052 \adc/Receive_Bit_i0_i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40307 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40308 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_676 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40309 \mult/i1_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40310 \mult/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40309 ( input A, B, C, D, output Z );

  LUT4 #("0xFF98") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40310 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_678 ( input DI1, B1, A1, D0, C0, B0, A0, CE, LSR, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40057 \sample_output/i1_2_lut_adj_473 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40311 \sample_output/i2_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \sample_output/SM_Sample_Output__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40311 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_679 ( input DI1, B1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40008 SLICE_679_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40312 i1_4_lut_adj_489( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 DAC_Send_c( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40312 ( input A, B, C, D, output Z );

  LUT4 #("0xAF08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_684 ( input DI1, D1, C1, B1, A1, D0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40313 mux_35_Mux_1_i15_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40314 i12_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 SM_Top__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40313 ( input A, B, C, D, output Z );

  LUT4 #("0xB830") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40314 ( input A, B, C, D, output Z );

  LUT4 #("0x44EE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_685 ( input DI1, D1, C1, B1, A1, C0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40315 mux_35_Mux_2_i15_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40316 i5128_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 SM_Top__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40315 ( input A, B, C, D, output Z );

  LUT4 #("0xEE0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40316 ( input A, B, C, D, output Z );

  LUT4 #("0xEAEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_686 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40317 mux_35_Mux_3_i10_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40318 i6901_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40317 ( input A, B, C, D, output Z );

  LUT4 #("0x5A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40318 ( input A, B, C, D, output Z );

  LUT4 #("0x2E00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_688 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40319 \adc/i7249_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40320 \adc/i7147_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40319 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40320 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_690 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40321 \adc/i7273_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40322 \adc/i7297_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40321 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40322 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_691 ( input B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40172 \adc/i879_1_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40323 \adc.i7318_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40323 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_696 ( input D0, C0, B0, A0, output F0 );

  lut40324 i6606_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40324 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_698 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40184 i1_2_lut_adj_494( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_699 ( input DI1, B1, D0, B0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40008 SLICE_699_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 mux_35_Mux_1_i9_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \mult/o_Comb_Muted ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module adc_SLICE_700 ( input D0, A0, output F0 );
  wire   GNDI;

  lut40325 \adc/i_SPI_CS_I_0_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40325 ( input A, B, C, D, output Z );

  LUT4 #("0x55AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_701 ( input D1, B1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40326 \sample_output/dac/i1_2_lut_adj_468 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \adc/i4456_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40326 ( input A, B, C, D, output Z );

  LUT4 #("0xCCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_705 ( input D1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40327 \adc/i7135_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40328 \adc/i7223_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40327 ( input A, B, C, D, output Z );

  LUT4 #("0x0055") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40328 ( input A, B, C, D, output Z );

  LUT4 #("0x0055") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_706 ( output F0 );
  wire   GNDI;

  lut40329 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40329 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_707 ( input DI1, D1, C1, B1, A1, C0, A0, CE, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40330 \mult/o_Mult_8__I_0_i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40261 i4589_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i8 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40330 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_709 ( input DI1, D1, C1, B1, A1, B0, A0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40080 i4131_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40331 i6555_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 SM_Top__i0( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40331 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_710 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40022 \sample_position/i5726_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \sample_position/i5694_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_711 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40332 \sample_position/i5721_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \sample_position/i5699_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40332 ( input A, B, C, D, output Z );

  LUT4 #("0xACAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_712 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40333 \sample_position/i5697_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \sample_position/i5731_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40333 ( input A, B, C, D, output Z );

  LUT4 #("0xCACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_713 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40334 \sample_position/i5723_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40335 \sample_position/i5718_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40334 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40335 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_714 ( input D1, C1, B1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40013 \sample_position/i5685_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \sample_position/i5690_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_715 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40067 \sample_position/i5705_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \sample_position/i5687_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_717 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40336 \sample_position/i5702_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40337 \sample_position/i5711_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40336 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40337 ( input A, B, C, D, output Z );

  LUT4 #("0xCF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_718 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40019 \sample_position/i5709_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 \sample_position/i5714_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_719 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40338 \sample_position/i5700_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40339 \sample_position/i5692_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40338 ( input A, B, C, D, output Z );

  LUT4 #("0xAF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40339 ( input A, B, C, D, output Z );

  LUT4 #("0xC0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_720 ( input DI1, D1, B0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40010 \sample_position.SLICE_720_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \sample_position/unary_minus_6_inv_0_i1_1_lut ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i0 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_721 ( input D1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40340 \sample_position/i5706_2_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40337 \sample_position/i5727_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40340 ( input A, B, C, D, output Z );

  LUT4 #("0xBB00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_722 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40338 \sample_position/i5695_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40341 \sample_position/i5728_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40341 ( input A, B, C, D, output Z );

  LUT4 #("0xAA22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_725 ( input D1, C1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40342 \sample_position/i4992_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \sample_position/i4975_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40342 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_726 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \sample_position/i5000_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \sample_position/i4980_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_727 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40343 \sample_position/unary_minus_6_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40344 \sample_position/unary_minus_6_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40343 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40344 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_728 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \sample_position/i4993_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \sample_position/i4977_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_729 ( input C1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40345 \sample_position/i4985_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \sample_position/i4982_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40345 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_730 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40095 \sample_position/i4981_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_732 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40346 \sample_position/i5729_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40347 \sample_position/i5703_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40346 ( input A, B, C, D, output Z );

  LUT4 #("0xD0D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40347 ( input A, B, C, D, output Z );

  LUT4 #("0xA0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_733 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40348 \sample_position/i5691_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40349 \sample_position/i5710_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40348 ( input A, B, C, D, output Z );

  LUT4 #("0xA0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40349 ( input A, B, C, D, output Z );

  LUT4 #("0xCC44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_734 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40350 \sample_position/i5712_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40347 \sample_position/i5688_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40350 ( input A, B, C, D, output Z );

  LUT4 #("0x8A8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_739 ( input D1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 \sample_position/i4988_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \sample_position/i4984_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_740 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40343 \sample_position/unary_minus_6_inv_0_i12_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40344 \sample_position/unary_minus_6_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_742 ( input D1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \sample_position/i4989_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \sample_position/i4987_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_744 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40061 \sample_position/i4991_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \sample_position/i4990_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_755 ( input DI1, A1, C0, A0, CE, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40003 \sample_position.SLICE_755_K1 ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \sample_position/i4893_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 Next_Sample_c( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_756 ( input C1, A0, output F0, F1 );
  wire   GNDI;

  lut40307 \sample_position/unary_minus_6_inv_0_i14_1_lut ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \sample_position/unary_minus_6_inv_0_i16_1_lut ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_758 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40343 \sample_position/unary_minus_6_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40344 \sample_position/unary_minus_6_inv_0_i15_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_759 ( input DI1, A1, D0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \sample_position.SLICE_759_K1 ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40351 \sample_position/i5716_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/o_Freq_Too_High ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40351 ( input A, B, C, D, output Z );

  LUT4 #("0xAACC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_762 ( input A1, A0, output F0, F1 );
  wire   GNDI;

  lut40352 \sample_position/unary_minus_6_inv_0_i11_1_lut ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \sample_position/unary_minus_6_inv_0_i13_1_lut ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40352 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_764 ( input D1, A0, output F0, F1 );
  wire   GNDI;

  lut40343 \sample_position/unary_minus_6_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \sample_position/unary_minus_6_inv_0_i6_1_lut ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_765 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40353 i6589_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \sample_position/i2_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40353 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_767 ( input A0, output F0 );
  wire   GNDI;

  lut40005 \sample_position/unary_minus_6_inv_0_i7_1_lut ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_771 ( input D0, output F0 );
  wire   GNDI;

  lut40344 \sample_position/unary_minus_6_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_773 ( input D0, output F0 );
  wire   GNDI;

  lut40344 \sample_position/unary_minus_6_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  sample_position_sp_ram_lscc_ram_dq_inst_inst0_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_SLICE_776
   ( input DI1, D1, B1, C0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40354 \sample_position/i4951_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40355 
    \sample_position/sp_ram/lscc_ram_dq_inst/inst0/PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0/wr_en_i_I_0_1_lut 
    ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \sample_position/Sample_Pos_WE_c ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40354 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40355 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_779 ( input D1, C1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40356 \sample_output/dac/i6812_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40278 \sample_output/dac/i6577_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40356 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_782 ( input DI1, D1, C1, B1, A1, C0, B0, CE, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40357 \sample_output/dac/i1_4_lut_adj_461 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40056 \sample_output/dac/i1_2_lut_adj_462 ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20052 \sample_output/dac/o_Ready ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40357 ( input A, B, C, D, output Z );

  LUT4 #("0xB010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_785 ( input DI1, D1, C1, B1, A1, B0, A0, CE, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40358 \sample_output/dac/i5464_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40062 \sample_output/dac/i5446_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/dac/Current_Bit_854__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40358 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_789 ( input D1, C1, B1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40019 \sample_output/dac/i6821_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \sample_output/dac/i6815_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_dac_SLICE_791 ( input C1, B1, A1, D0, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40333 \sample_output/dac/i6824_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \sample_output/dac/i6820_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_dac_SLICE_794 ( input DI1, D1, C1, B1, A1, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40359 i4503_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40331 \sample_output/dac/SM_DAC_Out_4__I_0_62_i8_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/dac/SM_DAC_Out_i3 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40359 ( input A, B, C, D, output Z );

  LUT4 #("0x0A3A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_795 ( input DI1, B1, D0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40008 SLICE_795_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40360 i1_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \sample_position/o_Sample_Ready ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40360 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_796 ( input DI1, B1, A1, C0, B0, A0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40361 SLICE_796_K1( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40362 i6926_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/DAC_Send_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40361 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40362 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_800 ( input DI1, D1, C1, B1, D0, C0, B0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40363 i1_2_lut_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40364 i1_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20063 \genadder[0].adder/SM_Adder__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40363 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40364 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_801 ( input DI1, D1, C1, B1, D0, C0, B0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40365 \genadder[1].adder/i4914_3_lut_3_lut_3_lut ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40366 i2_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20063 \genadder[1].adder/SM_Adder__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40365 ( input A, B, C, D, output Z );

  LUT4 #("0x00C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40366 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_802 ( input DI1, D1, C1, A1, D0, B0, A0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40336 mux_35_Mux_3_i15_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40367 i6551_2_lut_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 SM_Top__i3( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40367 ( input A, B, C, D, output Z );

  LUT4 #("0xEE00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_804 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40368 i2_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40368 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_806 ( output F0 );
  wire   GNDI;

  lut40369 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40369 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_809 ( input DI1, B1, D0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40008 \adc.SLICE_809_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40238 \adc/i7123_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20052 \adc/CS_Stable_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module adc_SLICE_812 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40370 i4470_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40371 \adc/i4895_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/o_Data_Received ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40370 ( input A, B, C, D, output Z );

  LUT4 #("0xCC8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40371 ( input A, B, C, D, output Z );

  LUT4 #("0xFF33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_813 ( input DI1, D1, A1, D0, B0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40055 \genadder[1].adder/i5029_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40372 \adc/i1_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20063 \genadder[1].adder/o_Accumulator__i18 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40372 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_814 ( input DI1, C1, D0, B0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut4 \adc.SLICE_814_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40373 \adc/i1359_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \adc/Clock_State_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40373 ( input A, B, C, D, output Z );

  LUT4 #("0x4488") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_815 ( input DI1, C1, D0, C0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut4 \adc.SLICE_815_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40374 \adc/i1355_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/CS_State_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40374 ( input A, B, C, D, output Z );

  LUT4 #("0x50A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_816 ( input DI1, C1, C0, B0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut4 \adc.SLICE_816_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40375 \adc/i1357_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \adc/Data_State_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40375 ( input A, B, C, D, output Z );

  LUT4 #("0x6060") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_817 ( input A0, output F0 );
  wire   GNDI;

  lut40005 \mult/sub_4_inv_0_i5_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_818 ( input C0, output F0 );
  wire   GNDI;

  lut40355 \mult/sub_4_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_819 ( input A0, output F0 );
  wire   GNDI;

  lut40005 \mult/sub_4_inv_0_i3_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_820 ( input DI1, C1, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut4 \mult.SLICE_820_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \mult/sub_4_inv_0_i4_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \adc/r_Bytes_In[0]__i38 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module mult_SLICE_821 ( input DI1, D1, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40010 \mult.SLICE_821_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \mult/sub_4_inv_0_i9_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 Harmonic_Scale_i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module mult_SLICE_822 ( input A1, A0, output F0, F1 );
  wire   GNDI;

  lut40352 \mult/sub_4_inv_0_i2_1_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \mult/sub_4_inv_0_i1_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_824 ( input A0, output F0 );
  wire   GNDI;

  lut40005 \mult/sub_4_inv_0_i7_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_825 ( input B0, output F0 );
  wire   GNDI;

  lut40047 \mult/sub_4_inv_0_i8_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_826 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40376 i4507_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40377 \mult/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 Start_Mult_Scaler_c( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40376 ( input A, B, C, D, output Z );

  LUT4 #("0x70F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40377 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_827 ( input DI1, A1, D0, B0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40003 \mult.SLICE_827_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40378 \mult/i1371_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Reset_Mult_Scaler_c( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40378 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_830 ( input DI1, B1, D0, C0, B0, A0, CE, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40008 \mult.SLICE_830_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40379 \mult/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/r_Bytes_In[0]__i67 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40379 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_832 ( input DI1, C1, D0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 SLICE_832_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40380 i1_2_lut_adj_499( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Adder_Clear_c( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40380 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_833 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40381 SLICE_833_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40382 i23_3_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/SM_DAC_Out_i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40381 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40382 ( input A, B, C, D, output Z );

  LUT4 #("0xCDCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  sample_position_sp_ram_lscc_ram_dq_inst_inst0_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, 
    WADDR7, WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, WDATA15, 
    WDATA14, WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, 
    WDATA6, WDATA5, WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, 
    WCLKE, WCLK, WE, output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, 
    RDATA10, RDATA9, RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, 
    RDATA1, RDATA0 );
  wire   GNDI, RADDR7_dly, RCLK_dly, RADDR6_dly, RADDR5_dly, RADDR4_dly, 
         RADDR3_dly, RADDR2_dly, RADDR1_dly, RADDR0_dly, WADDR7_dly, WCLK_dly, 
         WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, WADDR2_dly, 
         WADDR1_dly, WADDR0_dly, WDATA15_dly, WDATA14_dly, WDATA13_dly, 
         WDATA12_dly, WDATA11_dly, WDATA10_dly, WDATA9_dly, WDATA8_dly, 
         WDATA7_dly, WDATA6_dly, WDATA5_dly, WDATA4_dly, WDATA3_dly, 
         WDATA2_dly, WDATA1_dly, WDATA0_dly, RCLKE_dly, RE_dly, WCLKE_dly, 
         WE_dly;

  EBR_B_B 
    \sample_position/sp_ram/lscc_ram_dq_inst/inst0/PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(GNDI), .RADDR9(GNDI), .RADDR8(GNDI), .RADDR7(RADDR7_dly), 
    .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), .RADDR4(RADDR4_dly), 
    .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), .RADDR1(RADDR1_dly), 
    .RADDR0(RADDR0_dly), .WADDR10(GNDI), .WADDR9(GNDI), .WADDR8(GNDI), 
    .WADDR7(WADDR7_dly), .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), 
    .WADDR4(WADDR4_dly), .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), 
    .WADDR1(WADDR1_dly), .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), 
    .MASK_N13(GNDI), .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), 
    .MASK_N9(GNDI), .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), 
    .MASK_N5(GNDI), .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), 
    .MASK_N1(GNDI), .MASK_N0(GNDI), .WDATA15(WDATA15_dly), 
    .WDATA14(WDATA14_dly), .WDATA13(WDATA13_dly), .WDATA12(WDATA12_dly), 
    .WDATA11(WDATA11_dly), .WDATA10(WDATA10_dly), .WDATA9(WDATA9_dly), 
    .WDATA8(WDATA8_dly), .WDATA7(WDATA7_dly), .WDATA6(WDATA6_dly), 
    .WDATA5(WDATA5_dly), .WDATA4(WDATA4_dly), .WDATA3(WDATA3_dly), 
    .WDATA2(WDATA2_dly), .WDATA1(WDATA1_dly), .WDATA0(WDATA0_dly), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(WE_dly), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA15) = (0:0:0,0:0:0);
    (RCLK => RDATA14) = (0:0:0,0:0:0);
    (RCLK => RDATA13) = (0:0:0,0:0:0);
    (RCLK => RDATA12) = (0:0:0,0:0:0);
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA10) = (0:0:0,0:0:0);
    (RCLK => RDATA9) = (0:0:0,0:0:0);
    (RCLK => RDATA8) = (0:0:0,0:0:0);
    (RCLK => RDATA7) = (0:0:0,0:0:0);
    (RCLK => RDATA6) = (0:0:0,0:0:0);
    (RCLK => RDATA5) = (0:0:0,0:0:0);
    (RCLK => RDATA4) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    (RCLK => RDATA2) = (0:0:0,0:0:0);
    (RCLK => RDATA1) = (0:0:0,0:0:0);
    (RCLK => RDATA0) = (0:0:0,0:0:0);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold 
      (posedge WCLK, WDATA15, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA15_dly);
    $setuphold 
      (posedge WCLK, WDATA14, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA14_dly);
    $setuphold 
      (posedge WCLK, WDATA13, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA13_dly);
    $setuphold 
      (posedge WCLK, WDATA12, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA12_dly);
    $setuphold 
      (posedge WCLK, WDATA11, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA11_dly);
    $setuphold 
      (posedge WCLK, WDATA10, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA10_dly);
    $setuphold (posedge WCLK, WDATA9, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA9_dly);
    $setuphold (posedge WCLK, WDATA8, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA8_dly);
    $setuphold (posedge WCLK, WDATA7, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA7_dly);
    $setuphold (posedge WCLK, WDATA6, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA6_dly);
    $setuphold (posedge WCLK, WDATA5, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA5_dly);
    $setuphold (posedge WCLK, WDATA4, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA4_dly);
    $setuphold (posedge WCLK, WDATA3, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA3_dly);
    $setuphold (posedge WCLK, WDATA2, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA2_dly);
    $setuphold (posedge WCLK, WDATA1, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA1_dly);
    $setuphold (posedge WCLK, WDATA0, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $setuphold (posedge WCLK, WE, 0:0:0, 0:0:0,,,, WCLK_dly, WE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B_B ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, 
    RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, 
    WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "16";
  defparam INST10.DATA_WIDTH_W = "16";

    defparam INST10.INIT_0 = "0x8C28451EB28F58F59AE12333466655C267AE0000A00000003000000020000000";

    defparam INST10.INIT_1 = "0xD5C210A38EB83999F70A2F5CD28F98F53EB881EB50A313D7CE146C28A999E51E";

    defparam INST10.INIT_2 = "0x4AE1614727AECC28551EB70AFB853AE17F5CAA3DE0A3099925C2447AB1EB2C28";

    defparam INST10.INIT_3 = "0x847A566627AE428F4F5C1666347A0147A8F51A3DAEB815C26CCC50A3F0A3CB85";

    defparam INST10.INIT_4 = "0xD28F8CCC947A65C25AE1CF5C97AE20000147B8F519997333F47A0A3D4000A51E";

    defparam INST10.INIT_5 = "0x999929997851128F0147847AB8F5EA3D4F5C1D702851FAE1B47A1B859E14C5C2";

    defparam INST10.INIT_6 = "0x95C2951E1F5CCCCCD147BB85B47AC851E3D77E1436663666CEB88C285CCCB666";

    defparam INST10.INIT_7 = "0xE14795C273336EB828F57AE1AE1426668851B47A347AC6660AE1A666B0A3851E";

    defparam INST10.INIT_8 = "0x528FE8F52E14151EF147047AA7AE53D7EC28E51E4A3D7000FE14C666C33371EB";

    defparam INST10.INIT_9 = "0xE70AB5C260001EB8D8F5E7AE1851F851F1EBE7AEB5C28666BC28FAE130A371EB";

    defparam INST10.INIT_A = "0xDA3D9000FD704EB85AE161EBB851D0A3E3D71EB813332C288AE1A5C24CCC0C28";

    defparam INST10.INIT_B = "0xFCCCFA3D5000A28FCD700A3D00A3E000C1EB9C28A1EB69998E14751E3AE163D7";

    defparam INST10.INIT_C = "0xCE14128FF7AED28F70A3670A728FB8519F5C3E14B99915C2F999D70AE333C147";

    defparam INST10.INIT_D = "0xD147CD70B9994333C70ABEB8970A09999147C5C2147A7EB8247AE5C2D9990C28";

    defparam INST10.INIT_E = "0xC0A3151E48F5F28FA47A370A0A3D628FA851EA3D5AE1CCCC98F5DB85B999D51E";

    defparam INST10.INIT_F = "0x851E07AE0F5C9333D28FEA3D90A3751EB333D000D8F54AE1E000D51E4EB853D7";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_7__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0383 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[7].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0383 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EE00E";

    defparam INST10.INIT_1 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_2 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_3 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_4 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_5 = "0xF096F096F096F096F096F096F096F096F096F096F01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_6 = "0xF096F096F096F096F096F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_7 = "0xF096F096F096F096F096F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_8 = "0xF096F096F096F096F096F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_9 = "0xF096F096F096F096F096F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_A = "0xF087F087F087F087F087F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_B = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";

    defparam INST10.INIT_C = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";

    defparam INST10.INIT_D = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";

    defparam INST10.INIT_E = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";

    defparam INST10.INIT_F = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_6__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0384 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[6].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0384 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0xB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EA40E";

    defparam INST10.INIT_1 = "0x963C963C963C963C963C963C963C963C963C963C963CB41EB41EB41EB41EB41E";

    defparam INST10.INIT_2 = "0x96A596A596A596A596A596A596A596B496B496B496B496B4963C963C963C963C";

    defparam INST10.INIT_3 = "0x96A596A596A596A596A596A596A596A596A596A596A596A596A596A596A596A5";

    defparam INST10.INIT_4 = "0x96A596A596A596A596A596A596A596A596A596A596A596A596A596A596A596A5";

    defparam INST10.INIT_5 = "0x0F1E0F1E0F1E0F1E0F3C0F3C0F3C0F3C0F3C0F3C87B487B487B496A596A596A5";

    defparam INST10.INIT_6 = "0x0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E";

    defparam INST10.INIT_7 = "0x0F0F0F0F0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E";

    defparam INST10.INIT_8 = "0x0F870F870F870F870F870F870F870F870F870F870F870F870F870F0F0F0F0F0F";

    defparam INST10.INIT_9 = "0x0F870F870F870F870F870F870F870F870F870F870F870F870F870F870F870F87";

    defparam INST10.INIT_A = "0x965A965A1ED21ED21ED20FC30FC30FC30FC30FC30FC30F870F870F870F870F87";

    defparam INST10.INIT_B = "0x965A965A965A965A965A965A965A965A965A965A965A965A965A965A965A965A";

    defparam INST10.INIT_C = "0x965A965A965A965A965A965A965A965A965A965A965A965A965A965A965A965A";

    defparam INST10.INIT_D = "0x96C396C396C396D296D296D296D296D2965A965A965A965A965A965A965A965A";

    defparam INST10.INIT_E = "0xD287D287D287D28796C396C396C396C396C396C396C396C396C396C396C396C3";

    defparam INST10.INIT_F = "0xD287D287D287D287D287D287D287D287D287D287D287D287D287D287D287D287";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_5__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0385 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[5].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0385 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x960F960F960F960F960F961E961E1E961E961E961EB41EB41EB41EB41EB40EA4";

    defparam INST10.INIT_1 = "0xA5A5A5B4A5B4A5B4A5B4A5B4A5B4A5B4A5B4A53CA53C960F960F960F960F960F";

    defparam INST10.INIT_2 = "0x3C1E3C1E3C1E3C1E3C1E3C1E3C1E2D0F2D0F2D0F2D0F2D2DA5A5A5A5A5A5A5A5";

    defparam INST10.INIT_3 = "0x873C873C1EA51EA51EA51EA51EA51EA51EA51EA53C873C873C963C963C963C1E";

    defparam INST10.INIT_4 = "0x878787878787878787878787870F870F873C873C873C873C873C873C873C873C";

    defparam INST10.INIT_5 = "0x3C693C693C693C781E5A1E5A1E5A1E5A1E5A1E5A96D296D296D287C387878787";

    defparam INST10.INIT_6 = "0xA578A578A5782DF02DF02DF02DF02DF03CE13CE13CE13CE13CE13CE13CE13C69";

    defparam INST10.INIT_7 = "0xF096F096E187E187E187E187E187E187E10FE10FE10FE10FA54BA55AA578A578";

    defparam INST10.INIT_8 = "0x5AE15AA55A2D780F780F780F780F781E781E781E781E781E781EF096F096F096";

    defparam INST10.INIT_9 = "0xC378C378C378C378C378C378C3784BF04BF04BF04BF04BF05AE15AE15AE15AE1";

    defparam INST10.INIT_A = "0x1E1E1E3C96B496B496B487A587A587A587A587A587A5C3E1C369C369C369C369";

    defparam INST10.INIT_B = "0x1EC31EC31EC31EC31EC31EC31EC31E0F1E0F1E1E1E1E1E1E1E1E1E1E1E1E1E1E";

    defparam INST10.INIT_C = "0xC396C396C396C31EC31E875A875A875A875A875A875A875A875A1EC31EC31EC3";

    defparam INST10.INIT_D = "0x5A5A5A5A5A5A4B4B4B0F4B0F4B0F4B0FC387C387C387C387C387C387C387C387";

    defparam INST10.INIT_E = "0x960F960F960F960F5AC35AC35AD25AD25AD25AD25AD25AD25AD25AD25A5A5A5A";

    defparam INST10.INIT_F = "0x87D287D287D287D287D287968796879696879687960F960F960F960F960F960F";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_4__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0386 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[4].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0386 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x1EA51EA51EA53C1E3C1E2D0F2D2DA5A5A5B4A5B4960F960F960F961E1EB40EA4";

    defparam INST10.INIT_1 = "0x963C872D0FA52D962D962D1E3C0F3C2D3C2DB4B4B4B48787870F870F871E873C";

    defparam INST10.INIT_2 = "0x87F087F09669B44BB45A3CD23CD22DA52D2D2D3C2D3C0F1E968796879696963C";

    defparam INST10.INIT_3 = "0x5A3C781EE187E187E187E11EA578B4693CE13CE11ED21ED20F4B0F4B0F4B87F0";

    defparam INST10.INIT_4 = "0x69D269D278C3786978697878F0F0F0F0C3C3C30FC31EC31E4B965AA55AA55A3C";

    defparam INST10.INIT_5 = "0xB4F0B478B478A5690F870F960F960F1E1E0F1E2D96B596B496B4872DE14BE14B";

    defparam INST10.INIT_6 = "0x4B5A4B5A4B5AD287D2A5D2B4D23CD23CC32D698769872DD22D5A3C4B3C4BB4E1";

    defparam INST10.INIT_7 = "0x9678B45A2DC32DC32DC32D1E2D1E2D1EB4A5B4A5B4B4B43CF07869E14BC34BC3";

    defparam INST10.INIT_8 = "0x2D3C6978F0E1D2C3D2D2D25AD25A4B874B874B874B3C4B3C4B3CD2A596E196F0";

    defparam INST10.INIT_9 = "0xC32DC32D4BA54BB4691E691E3C4BB4C3B4C3B4D2B45AB41E2DA52DA52DA52D3C";

    defparam INST10.INIT_A = "0x782D1E4B96D296D296DA874B870F0F870F960F960F1E5A69D2E1D2E1D2F0D278";

    defparam INST10.INIT_B = "0xA55AA55A2D963C873C873C0F3C3CF0F0F0F0E1E1E169E169E13C69B469B4782D";

    defparam INST10.INIT_C = "0x0F2D0F2D0F2D87B487B4C378C378D2695AE17887781E781E781EE187A5C3A5C3";

    defparam INST10.INIT_D = "0x9696961E961E0F874BC34BC34B4B4B5AC3B4C3B4D2A5D22D96691EF01EF01EF0";

    defparam INST10.INIT_E = "0x1E871E0F1E0F1E1ED2D2D2D2C34BC34BC30F4B874B964B960F5A1E4B96C396C3";

    defparam INST10.INIT_F = "0x87D29687960F960F960F5AD25AD25A5A4B4B4B0FC387C387875A875A875A1EC3";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_3__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0387 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[3].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0387 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x87A53C873C3C8796962D2DA50F1E963C2D973C2D8787873C3C962D2D96870EA4";

    defparam INST10.INIT_1 = "0x5AB4690FF0A5874B0FF0B4D2A5691EC31E78A5D2B4780F0F96A5B41E2DB41E0F";

    defparam INST10.INIT_2 = "0x1EE13C5AA5B41E960F2DB487B43C4BD2D2E1E14B79E05A5AC33C7887692DC396";

    defparam INST10.INIT_3 = "0xA5781E5A8787962D3C96A5B4D24B4BE1F0C3F0784B965A2DC32D69963C7887C3";

    defparam INST10.INIT_4 = "0xC3B4F00F692D87D2965A0F69B487B43C0F1ED2E1C369695AF0B4C31E5A2DA5C3";

    defparam INST10.INIT_5 = "0x0FE196E1B41E2DB4D2C3C34B4BB4F096E12D1E4B86C2873C3C1EA5A5D24B5A5A";

    defparam INST10.INIT_6 = "0x87F1B40F3C3CE1F0D24B4B2DC3B43CD22D69968F1E964B78F04B69A7693CD21E";

    defparam INST10.INIT_7 = "0xE13C1EC387C3873C3C1EE1C378A5783C87D21EE10F2DA51E78F0E1E1D20F1EF0";

    defparam INST10.INIT_8 = "0xB40F7878E1F05A870F4B87781EB4E1C3E15A783CC3871EC31E3C873C78C3690F";

    defparam INST10.INIT_9 = "0x69C3695EF02D2DE18796961F4B69C3B43CD22D4BB42D78F0C3C3D20F1EF887F0";

    defparam INST10.INIT_A = "0xB42D5A5AC3871EC31634872D784BF0962DD23C2DB43C4BD2D28796780F78B487";

    defparam INST10.INIT_B = "0xA54B3C87F0D269A53C69B4780F87D2C3D21E0F6996A51EB4694BF00F3CD2A5A5";

    defparam INST10.INIT_C = "0xC3E169963C4BA54B2D96F0E1F03C2D78B42D5AD2C396964B1E1E87A55AE15A3C";

    defparam INST10.INIT_D = "0x694BE11E3CC3A5A5E970782DB4782DB4D2C3D21E0F4B87965AD2C3A587781E3C";

    defparam INST10.INIT_E = "0x4BD2D287965A0F0FD2E15AB487E1873C5A69D2B40FF01E2DF05A690FA5D23C96";

    defparam INST10.INIT_F = "0x961E4B4BC3961EC31E1EC34B4B9E96C30F874B5A964B1E96C3C3C31E1E5A870F";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_2__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0388 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[2].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0388 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x691EA5E1B469A5693CE10FDE1E1E879686A4962D872D3C872D963C3C2D3CA4A4";

    defparam INST10.INIT_1 = "0x87D29696960F4BE35A69C3A5D2B487781EF00F3C0F2DD2E1E349F8436996781E";

    defparam INST10.INIT_2 = "0xA5DABC16784BE187B6498F611EBC4B78D2B487780EE01E2DC3E1D26B4B971E5A";

    defparam INST10.INIT_3 = "0x5A8F87C7F07969B43C5AA5967AD04B3C87E1960F4BC35A0FA5E1B43C69F0783C";

    defparam INST10.INIT_4 = "0x69C35A2D87AD5AC3692DB4BC69D21E7887B45AD22D78B4B479C22D4B96A5C369";

    defparam INST10.INIT_5 = "0x5A96A5B4F8160F78D2DA2DF0787AE11E1EB4C396A468784BC3A51EA74B4FB4E1";

    defparam INST10.INIT_6 = "0xA46869D296D269F03C5AC3783C78E1D21EF04352B478695A96F049D0781E873C";

    defparam INST10.INIT_7 = "0xB44B5A5AA53C5AB487963CD2C3F0B469694B960F692DB4874B87B4A5A7495A4B";

    defparam INST10.INIT_8 = "0x5E29D25A2D1ED21E694B960F692DD2693CF0C3B41E96A5D25AC3A5A5D22D6969";

    defparam INST10.INIT_9 = "0xE18729B096F069A5D2E12CA487F078B4C3E13CE1C3A569F096B469B45261A52D";

    defparam INST10.INIT_A = "0x2D2F875E3C5AE12D52613C9687D27887E1E54BF0B4B50FE1F1865AD2A5961EC3";

    defparam INST10.INIT_B = "0x965A4B2DE934D2D24BE1A5B41ED287E169B4D2D3694BA53C1E5BA54B693CD278";

    defparam INST10.INIT_C = "0x69F0D2C35A78A50F2D3C960F1E782DC3E5B05A96C3A569D2F0E91E3EA51F3C69";

    defparam INST10.INIT_D = "0x2D9EB46D3C78874B07701EE1B4D22DE187D31F68D629781EE12DD3865AB5E1C3";

    defparam INST10.INIT_E = "0x6996F12C7C29B4780F4B0FC387F01EE1B4D23C5AA5692D7C960F96961EB487A5";

    defparam INST10.INIT_F = "0x4BC3C3C34B96C31E1E4B964B16521E9687870FB7C3785A69D2695A786987E187";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_1__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0389 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[1].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0389 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x3C7C4BC3C3B43C4BB47C03034BF0F0B54A86A7D03CE996BE2D8F87961EA5A4A4";

    defparam INST10.INIT_1 = "0xB5E0787D2DA5C914960FD2960F0F4BB4962DF2D42D4B69F0D00D16164BF1F50A";

    defparam INST10.INIT_2 = "0x34713452C3A5C396D0C1343425472F585A2D5A7A0ECE4B975BC2941DE02CE1F1";

    defparam INST10.INIT_3 = "0x34079292E06A4BA56DB81F6894C1B49E872FAD352D961EA73CBC2D0F0F3C1F4E";

    defparam INST10.INIT_4 = "0xF1CA3CE15243F6183CB44307872D69F00F5AB48FF8651E78A4A4C36B69B60FDA";

    defparam INST10.INIT_5 = "0x3D68F02D7061BC253461F8255859965E5A3ED2782E48E1872DA5C581831A0F78";

    defparam INST10.INIT_6 = "0xC22C5A1E7CB0B4DA1E791EC3B4E13CEBB44B56215BA4D3865BCAD1483D2CB56C";

    defparam INST10.INIT_7 = "0xCB25B43CD2F37C0B0F96E15BC3873C7A1EB4F069F2850F5AAD1687BD494969C7";

    defparam INST10.INIT_8 = "0x29291EDB5B860FA5F41AF06987D2C3E53C1E78AD0F96E30DB4FCD2C33D4A69F0";

    defparam INST10.INIT_9 = "0xCB43B821AD35BC16AD52A648D22DC37DD278873C87E9D2B5E3D0A5873443693E";

    defparam INST10.INIT_A = "0x1C853A184B5A781E4721B4E1A5C796A7A1A9F14AC268D34AE068F04BCB61DA63";

    defparam INST10.INIT_B = "0x69D63C6D525287E1F16AD21F0FA569F01E4B2C0EC3D2F681A42CC378F8350FE1";

    defparam INST10.INIT_C = "0x0FC34B0FC3D3875E4B965BCA1E4FD29792388F616BD12D5A70659494C20E0FB5";

    defparam INST10.INIT_D = "0x7043928BAD342D9E0737A5E5A54B4FA14A2EC2C2B0383C963C5AC2A4C2E88F27";

    defparam INST10.INIT_E = "0x2DF88686B00B69F04B2DF4B2964B2DD20F0FB496960F39824B5AE1EBDA7078F8";

    defparam INST10.INIT_F = "0x875A1E964B1F96D7C3795EB02516F0DA2DF00C0CD2E3C32D3CD22D3CC3E3FA05";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0390 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0390 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x0BBBCB774BFFD3EE3B883211B4FFCA662ECC49DD2755514477005EBB3CFFAE44";

    defparam INST10.INIT_1 = "0xA4EEA82269FF451187FFAF55AD775FAA7BCC9900BD66D2FF94DD7077EE0082AA";

    defparam INST10.INIT_2 = "0x06667255B6DDF1EED5881766213349DDEB55C1DD20222ECCC6AA48CCA4EE68EE";

    defparam INST10.INIT_3 = "0x716629BB8C44D3EE23116CAA94DD7344CD11660096FF1CDD3566E799EB550AAA";

    defparam INST10.INIT_4 = "0x6066E977707781991EFF6711F0FF8F7778FF47333033F3CCC2EED588C5997077";

    defparam INST10.INIT_5 = "0x6ACC4FBB473377007700743348CC2B999D44D2FF84CC6BDDDF22909929BBF966";

    defparam INST10.INIT_6 = "0xE2CC3EDD9B224377CA66F6997DAA5144CB772133C6AAE8660666C0CCAC66AA00";

    defparam INST10.INIT_7 = "0x3744D2FF84CCA933FD22EC223DEE1CDD8F77BE558D55D6BB716626445C99A933";

    defparam INST10.INIT_8 = "0xA3994622E866B6DD1BAAD7AA1FEE83BBCB777344FB4459CC1233B4FFCE2269FF";

    defparam INST10.INIT_9 = "0x5366303306667166365548CC3DEEA822EB55F69935662CEE9D44C7BB743359CC";

    defparam INST10.INIT_A = "0x49DD9099BF446DBB1233B4FF9B224D992133E2CCEE00EE002ECC2FDD65335500";

    defparam INST10.INIT_B = "0x3A99BA113477FC33C0CC2ECCE1FF1FEEF0FF6E8887FF1899E0EE79EE6066F966";

    defparam INST10.INIT_C = "0x7DAA7E99CA6683BB96FF66003B88EC2292BB63554C88BC77132249DDE866E0EE";

    defparam INST10.INIT_D = "0x5277213336554733404438BB7DAA29BB48CC8E66BA11F877D6BBE4AA06660555";

    defparam INST10.INIT_E = "0x7700E0EE92BBB4FFDB669900ED33AF555BEE5FAA1EFF2A8869FF514452776177";

    defparam INST10.INIT_F = "0xC3FFA7DDEE00A8224EAA29BB47333566D2FFC488CD11BC772DFF3DEE0DDD1455";
endmodule

module pll_48_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE );
  wire   GNDI;

  PLL_B_B \pll_48/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.DIVF = "63";
  defparam INST10.DIVQ = "4";
  defparam INST10.DIVR = "0";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module reset_n ( output PADDI, input reset_n );
  wire   GNDI;

  BB_B_B \sample_output/dac/reset_n_pad.bb_inst ( .T_N(GNDI), .I(GNDI), 
    .O(PADDI), .B(reset_n));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (reset_n => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module i_ADC_CS ( output PADDI, input i_ADC_CS );
  wire   GNDI;

  BB_B_B \adc/i_ADC_CS_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(i_ADC_CS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_ADC_CS => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_mult_3 ( input A15, A14, A13, A12, A11, A10, A9, A8, 
    A7, A6, A5, A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, 
    B6, B5, B4, B3, B2, B1, B0, output O24, O23, O22, O21, O20, O19, O18, O17, 
    O16, O15, O14, O13, O12, O11, O10, O9 );
  wire   GNDI;

  MAC16_B \genadder[0].adder/mult_3 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(GNDI), 
    .D14(GNDI), .D13(GNDI), .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), 
    .D8(GNDI), .D7(GNDI), .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), 
    .D2(GNDI), .D1(GNDI), .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), 
    .DHOLD(GNDI), .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), 
    .ORSTBOT(GNDI), .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), 
    .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), 
    .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), 
    .O26(), .O25(), .O24(O24), .O23(O23), .O22(O22), .O21(O21), .O20(O20), 
    .O19(O19), .O18(O18), .O17(O17), .O16(O16), .O15(O15), .O14(O14), 
    .O13(O13), .O12(O12), .O11(O11), .O10(O10), .O9(O9), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(), .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A15 => O24) = (0:0:0,0:0:0);
    (A15 => O23) = (0:0:0,0:0:0);
    (A15 => O22) = (0:0:0,0:0:0);
    (A15 => O21) = (0:0:0,0:0:0);
    (A15 => O20) = (0:0:0,0:0:0);
    (A15 => O19) = (0:0:0,0:0:0);
    (A15 => O18) = (0:0:0,0:0:0);
    (A15 => O17) = (0:0:0,0:0:0);
    (A15 => O16) = (0:0:0,0:0:0);
    (A15 => O15) = (0:0:0,0:0:0);
    (A14 => O24) = (0:0:0,0:0:0);
    (A14 => O23) = (0:0:0,0:0:0);
    (A14 => O22) = (0:0:0,0:0:0);
    (A14 => O21) = (0:0:0,0:0:0);
    (A14 => O20) = (0:0:0,0:0:0);
    (A14 => O19) = (0:0:0,0:0:0);
    (A14 => O18) = (0:0:0,0:0:0);
    (A14 => O17) = (0:0:0,0:0:0);
    (A14 => O16) = (0:0:0,0:0:0);
    (A14 => O15) = (0:0:0,0:0:0);
    (A14 => O14) = (0:0:0,0:0:0);
    (A13 => O24) = (0:0:0,0:0:0);
    (A13 => O23) = (0:0:0,0:0:0);
    (A13 => O22) = (0:0:0,0:0:0);
    (A13 => O21) = (0:0:0,0:0:0);
    (A13 => O20) = (0:0:0,0:0:0);
    (A13 => O19) = (0:0:0,0:0:0);
    (A13 => O18) = (0:0:0,0:0:0);
    (A13 => O17) = (0:0:0,0:0:0);
    (A13 => O16) = (0:0:0,0:0:0);
    (A13 => O15) = (0:0:0,0:0:0);
    (A13 => O14) = (0:0:0,0:0:0);
    (A13 => O13) = (0:0:0,0:0:0);
    (A12 => O24) = (0:0:0,0:0:0);
    (A12 => O23) = (0:0:0,0:0:0);
    (A12 => O22) = (0:0:0,0:0:0);
    (A12 => O21) = (0:0:0,0:0:0);
    (A12 => O20) = (0:0:0,0:0:0);
    (A12 => O19) = (0:0:0,0:0:0);
    (A12 => O18) = (0:0:0,0:0:0);
    (A12 => O17) = (0:0:0,0:0:0);
    (A12 => O16) = (0:0:0,0:0:0);
    (A12 => O15) = (0:0:0,0:0:0);
    (A12 => O14) = (0:0:0,0:0:0);
    (A12 => O13) = (0:0:0,0:0:0);
    (A12 => O12) = (0:0:0,0:0:0);
    (A11 => O24) = (0:0:0,0:0:0);
    (A11 => O23) = (0:0:0,0:0:0);
    (A11 => O22) = (0:0:0,0:0:0);
    (A11 => O21) = (0:0:0,0:0:0);
    (A11 => O20) = (0:0:0,0:0:0);
    (A11 => O19) = (0:0:0,0:0:0);
    (A11 => O18) = (0:0:0,0:0:0);
    (A11 => O17) = (0:0:0,0:0:0);
    (A11 => O16) = (0:0:0,0:0:0);
    (A11 => O15) = (0:0:0,0:0:0);
    (A11 => O14) = (0:0:0,0:0:0);
    (A11 => O13) = (0:0:0,0:0:0);
    (A11 => O12) = (0:0:0,0:0:0);
    (A11 => O11) = (0:0:0,0:0:0);
    (A10 => O24) = (0:0:0,0:0:0);
    (A10 => O23) = (0:0:0,0:0:0);
    (A10 => O22) = (0:0:0,0:0:0);
    (A10 => O21) = (0:0:0,0:0:0);
    (A10 => O20) = (0:0:0,0:0:0);
    (A10 => O19) = (0:0:0,0:0:0);
    (A10 => O18) = (0:0:0,0:0:0);
    (A10 => O17) = (0:0:0,0:0:0);
    (A10 => O16) = (0:0:0,0:0:0);
    (A10 => O15) = (0:0:0,0:0:0);
    (A10 => O14) = (0:0:0,0:0:0);
    (A10 => O13) = (0:0:0,0:0:0);
    (A10 => O12) = (0:0:0,0:0:0);
    (A10 => O11) = (0:0:0,0:0:0);
    (A10 => O10) = (0:0:0,0:0:0);
    (A9 => O24) = (0:0:0,0:0:0);
    (A9 => O23) = (0:0:0,0:0:0);
    (A9 => O22) = (0:0:0,0:0:0);
    (A9 => O21) = (0:0:0,0:0:0);
    (A9 => O20) = (0:0:0,0:0:0);
    (A9 => O19) = (0:0:0,0:0:0);
    (A9 => O18) = (0:0:0,0:0:0);
    (A9 => O17) = (0:0:0,0:0:0);
    (A9 => O16) = (0:0:0,0:0:0);
    (A9 => O15) = (0:0:0,0:0:0);
    (A9 => O14) = (0:0:0,0:0:0);
    (A9 => O13) = (0:0:0,0:0:0);
    (A9 => O12) = (0:0:0,0:0:0);
    (A9 => O11) = (0:0:0,0:0:0);
    (A9 => O10) = (0:0:0,0:0:0);
    (A9 => O9) = (0:0:0,0:0:0);
    (A8 => O24) = (0:0:0,0:0:0);
    (A8 => O23) = (0:0:0,0:0:0);
    (A8 => O22) = (0:0:0,0:0:0);
    (A8 => O21) = (0:0:0,0:0:0);
    (A8 => O20) = (0:0:0,0:0:0);
    (A8 => O19) = (0:0:0,0:0:0);
    (A8 => O18) = (0:0:0,0:0:0);
    (A8 => O17) = (0:0:0,0:0:0);
    (A8 => O16) = (0:0:0,0:0:0);
    (A8 => O15) = (0:0:0,0:0:0);
    (A8 => O14) = (0:0:0,0:0:0);
    (A8 => O13) = (0:0:0,0:0:0);
    (A8 => O12) = (0:0:0,0:0:0);
    (A8 => O11) = (0:0:0,0:0:0);
    (A8 => O10) = (0:0:0,0:0:0);
    (A8 => O9) = (0:0:0,0:0:0);
    (A7 => O24) = (0:0:0,0:0:0);
    (A7 => O23) = (0:0:0,0:0:0);
    (A7 => O22) = (0:0:0,0:0:0);
    (A7 => O21) = (0:0:0,0:0:0);
    (A7 => O20) = (0:0:0,0:0:0);
    (A7 => O19) = (0:0:0,0:0:0);
    (A7 => O18) = (0:0:0,0:0:0);
    (A7 => O17) = (0:0:0,0:0:0);
    (A7 => O16) = (0:0:0,0:0:0);
    (A7 => O15) = (0:0:0,0:0:0);
    (A7 => O14) = (0:0:0,0:0:0);
    (A7 => O13) = (0:0:0,0:0:0);
    (A7 => O12) = (0:0:0,0:0:0);
    (A7 => O11) = (0:0:0,0:0:0);
    (A7 => O10) = (0:0:0,0:0:0);
    (A7 => O9) = (0:0:0,0:0:0);
    (A6 => O24) = (0:0:0,0:0:0);
    (A6 => O23) = (0:0:0,0:0:0);
    (A6 => O22) = (0:0:0,0:0:0);
    (A6 => O21) = (0:0:0,0:0:0);
    (A6 => O20) = (0:0:0,0:0:0);
    (A6 => O19) = (0:0:0,0:0:0);
    (A6 => O18) = (0:0:0,0:0:0);
    (A6 => O17) = (0:0:0,0:0:0);
    (A6 => O16) = (0:0:0,0:0:0);
    (A6 => O15) = (0:0:0,0:0:0);
    (A6 => O14) = (0:0:0,0:0:0);
    (A6 => O13) = (0:0:0,0:0:0);
    (A6 => O12) = (0:0:0,0:0:0);
    (A6 => O11) = (0:0:0,0:0:0);
    (A6 => O10) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A5 => O24) = (0:0:0,0:0:0);
    (A5 => O23) = (0:0:0,0:0:0);
    (A5 => O22) = (0:0:0,0:0:0);
    (A5 => O21) = (0:0:0,0:0:0);
    (A5 => O20) = (0:0:0,0:0:0);
    (A5 => O19) = (0:0:0,0:0:0);
    (A5 => O18) = (0:0:0,0:0:0);
    (A5 => O17) = (0:0:0,0:0:0);
    (A5 => O16) = (0:0:0,0:0:0);
    (A5 => O15) = (0:0:0,0:0:0);
    (A5 => O14) = (0:0:0,0:0:0);
    (A5 => O13) = (0:0:0,0:0:0);
    (A5 => O12) = (0:0:0,0:0:0);
    (A5 => O11) = (0:0:0,0:0:0);
    (A5 => O10) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A4 => O24) = (0:0:0,0:0:0);
    (A4 => O23) = (0:0:0,0:0:0);
    (A4 => O22) = (0:0:0,0:0:0);
    (A4 => O21) = (0:0:0,0:0:0);
    (A4 => O20) = (0:0:0,0:0:0);
    (A4 => O19) = (0:0:0,0:0:0);
    (A4 => O18) = (0:0:0,0:0:0);
    (A4 => O17) = (0:0:0,0:0:0);
    (A4 => O16) = (0:0:0,0:0:0);
    (A4 => O15) = (0:0:0,0:0:0);
    (A4 => O14) = (0:0:0,0:0:0);
    (A4 => O13) = (0:0:0,0:0:0);
    (A4 => O12) = (0:0:0,0:0:0);
    (A4 => O11) = (0:0:0,0:0:0);
    (A4 => O10) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A3 => O24) = (0:0:0,0:0:0);
    (A3 => O23) = (0:0:0,0:0:0);
    (A3 => O22) = (0:0:0,0:0:0);
    (A3 => O21) = (0:0:0,0:0:0);
    (A3 => O20) = (0:0:0,0:0:0);
    (A3 => O19) = (0:0:0,0:0:0);
    (A3 => O18) = (0:0:0,0:0:0);
    (A3 => O17) = (0:0:0,0:0:0);
    (A3 => O16) = (0:0:0,0:0:0);
    (A3 => O15) = (0:0:0,0:0:0);
    (A3 => O14) = (0:0:0,0:0:0);
    (A3 => O13) = (0:0:0,0:0:0);
    (A3 => O12) = (0:0:0,0:0:0);
    (A3 => O11) = (0:0:0,0:0:0);
    (A3 => O10) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A2 => O24) = (0:0:0,0:0:0);
    (A2 => O23) = (0:0:0,0:0:0);
    (A2 => O22) = (0:0:0,0:0:0);
    (A2 => O21) = (0:0:0,0:0:0);
    (A2 => O20) = (0:0:0,0:0:0);
    (A2 => O19) = (0:0:0,0:0:0);
    (A2 => O18) = (0:0:0,0:0:0);
    (A2 => O17) = (0:0:0,0:0:0);
    (A2 => O16) = (0:0:0,0:0:0);
    (A2 => O15) = (0:0:0,0:0:0);
    (A2 => O14) = (0:0:0,0:0:0);
    (A2 => O13) = (0:0:0,0:0:0);
    (A2 => O12) = (0:0:0,0:0:0);
    (A2 => O11) = (0:0:0,0:0:0);
    (A2 => O10) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A1 => O24) = (0:0:0,0:0:0);
    (A1 => O23) = (0:0:0,0:0:0);
    (A1 => O22) = (0:0:0,0:0:0);
    (A1 => O21) = (0:0:0,0:0:0);
    (A1 => O20) = (0:0:0,0:0:0);
    (A1 => O19) = (0:0:0,0:0:0);
    (A1 => O18) = (0:0:0,0:0:0);
    (A1 => O17) = (0:0:0,0:0:0);
    (A1 => O16) = (0:0:0,0:0:0);
    (A1 => O15) = (0:0:0,0:0:0);
    (A1 => O14) = (0:0:0,0:0:0);
    (A1 => O13) = (0:0:0,0:0:0);
    (A1 => O12) = (0:0:0,0:0:0);
    (A1 => O11) = (0:0:0,0:0:0);
    (A1 => O10) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A0 => O24) = (0:0:0,0:0:0);
    (A0 => O23) = (0:0:0,0:0:0);
    (A0 => O22) = (0:0:0,0:0:0);
    (A0 => O21) = (0:0:0,0:0:0);
    (A0 => O20) = (0:0:0,0:0:0);
    (A0 => O19) = (0:0:0,0:0:0);
    (A0 => O18) = (0:0:0,0:0:0);
    (A0 => O17) = (0:0:0,0:0:0);
    (A0 => O16) = (0:0:0,0:0:0);
    (A0 => O15) = (0:0:0,0:0:0);
    (A0 => O14) = (0:0:0,0:0:0);
    (A0 => O13) = (0:0:0,0:0:0);
    (A0 => O12) = (0:0:0,0:0:0);
    (A0 => O11) = (0:0:0,0:0:0);
    (A0 => O10) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (B15 => O24) = (0:0:0,0:0:0);
    (B15 => O23) = (0:0:0,0:0:0);
    (B15 => O22) = (0:0:0,0:0:0);
    (B15 => O21) = (0:0:0,0:0:0);
    (B15 => O20) = (0:0:0,0:0:0);
    (B15 => O19) = (0:0:0,0:0:0);
    (B15 => O18) = (0:0:0,0:0:0);
    (B15 => O17) = (0:0:0,0:0:0);
    (B15 => O16) = (0:0:0,0:0:0);
    (B15 => O15) = (0:0:0,0:0:0);
    (B14 => O24) = (0:0:0,0:0:0);
    (B14 => O23) = (0:0:0,0:0:0);
    (B14 => O22) = (0:0:0,0:0:0);
    (B14 => O21) = (0:0:0,0:0:0);
    (B14 => O20) = (0:0:0,0:0:0);
    (B14 => O19) = (0:0:0,0:0:0);
    (B14 => O18) = (0:0:0,0:0:0);
    (B14 => O17) = (0:0:0,0:0:0);
    (B14 => O16) = (0:0:0,0:0:0);
    (B14 => O15) = (0:0:0,0:0:0);
    (B14 => O14) = (0:0:0,0:0:0);
    (B13 => O24) = (0:0:0,0:0:0);
    (B13 => O23) = (0:0:0,0:0:0);
    (B13 => O22) = (0:0:0,0:0:0);
    (B13 => O21) = (0:0:0,0:0:0);
    (B13 => O20) = (0:0:0,0:0:0);
    (B13 => O19) = (0:0:0,0:0:0);
    (B13 => O18) = (0:0:0,0:0:0);
    (B13 => O17) = (0:0:0,0:0:0);
    (B13 => O16) = (0:0:0,0:0:0);
    (B13 => O15) = (0:0:0,0:0:0);
    (B13 => O14) = (0:0:0,0:0:0);
    (B13 => O13) = (0:0:0,0:0:0);
    (B12 => O24) = (0:0:0,0:0:0);
    (B12 => O23) = (0:0:0,0:0:0);
    (B12 => O22) = (0:0:0,0:0:0);
    (B12 => O21) = (0:0:0,0:0:0);
    (B12 => O20) = (0:0:0,0:0:0);
    (B12 => O19) = (0:0:0,0:0:0);
    (B12 => O18) = (0:0:0,0:0:0);
    (B12 => O17) = (0:0:0,0:0:0);
    (B12 => O16) = (0:0:0,0:0:0);
    (B12 => O15) = (0:0:0,0:0:0);
    (B12 => O14) = (0:0:0,0:0:0);
    (B12 => O13) = (0:0:0,0:0:0);
    (B12 => O12) = (0:0:0,0:0:0);
    (B11 => O24) = (0:0:0,0:0:0);
    (B11 => O23) = (0:0:0,0:0:0);
    (B11 => O22) = (0:0:0,0:0:0);
    (B11 => O21) = (0:0:0,0:0:0);
    (B11 => O20) = (0:0:0,0:0:0);
    (B11 => O19) = (0:0:0,0:0:0);
    (B11 => O18) = (0:0:0,0:0:0);
    (B11 => O17) = (0:0:0,0:0:0);
    (B11 => O16) = (0:0:0,0:0:0);
    (B11 => O15) = (0:0:0,0:0:0);
    (B11 => O14) = (0:0:0,0:0:0);
    (B11 => O13) = (0:0:0,0:0:0);
    (B11 => O12) = (0:0:0,0:0:0);
    (B11 => O11) = (0:0:0,0:0:0);
    (B10 => O24) = (0:0:0,0:0:0);
    (B10 => O23) = (0:0:0,0:0:0);
    (B10 => O22) = (0:0:0,0:0:0);
    (B10 => O21) = (0:0:0,0:0:0);
    (B10 => O20) = (0:0:0,0:0:0);
    (B10 => O19) = (0:0:0,0:0:0);
    (B10 => O18) = (0:0:0,0:0:0);
    (B10 => O17) = (0:0:0,0:0:0);
    (B10 => O16) = (0:0:0,0:0:0);
    (B10 => O15) = (0:0:0,0:0:0);
    (B10 => O14) = (0:0:0,0:0:0);
    (B10 => O13) = (0:0:0,0:0:0);
    (B10 => O12) = (0:0:0,0:0:0);
    (B10 => O11) = (0:0:0,0:0:0);
    (B10 => O10) = (0:0:0,0:0:0);
    (B9 => O24) = (0:0:0,0:0:0);
    (B9 => O23) = (0:0:0,0:0:0);
    (B9 => O22) = (0:0:0,0:0:0);
    (B9 => O21) = (0:0:0,0:0:0);
    (B9 => O20) = (0:0:0,0:0:0);
    (B9 => O19) = (0:0:0,0:0:0);
    (B9 => O18) = (0:0:0,0:0:0);
    (B9 => O17) = (0:0:0,0:0:0);
    (B9 => O16) = (0:0:0,0:0:0);
    (B9 => O15) = (0:0:0,0:0:0);
    (B9 => O14) = (0:0:0,0:0:0);
    (B9 => O13) = (0:0:0,0:0:0);
    (B9 => O12) = (0:0:0,0:0:0);
    (B9 => O11) = (0:0:0,0:0:0);
    (B9 => O10) = (0:0:0,0:0:0);
    (B9 => O9) = (0:0:0,0:0:0);
    (B8 => O24) = (0:0:0,0:0:0);
    (B8 => O23) = (0:0:0,0:0:0);
    (B8 => O22) = (0:0:0,0:0:0);
    (B8 => O21) = (0:0:0,0:0:0);
    (B8 => O20) = (0:0:0,0:0:0);
    (B8 => O19) = (0:0:0,0:0:0);
    (B8 => O18) = (0:0:0,0:0:0);
    (B8 => O17) = (0:0:0,0:0:0);
    (B8 => O16) = (0:0:0,0:0:0);
    (B8 => O15) = (0:0:0,0:0:0);
    (B8 => O14) = (0:0:0,0:0:0);
    (B8 => O13) = (0:0:0,0:0:0);
    (B8 => O12) = (0:0:0,0:0:0);
    (B8 => O11) = (0:0:0,0:0:0);
    (B8 => O10) = (0:0:0,0:0:0);
    (B8 => O9) = (0:0:0,0:0:0);
    (B7 => O24) = (0:0:0,0:0:0);
    (B7 => O23) = (0:0:0,0:0:0);
    (B7 => O22) = (0:0:0,0:0:0);
    (B7 => O21) = (0:0:0,0:0:0);
    (B7 => O20) = (0:0:0,0:0:0);
    (B7 => O19) = (0:0:0,0:0:0);
    (B7 => O18) = (0:0:0,0:0:0);
    (B7 => O17) = (0:0:0,0:0:0);
    (B7 => O16) = (0:0:0,0:0:0);
    (B7 => O15) = (0:0:0,0:0:0);
    (B7 => O14) = (0:0:0,0:0:0);
    (B7 => O13) = (0:0:0,0:0:0);
    (B7 => O12) = (0:0:0,0:0:0);
    (B7 => O11) = (0:0:0,0:0:0);
    (B7 => O10) = (0:0:0,0:0:0);
    (B7 => O9) = (0:0:0,0:0:0);
    (B6 => O24) = (0:0:0,0:0:0);
    (B6 => O23) = (0:0:0,0:0:0);
    (B6 => O22) = (0:0:0,0:0:0);
    (B6 => O21) = (0:0:0,0:0:0);
    (B6 => O20) = (0:0:0,0:0:0);
    (B6 => O19) = (0:0:0,0:0:0);
    (B6 => O18) = (0:0:0,0:0:0);
    (B6 => O17) = (0:0:0,0:0:0);
    (B6 => O16) = (0:0:0,0:0:0);
    (B6 => O15) = (0:0:0,0:0:0);
    (B6 => O14) = (0:0:0,0:0:0);
    (B6 => O13) = (0:0:0,0:0:0);
    (B6 => O12) = (0:0:0,0:0:0);
    (B6 => O11) = (0:0:0,0:0:0);
    (B6 => O10) = (0:0:0,0:0:0);
    (B6 => O9) = (0:0:0,0:0:0);
    (B5 => O24) = (0:0:0,0:0:0);
    (B5 => O23) = (0:0:0,0:0:0);
    (B5 => O22) = (0:0:0,0:0:0);
    (B5 => O21) = (0:0:0,0:0:0);
    (B5 => O20) = (0:0:0,0:0:0);
    (B5 => O19) = (0:0:0,0:0:0);
    (B5 => O18) = (0:0:0,0:0:0);
    (B5 => O17) = (0:0:0,0:0:0);
    (B5 => O16) = (0:0:0,0:0:0);
    (B5 => O15) = (0:0:0,0:0:0);
    (B5 => O14) = (0:0:0,0:0:0);
    (B5 => O13) = (0:0:0,0:0:0);
    (B5 => O12) = (0:0:0,0:0:0);
    (B5 => O11) = (0:0:0,0:0:0);
    (B5 => O10) = (0:0:0,0:0:0);
    (B5 => O9) = (0:0:0,0:0:0);
    (B4 => O24) = (0:0:0,0:0:0);
    (B4 => O23) = (0:0:0,0:0:0);
    (B4 => O22) = (0:0:0,0:0:0);
    (B4 => O21) = (0:0:0,0:0:0);
    (B4 => O20) = (0:0:0,0:0:0);
    (B4 => O19) = (0:0:0,0:0:0);
    (B4 => O18) = (0:0:0,0:0:0);
    (B4 => O17) = (0:0:0,0:0:0);
    (B4 => O16) = (0:0:0,0:0:0);
    (B4 => O15) = (0:0:0,0:0:0);
    (B4 => O14) = (0:0:0,0:0:0);
    (B4 => O13) = (0:0:0,0:0:0);
    (B4 => O12) = (0:0:0,0:0:0);
    (B4 => O11) = (0:0:0,0:0:0);
    (B4 => O10) = (0:0:0,0:0:0);
    (B4 => O9) = (0:0:0,0:0:0);
    (B3 => O24) = (0:0:0,0:0:0);
    (B3 => O23) = (0:0:0,0:0:0);
    (B3 => O22) = (0:0:0,0:0:0);
    (B3 => O21) = (0:0:0,0:0:0);
    (B3 => O20) = (0:0:0,0:0:0);
    (B3 => O19) = (0:0:0,0:0:0);
    (B3 => O18) = (0:0:0,0:0:0);
    (B3 => O17) = (0:0:0,0:0:0);
    (B3 => O16) = (0:0:0,0:0:0);
    (B3 => O15) = (0:0:0,0:0:0);
    (B3 => O14) = (0:0:0,0:0:0);
    (B3 => O13) = (0:0:0,0:0:0);
    (B3 => O12) = (0:0:0,0:0:0);
    (B3 => O11) = (0:0:0,0:0:0);
    (B3 => O10) = (0:0:0,0:0:0);
    (B3 => O9) = (0:0:0,0:0:0);
    (B2 => O24) = (0:0:0,0:0:0);
    (B2 => O23) = (0:0:0,0:0:0);
    (B2 => O22) = (0:0:0,0:0:0);
    (B2 => O21) = (0:0:0,0:0:0);
    (B2 => O20) = (0:0:0,0:0:0);
    (B2 => O19) = (0:0:0,0:0:0);
    (B2 => O18) = (0:0:0,0:0:0);
    (B2 => O17) = (0:0:0,0:0:0);
    (B2 => O16) = (0:0:0,0:0:0);
    (B2 => O15) = (0:0:0,0:0:0);
    (B2 => O14) = (0:0:0,0:0:0);
    (B2 => O13) = (0:0:0,0:0:0);
    (B2 => O12) = (0:0:0,0:0:0);
    (B2 => O11) = (0:0:0,0:0:0);
    (B2 => O10) = (0:0:0,0:0:0);
    (B2 => O9) = (0:0:0,0:0:0);
    (B1 => O24) = (0:0:0,0:0:0);
    (B1 => O23) = (0:0:0,0:0:0);
    (B1 => O22) = (0:0:0,0:0:0);
    (B1 => O21) = (0:0:0,0:0:0);
    (B1 => O20) = (0:0:0,0:0:0);
    (B1 => O19) = (0:0:0,0:0:0);
    (B1 => O18) = (0:0:0,0:0:0);
    (B1 => O17) = (0:0:0,0:0:0);
    (B1 => O16) = (0:0:0,0:0:0);
    (B1 => O15) = (0:0:0,0:0:0);
    (B1 => O14) = (0:0:0,0:0:0);
    (B1 => O13) = (0:0:0,0:0:0);
    (B1 => O12) = (0:0:0,0:0:0);
    (B1 => O11) = (0:0:0,0:0:0);
    (B1 => O10) = (0:0:0,0:0:0);
    (B1 => O9) = (0:0:0,0:0:0);
    (B0 => O24) = (0:0:0,0:0:0);
    (B0 => O23) = (0:0:0,0:0:0);
    (B0 => O22) = (0:0:0,0:0:0);
    (B0 => O21) = (0:0:0,0:0:0);
    (B0 => O20) = (0:0:0,0:0:0);
    (B0 => O19) = (0:0:0,0:0:0);
    (B0 => O18) = (0:0:0,0:0:0);
    (B0 => O17) = (0:0:0,0:0:0);
    (B0 => O16) = (0:0:0,0:0:0);
    (B0 => O15) = (0:0:0,0:0:0);
    (B0 => O14) = (0:0:0,0:0:0);
    (B0 => O13) = (0:0:0,0:0:0);
    (B0 => O12) = (0:0:0,0:0:0);
    (B0 => O11) = (0:0:0,0:0:0);
    (B0 => O10) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC16_B ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.A_REG = "0b0";
  defparam INST10.A_SIGNED = "0b1";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTOUTPUT_SELECT = "0b11";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.B_SIGNED = "0b1";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.MODE_8x8 = "0b0";
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b11";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
endmodule

module o_DAC_SCK ( input PADDO, output o_DAC_SCK );
  wire   VCCI;

  BB_B_B \o_DAC_SCK_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(o_DAC_SCK));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_DAC_SCK) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_DAC_MOSI ( input PADDO, output o_DAC_MOSI );
  wire   VCCI;

  BB_B_B \o_DAC_MOSI_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(o_DAC_MOSI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_DAC_MOSI) = (0:0:0,0:0:0);
  endspecify

endmodule

module test ( input PADDO, output test );
  wire   VCCI;

  BB_B_B \test_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(test));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => test) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug ( input PADDO, output debug );
  wire   VCCI;

  BB_B_B \debug_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(debug));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debug) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_ADC_Clock ( output PADDI, input i_ADC_Clock );
  wire   GNDI;

  BB_B_B \i_ADC_Clock_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(i_ADC_Clock));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_ADC_Clock => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_ADC_Data ( output PADDI, input i_ADC_Data );
  wire   GNDI;

  BB_B_B \i_ADC_Data_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(i_ADC_Data));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_ADC_Data => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_Clock ( output PADDI, input i_Clock );
  wire   GNDI;

  BB_B_B \i_Clock_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(i_Clock));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_Clock => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_DAC_CS ( input PADDO, output o_DAC_CS );
  wire   VCCI;

  BB_B_B \o_DAC_CS_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(o_DAC_CS));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_DAC_CS) = (0:0:0,0:0:0);
  endspecify

endmodule
