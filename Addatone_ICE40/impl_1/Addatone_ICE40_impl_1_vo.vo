
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2.0.1.281.2

// backanno -o Addatone_ICE40_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui -msgset D:/Eurorack/Addatone/Addatone_ICE40/promote.xml Addatone_ICE40_impl_1.udb 
// Netlist created on Tue Mar 24 18:31:22 2020
// Netlist written on Tue Mar 24 18:31:40 2020
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( reset_n, i_ADC_CS, o_DAC_SCK, o_DAC_MOSI, test, debug, 
             i_ADC_Clock, i_ADC_Data, i_Clock, o_DAC_CS );
  input  reset_n, i_ADC_CS, i_ADC_Clock, i_ADC_Data, i_Clock;
  output o_DAC_SCK, o_DAC_MOSI, test, debug, o_DAC_CS;
  wire   \sample_position.n69[15] , \sample_position.n12155 , 
         \sample_position.n8713 , \sample_position.n8569 , 
         \sample_position.n8568 , \sample_position.n6330 , Main_Clock, 
         \sample_position.Accumulated_Frequency[15] , 
         \sample_position.n69[14] , \sample_position.n69[13] , 
         \sample_position.n12152 , \sample_position.n8571 , 
         \sample_position.n8570 , \sample_position.n8711 , 
         \sample_position.n8573 , \sample_position.n8572 , 
         \sample_position.Accumulated_Frequency[13] , 
         \sample_position.Accumulated_Frequency[14] , 
         \sample_position.n69[12] , \sample_position.n69[11] , 
         \sample_position.n12149 , \sample_position.n8575 , 
         \sample_position.n8574 , \sample_position.n8709 , 
         \sample_position.n8577 , \sample_position.n8576 , 
         \sample_position.Accumulated_Frequency[11] , 
         \sample_position.Accumulated_Frequency[12] , 
         \sample_position.n87[15] , \sample_position.n12008 , 
         \sample_position.n8839 , \sample_position.Sample_Pos_Read[15] , n6849, 
         reset_n_N_191, \sample_position.Sample_Position[15] , 
         \sample_position.n87[14] , \sample_position.n87[13] , 
         \sample_position.n12005 , \sample_position.Sample_Pos_Read[14] , 
         \sample_position.n8837 , \sample_position.Sample_Pos_Read[13] , 
         \sample_position.Sample_Position[13] , 
         \sample_position.Sample_Position[14] , \sample_position.n69[10] , 
         \sample_position.n69[9] , \sample_position.n12146 , 
         \sample_position.n8579 , \sample_position.n8578 , 
         \sample_position.n8707 , \sample_position.n8581 , 
         \sample_position.n8580 , \sample_position.Accumulated_Frequency[9] , 
         \sample_position.Accumulated_Frequency[10] , 
         \sample_position.n87[12] , \sample_position.n87[11] , 
         \sample_position.n12002 , \sample_position.Sample_Pos_Read[12] , 
         \sample_position.n8835 , \sample_position.Sample_Pos_Read[11] , 
         \sample_position.Sample_Position[11] , 
         \sample_position.Sample_Position[12] , \sample_position.n69[8] , 
         \sample_position.n69[7] , \sample_position.n12143 , 
         \sample_position.n8583 , \sample_position.n8582 , 
         \sample_position.n8705 , \sample_position.n8585 , 
         \sample_position.n8584 , \sample_position.Accumulated_Frequency[7] , 
         \sample_position.Accumulated_Frequency[8] , \sample_position.n87[10] , 
         \sample_position.n87[9] , \sample_position.n11999 , 
         \sample_position.Sample_Pos_Read[10] , \sample_position.n8833 , 
         \sample_position.Sample_Pos_Read[9] , 
         \sample_position.Sample_Position[9] , 
         \sample_position.Sample_Position[10] , \sample_position.n87[8] , 
         \sample_position.n87[7] , \sample_position.n11996 , 
         \sample_position.Sample_Pos_Read[8] , \sample_position.n8831 , 
         \sample_position.Sample_Pos_Read[7] , 
         \sample_position.Sample_Position[7] , 
         \sample_position.Sample_Position[8] , \sample_position.n69[6] , 
         \sample_position.n69[5] , \sample_position.n12140 , 
         \sample_position.n8587 , \sample_position.n8586 , 
         \sample_position.n8703 , \sample_position.n8589 , 
         \sample_position.n8588 , \sample_position.Accumulated_Frequency[5] , 
         \sample_position.Accumulated_Frequency[6] , \sample_position.n87[6] , 
         \sample_position.n87[5] , \sample_position.n11993 , 
         \sample_position.Sample_Pos_Read[6] , \sample_position.n8829 , 
         \sample_position.Sample_Pos_Read[5] , 
         \sample_position.Sample_Position[5] , 
         \sample_position.Sample_Position[6] , \sample_position.n69[4] , 
         \sample_position.n69[3] , \sample_position.n12137 , 
         \sample_position.n8591 , \sample_position.n8590 , 
         \sample_position.n8701 , \sample_position.n8593 , 
         \sample_position.n8592 , \sample_position.Accumulated_Frequency[3] , 
         \sample_position.Accumulated_Frequency[4] , \sample_position.n87[4] , 
         \sample_position.n87[3] , \sample_position.n11990 , 
         \sample_position.Sample_Pos_Read[4] , \sample_position.n8827 , 
         \sample_position.Sample_Pos_Read[3] , 
         \sample_position.Sample_Position[3] , 
         \sample_position.Sample_Position[4] , \sample_position.n87[2] , 
         \sample_position.n87[1] , \sample_position.n11987 , 
         \sample_position.Accumulated_Frequency[2] , 
         \sample_position.Sample_Pos_Read[2] , \sample_position.n8825 , 
         \sample_position.Accumulated_Frequency[1] , 
         \sample_position.Sample_Pos_Read[1] , 
         \sample_position.Sample_Position[1] , 
         \sample_position.Sample_Position[2] , \sample_position.n87[0] , 
         \sample_position.n11885 , \sample_position.Accumulated_Frequency[0] , 
         \sample_position.Sample_Pos_Read[0] , 
         \sample_position.Sample_Position[0] , 
         \sample_position.n87_adj_1160[15] , \sample_position.n12068 , 
         \sample_position.n8822 , \sample_position.n2221[15] , 
         \sample_position.Accumulated_Freq_Offset[15] , 
         \sample_position.n6257 , \sample_position.n6569 , 
         \sample_position.n87_adj_1160[14] , 
         \sample_position.n87_adj_1160[13] , \sample_position.n12065 , 
         \sample_position.n2221[14] , 
         \sample_position.Accumulated_Freq_Offset[14] , 
         \sample_position.n8820 , \sample_position.n2221[13] , 
         \sample_position.Accumulated_Freq_Offset[13] , 
         \sample_position.n69[2] , \sample_position.n69[1] , 
         \sample_position.n12134 , \sample_position.n8595 , 
         \sample_position.n8594 , \sample_position.n8699 , 
         \sample_position.n8597 , \sample_position.n8596 , 
         \sample_position.n69[0] , \sample_position.n12071 , 
         \sample_position.n8599 , \sample_position.n8598 , 
         \sample_position.n87_adj_1160[12] , 
         \sample_position.n87_adj_1160[11] , \sample_position.n12062 , 
         \sample_position.n2221[12] , 
         \sample_position.Accumulated_Freq_Offset[12] , 
         \sample_position.n8818 , \sample_position.n2221[11] , 
         \sample_position.Accumulated_Freq_Offset[11] , 
         \sample_position.n87_adj_1160[10] , \sample_position.n87_adj_1160[9] , 
         \sample_position.n12059 , \sample_position.n2221[10] , 
         \sample_position.Accumulated_Freq_Offset[10] , 
         \sample_position.n8816 , \sample_position.n2221[9] , 
         \sample_position.Accumulated_Freq_Offset[9] , 
         \sample_position.n87_adj_1160[8] , \sample_position.n87_adj_1160[7] , 
         \sample_position.n12053 , \sample_position.n2221[8] , 
         \sample_position.Accumulated_Freq_Offset[8] , \sample_position.n8814 , 
         \sample_position.n2221[7] , 
         \sample_position.Accumulated_Freq_Offset[7] , 
         \sample_position.n12050 , \sample_position.n2221[6] , 
         \sample_position.Accumulated_Freq_Offset[6] , \sample_position.n8812 , 
         \sample_position.n2221[5] , 
         \sample_position.Accumulated_Freq_Offset[5] , 
         \sample_position.n87_adj_1160[5] , \sample_position.n87_adj_1160[6] , 
         \sample_position.n12047 , \sample_position.n2221[4] , 
         \sample_position.Accumulated_Freq_Offset[4] , \sample_position.n8810 , 
         \sample_position.n2221[3] , 
         \sample_position.Accumulated_Freq_Offset[3] , 
         \sample_position.n87_adj_1160[3] , \sample_position.n87_adj_1160[4] , 
         \sample_position.n12044 , \sample_position.n2221[2] , 
         \sample_position.Accumulated_Freq_Offset[2] , \sample_position.n8808 , 
         \sample_position.n2221[1] , 
         \sample_position.Accumulated_Freq_Offset[1] , 
         \sample_position.n87_adj_1160[1] , \sample_position.n87_adj_1160[2] , 
         \sample_position.n12041 , \sample_position.n2221[0] , 
         \sample_position.Accumulated_Freq_Offset[0] , 
         \sample_position.n87_adj_1160[0] , \sample_position.n12026 , 
         \sample_position.n8805 , \sample_position.n1[15] , 
         \sample_position.n87_adj_1161[15] , \sample_position.n12023 , 
         \sample_position.n1[14] , \sample_position.n8803 , 
         \sample_position.n1[13] , \sample_position.n87_adj_1161[13] , 
         \sample_position.n87_adj_1161[14] , \sample_position.n12020 , 
         \sample_position.n1[12] , \sample_position.n8801 , 
         \sample_position.n1[11] , \sample_position.n87_adj_1161[11] , 
         \sample_position.n87_adj_1161[12] , \sample_position.n12017 , 
         \sample_position.n1[10] , \sample_position.n8799 , 
         \sample_position.n1[9] , \sample_position.n87_adj_1161[9] , 
         \sample_position.n87_adj_1161[10] , \sample_position.n12014 , 
         \sample_position.n1[8] , \sample_position.n8797 , 
         \sample_position.n1[7] , \sample_position.n87_adj_1161[7] , 
         \sample_position.n87_adj_1161[8] , \sample_position.n11972 , 
         \sample_position.n1[6] , \sample_position.n8795 , 
         \sample_position.n1[5] , \sample_position.n87_adj_1161[5] , 
         \sample_position.n87_adj_1161[6] , \sample_position.n11969 , 
         \sample_position.n1[4] , \sample_position.n8793 , 
         \sample_position.n1[3] , \sample_position.n87_adj_1161[3] , 
         \sample_position.n87_adj_1161[4] , \sample_position.n11966 , 
         \sample_position.n1[2] , \sample_position.n8791 , 
         \sample_position.n1[1] , \sample_position.n87_adj_1161[1] , 
         \sample_position.n87_adj_1161[2] , \sample_position.n11963 , 
         \sample_position.n1[0] , VCC_net, \sample_position.n87_adj_1161[0] , 
         \sample_output.n3950[2] , \sample_output.n3950[1] , 
         \sample_output.n12077 , \r_Adder_Total[1][10] , \sample_output.n8671 , 
         \r_Adder_Total[1][9] , n2981, \sample_output.r_Sample_R[9] , 
         \sample_output.r_Sample_R[10] , \sample_output.n8673 , 
         \sample_output.n3974[9] , \sample_output.n12107 , 
         \sample_output.n8859 , \r_Adder_Total[0][17] , 
         \sample_output.r_Sample_L[17] , \sample_output.n3974[8] , 
         \sample_output.n3974[7] , \sample_output.n12104 , 
         \r_Adder_Total[0][16] , \sample_output.n8857 , \r_Adder_Total[0][15] , 
         \sample_output.r_Sample_L[15] , \sample_output.r_Sample_L[16] , 
         \sample_output.n3974[6] , \sample_output.n3974[5] , 
         \sample_output.n12101 , \r_Adder_Total[0][14] , \sample_output.n8855 , 
         \r_Adder_Total[0][13] , \sample_output.r_Sample_L[13] , 
         \sample_output.r_Sample_L[14] , \sample_output.n3974[4] , 
         \sample_output.n3974[3] , \sample_output.n12098 , 
         \r_Adder_Total[0][12] , \sample_output.n8853 , \r_Adder_Total[0][11] , 
         \sample_output.r_Sample_L[11] , \sample_output.r_Sample_L[12] , 
         \sample_output.n3974[2] , \sample_output.n3974[1] , 
         \sample_output.n12095 , \r_Adder_Total[0][10] , \sample_output.n8851 , 
         \r_Adder_Total[0][9] , \sample_output.r_Sample_L[9] , 
         \sample_output.r_Sample_L[10] , \sample_output.n3974[0] , 
         \sample_output.n12092 , \r_Adder_Total[0][8] , 
         \sample_output.r_Sample_L[8] , \sample_output.n3950[0] , 
         \sample_output.n12074 , \r_Adder_Total[1][8] , 
         \sample_output.r_Sample_R[8] , \sample_output.n3950[4] , 
         \sample_output.n3950[3] , \sample_output.n12080 , 
         \r_Adder_Total[1][12] , \r_Adder_Total[1][11] , 
         \sample_output.r_Sample_R[11] , \sample_output.r_Sample_R[12] , 
         \sample_output.n8675 , \sample_output.n3950[9] , 
         \sample_output.n12089 , \sample_output.n8679 , \r_Adder_Total[1][17] , 
         \sample_output.r_Sample_R[17] , \sample_output.n3950[8] , 
         \sample_output.n3950[7] , \sample_output.n12086 , 
         \r_Adder_Total[1][16] , \sample_output.n8677 , \r_Adder_Total[1][15] , 
         \sample_output.r_Sample_R[15] , \sample_output.r_Sample_R[16] , 
         \sample_output.n3950[6] , \sample_output.n3950[5] , 
         \sample_output.n12083 , \r_Adder_Total[1][14] , 
         \r_Adder_Total[1][13] , \sample_output.r_Sample_R[13] , 
         \sample_output.r_Sample_R[14] , n70, n12131, n8696, 
         \Sample_Timer[15] , n6597, n71, n72, n12128, \Sample_Timer[14] , 
         n8694, \Sample_Timer[13] , n73, n74, n12125, \Sample_Timer[12] , 
         n8692, \Sample_Timer[11] , n75, n76, n12122, \Sample_Timer[10] , 
         n8690, \Sample_Timer[9] , n77, n78, n12119, \Sample_Timer[8] , n8688, 
         \Sample_Timer[7] , n79, n80, n12116, \Sample_Timer[6] , n8686, 
         \Sample_Timer[5] , n11975, \Harmonic[2] , n8662, \Harmonic[1] , n45, 
         n44, n8664, n11978, \Harmonic[4] , \Harmonic[3] , n43, n42, n8666, 
         n11888, \Harmonic[0] , n46, n11984, n8668, \Harmonic[7] , n39, n81, 
         n82, n12113, \Sample_Timer[4] , n8684, \Sample_Timer[3] , n83, n84, 
         n12110, \Sample_Timer[2] , n8682, \Sample_Timer[1] , n85, n12011, 
         \Sample_Timer[0] , n11981, \Harmonic[6] , \Harmonic[5] , n41, n40, 
         \genadder[1].adder.n11960 , \Working_Total_adj_1217[31] , 
         \genadder[1].adder.Adder_Total[1][18] , \genadder[1].adder.n8765 , 
         \Adder_Total[1][17] , \genadder[1].adder.n167[17] , 
         \genadder[1].adder.n167[18] , \genadder[1].adder.n11957 , 
         \Adder_Total[1][16] , \genadder[1].adder.n8763 , \Adder_Total[1][15] , 
         \genadder[1].adder.n167[15] , \genadder[1].adder.n167[16] , 
         \genadder[1].adder.n11954 , \Working_Total_adj_1217[23] , 
         \Adder_Total[1][14] , \genadder[1].adder.n8761 , 
         \Working_Total_adj_1217[22] , \Adder_Total[1][13] , 
         \genadder[1].adder.n167[13] , \genadder[1].adder.n167[14] , 
         \genadder[1].adder.n11951 , \Working_Total_adj_1217[21] , 
         \Adder_Total[1][12] , \genadder[1].adder.n8759 , 
         \Working_Total_adj_1217[20] , \Adder_Total[1][11] , 
         \genadder[1].adder.n167[11] , \genadder[1].adder.n167[12] , 
         \genadder[1].adder.n11948 , \Working_Total_adj_1217[19] , 
         \Adder_Total[1][10] , \genadder[1].adder.n8757 , 
         \Working_Total_adj_1217[18] , \Adder_Total[1][9] , 
         \genadder[1].adder.n167[9] , \genadder[1].adder.n167[10] , 
         \genadder[1].adder.n11945 , \Working_Total_adj_1217[17] , 
         \Adder_Total[1][8] , \genadder[1].adder.n8755 , 
         \Working_Total_adj_1217[16] , \Adder_Total[1][7] , 
         \genadder[1].adder.n167[7] , \genadder[1].adder.n167[8] , 
         \genadder[1].adder.n11942 , \Working_Total_adj_1217[15] , 
         \Adder_Total[1][6] , \genadder[1].adder.n8753 , 
         \Working_Total_adj_1217[14] , \Adder_Total[1][5] , 
         \genadder[1].adder.n167[5] , \genadder[1].adder.n167[6] , 
         \genadder[1].adder.n11939 , \Working_Total_adj_1217[13] , 
         \Adder_Total[1][4] , \genadder[1].adder.n8751 , 
         \Working_Total_adj_1217[12] , \Adder_Total[1][3] , 
         \genadder[1].adder.n167[3] , \genadder[1].adder.n167[4] , 
         \genadder[1].adder.n11936 , \Working_Total_adj_1217[11] , 
         \Adder_Total[1][2] , \genadder[1].adder.n8749 , 
         \Working_Total_adj_1217[10] , \genadder[1].adder.Adder_Total[1][1] , 
         \genadder[1].adder.n167[1] , \genadder[1].adder.n167[2] , 
         \genadder[1].adder.n11933 , \Working_Total_adj_1217[9] , 
         \genadder[1].adder.Adder_Total[1][0] , \genadder[1].adder.n167[0] , 
         \genadder[0].adder.n12158 , \Working_Total[31] , 
         \genadder[0].adder.Adder_Total[0][18] , \genadder[0].adder.n8732 , 
         \Adder_Total[0][17] , \genadder[0].adder.n167[17] , 
         \genadder[0].adder.n167[18] , \genadder[0].adder.n12056 , 
         \Adder_Total[0][16] , \genadder[0].adder.n8730 , \Adder_Total[0][15] , 
         \genadder[0].adder.n167[15] , \genadder[0].adder.n167[16] , 
         \genadder[0].adder.n11912 , \Working_Total[23] , \Adder_Total[0][14] , 
         \genadder[0].adder.n8728 , \Working_Total[22] , \Adder_Total[0][13] , 
         \genadder[0].adder.n167[13] , \genadder[0].adder.n167[14] , 
         \genadder[0].adder.n11909 , \Working_Total[21] , \Adder_Total[0][12] , 
         \genadder[0].adder.n8726 , \Working_Total[20] , \Adder_Total[0][11] , 
         \genadder[0].adder.n167[11] , \genadder[0].adder.n167[12] , 
         \genadder[0].adder.n11906 , \Working_Total[19] , \Adder_Total[0][10] , 
         \genadder[0].adder.n8724 , \Working_Total[18] , \Adder_Total[0][9] , 
         \genadder[0].adder.n167[9] , \genadder[0].adder.n167[10] , 
         \genadder[0].adder.n11903 , \Working_Total[17] , \Adder_Total[0][8] , 
         \genadder[0].adder.n8722 , \Working_Total[16] , \Adder_Total[0][7] , 
         \genadder[0].adder.n167[7] , \genadder[0].adder.n167[8] , 
         \genadder[0].adder.n11900 , \Working_Total[15] , \Adder_Total[0][6] , 
         \genadder[0].adder.n8720 , \Working_Total[14] , \Adder_Total[0][5] , 
         \genadder[0].adder.n167[5] , \genadder[0].adder.n167[6] , 
         \genadder[0].adder.n11897 , \Working_Total[13] , \Adder_Total[0][4] , 
         \genadder[0].adder.n8718 , \Working_Total[12] , \Adder_Total[0][3] , 
         \genadder[0].adder.n167[3] , \genadder[0].adder.n167[4] , 
         \genadder[0].adder.n11894 , \Working_Total[11] , \Adder_Total[0][2] , 
         \genadder[0].adder.n8716 , \Working_Total[10] , 
         \genadder[0].adder.Adder_Total[0][1] , \genadder[0].adder.n167[1] , 
         \genadder[0].adder.n167[2] , \genadder[0].adder.n11891 , 
         \Working_Total[9] , \genadder[0].adder.Adder_Total[0][0] , 
         \genadder[0].adder.n167[0] , \mult.n11930 , \mult.n8848 , 
         \mult.n1[8] , \Adder_Mult[8] , \mult.n57[9] , \mult.cout , 
         \mult.n11927 , \mult.n1[7] , \Adder_Mult[7] , \mult.n8846 , 
         \mult.n1[6] , \Adder_Mult[6] , \mult.n57[7] , \mult.n57[8] , 
         \mult.n11924 , \mult.n1[5] , \Adder_Mult[5] , \mult.n8844 , 
         \mult.n1[4] , \Adder_Mult[4] , \mult.n57[5] , \mult.n57[6] , 
         \mult.n11921 , \mult.n1[3] , \Adder_Mult[3] , \mult.n8842 , 
         \mult.n1[2] , \Adder_Mult[2] , \mult.n57[3] , \mult.n57[4] , 
         \mult.n11918 , \mult.n1[1] , \Adder_Mult[1] , \mult.n1[0] , 
         \Adder_Mult[0] , \mult.n57[1] , \mult.n57[2] , \mult.n12038 , 
         \mult.n8788 , \mult.Comb_Counter[7] , \mult.n47[7] , \mult.n12035 , 
         \mult.Comb_Counter[6] , \mult.n8786 , \mult.Comb_Counter[5] , 
         \mult.n47[5] , \mult.n47[6] , \mult.n12032 , \mult.Comb_Counter[4] , 
         \mult.n8784 , \mult.Comb_Counter[3] , \mult.n47[3] , \mult.n47[4] , 
         \mult.n12029 , \mult.Comb_Counter[2] , \mult.n8782 , 
         \mult.Comb_Counter[1] , \mult.n47[1] , \mult.n47[2] , \mult.n11915 , 
         \mult.Comb_Counter[0] , \mult.n47[0] , test_N_190, test_c, 
         ADC_Data_Received, n10_adj_1214, n10_adj_1215, \SM_Top[1] , n6833, 
         \ADC_Data[1][1].sig_017.FeedThruLUT , 
         \ADC_Data[1][0].sig_000.FeedThruLUT , \ADC_Data[1][1] , 
         \ADC_Data[1][0] , \Harmonic_Scale[0] , \Harmonic_Scale[1] , 
         \ADC_Data[0][1].sig_002.FeedThruLUT , 
         \ADC_Data[0][0].sig_001.FeedThruLUT , \ADC_Data[0][1] , 
         \ADC_Data[0][0] , \Frequency[0] , \Frequency[1] , 
         \ADC_Data[0][3].sig_004.FeedThruLUT , 
         \ADC_Data[0][2].sig_003.FeedThruLUT , \ADC_Data[0][3] , 
         \ADC_Data[0][2] , \Frequency[2] , \Frequency[3] , 
         \ADC_Data[0][5].sig_006.FeedThruLUT , 
         \ADC_Data[0][4].sig_005.FeedThruLUT , \ADC_Data[0][5] , 
         \ADC_Data[0][4] , \Frequency[4] , \Frequency[5] , 
         \ADC_Data[0][7].sig_008.FeedThruLUT , 
         \ADC_Data[0][6].sig_007.FeedThruLUT , \ADC_Data[0][7] , 
         \ADC_Data[0][6] , \Frequency[6] , \Frequency[7] , 
         \ADC_Data[0][9].sig_010.FeedThruLUT , 
         \ADC_Data[0][8].sig_009.FeedThruLUT , \ADC_Data[0][9] , 
         \ADC_Data[0][8] , \Frequency[8] , \Frequency[9] , 
         \ADC_Data[0][11].sig_012.FeedThruLUT , 
         \ADC_Data[0][10].sig_011.FeedThruLUT , \ADC_Data[0][11] , 
         \ADC_Data[0][10] , \Frequency[10] , \Frequency[11] , 
         \ADC_Data[0][13].sig_014.FeedThruLUT , 
         \ADC_Data[0][12].sig_013.FeedThruLUT , \ADC_Data[0][13] , 
         \ADC_Data[0][12] , \Frequency[12] , \Frequency[13] , 
         \ADC_Data[0][15].sig_016.FeedThruLUT , 
         \ADC_Data[0][14].sig_015.FeedThruLUT , \ADC_Data[0][15] , 
         \ADC_Data[0][14] , \Frequency[14] , \Frequency[15] , 
         \ADC_Data[1][3].sig_019.FeedThruLUT , 
         \ADC_Data[1][2].sig_018.FeedThruLUT , \ADC_Data[1][3] , 
         \ADC_Data[1][2] , \Harmonic_Scale[2] , \Harmonic_Scale[3] , 
         \ADC_Data[1][5].sig_021.FeedThruLUT , 
         \ADC_Data[1][4].sig_020.FeedThruLUT , \ADC_Data[1][5] , 
         \ADC_Data[1][4] , \Harmonic_Scale[4] , \Harmonic_Scale[5] , 
         \ADC_Data[1][7].sig_023.FeedThruLUT , 
         \ADC_Data[1][6].sig_022.FeedThruLUT , \ADC_Data[1][7] , 
         \ADC_Data[1][6] , \Harmonic_Scale[6] , \Harmonic_Scale[7] , 
         \ADC_Data[2][4].sig_026.FeedThruLUT , 
         \ADC_Data[2][5].sig_025.FeedThruLUT , \ADC_Data[2][4] , 
         \ADC_Data[2][5] , \Scale_Initial[5] , \Scale_Initial[4] , 
         \ADC_Data[2][2].sig_028.FeedThruLUT , 
         \ADC_Data[2][3].sig_027.FeedThruLUT , \ADC_Data[2][2] , 
         \ADC_Data[2][3] , \Scale_Initial[3] , \Scale_Initial[2] , 
         \ADC_Data[2][0].sig_106.FeedThruLUT , 
         \ADC_Data[2][1].sig_029.FeedThruLUT , \ADC_Data[2][0] , 
         \ADC_Data[2][1] , \Scale_Initial[1] , \Scale_Initial[0] , 
         \sample_position.Sample_Position[6].sig_041.FeedThruLUT , 
         \sample_position.Sample_Position[5].sig_030.FeedThruLUT , n6824, 
         \sample_position.LUT_Pos[0] , \sample_position.LUT_Pos[1] , 
         \sample_position.SM_Sample_Position_2__N_311[1] , 
         \sample_position.SM_Sample_Position_2__N_311[0] , 
         \SM_Sample_Position[1] , \SM_Sample_Position[2] , 
         \SM_Sample_Position[0] , \sample_position.n10636 , Next_Sample, 
         \sample_position.n105[0] , \sample_position.n105[1] , 
         \sample_position.n6110 , \sample_position.n6587 , 
         \sample_position.Accumulated_Offset[1] , 
         \sample_position.Accumulated_Offset[0] , \sample_position.n105[3] , 
         \sample_position.n105[2] , \sample_position.Accumulated_Offset[2] , 
         \sample_position.Accumulated_Offset[3] , \sample_position.n105[5] , 
         \sample_position.n105[4] , \sample_position.Accumulated_Offset[4] , 
         \sample_position.Accumulated_Offset[5] , \sample_position.n105[7] , 
         \sample_position.n105[6] , \sample_position.Accumulated_Offset[6] , 
         \sample_position.Accumulated_Offset[7] , 
         \sample_position.Sample_Position[15].sig_032.FeedThruLUT , 
         \sample_position.LUT_Pos[10] , 
         \sample_position.Sample_Position[13].sig_034.FeedThruLUT , 
         \sample_position.Sample_Position[14].sig_033.FeedThruLUT , 
         \sample_position.LUT_Pos[9] , \sample_position.LUT_Pos[8] , 
         \sample_position.Sample_Position[11].sig_036.FeedThruLUT , 
         \sample_position.Sample_Position[12].sig_035.FeedThruLUT , 
         \sample_position.LUT_Pos[7] , \sample_position.LUT_Pos[6] , 
         \sample_position.Sample_Position[9].sig_038.FeedThruLUT , 
         \sample_position.Sample_Position[10].sig_037.FeedThruLUT , 
         \sample_position.LUT_Pos[5] , \sample_position.LUT_Pos[4] , 
         \sample_position.Sample_Position[7].sig_040.FeedThruLUT , 
         \sample_position.Sample_Position[8].sig_039.FeedThruLUT , 
         \sample_position.LUT_Pos[3] , \sample_position.LUT_Pos[2] , 
         \sample_position.n105[9] , \sample_position.n105[8] , 
         \sample_position.Accumulated_Offset[8] , 
         \sample_position.Accumulated_Offset[9] , \sample_position.n105[11] , 
         \sample_position.n105[10] , \sample_position.Accumulated_Offset[10] , 
         \sample_position.Accumulated_Offset[11] , \sample_position.n105[13] , 
         \sample_position.n105[12] , \sample_position.Accumulated_Offset[12] , 
         \sample_position.Accumulated_Offset[13] , \sample_position.n105[15] , 
         \sample_position.n105[14] , \sample_position.Accumulated_Offset[14] , 
         \sample_position.Accumulated_Offset[15] , 
         \sample_position.n87_adj_1160[2].sig_208.FeedThruLUT , 
         \sample_position.n87_adj_1160[1].sig_207.FeedThruLUT , 
         \sample_position.n87_adj_1160[4].sig_210.FeedThruLUT , 
         \sample_position.n87_adj_1160[3].sig_209.FeedThruLUT , 
         \sample_position.n87_adj_1160[6].sig_212.FeedThruLUT , 
         \sample_position.n87_adj_1160[5].sig_211.FeedThruLUT , 
         \ADC_Data[4][5].sig_103.FeedThruLUT , 
         \ADC_Data[4][4].sig_044.FeedThruLUT , \ADC_Data[4][5] , 
         \ADC_Data[4][4] , \Comb_Interval[4] , \Comb_Interval[5] , 
         \ADC_Data[4][2].sig_046.FeedThruLUT , 
         \ADC_Data[4][3].sig_045.FeedThruLUT , \ADC_Data[4][2] , 
         \ADC_Data[4][3] , \Comb_Interval[3] , \Comb_Interval[2] , 
         \sample_output.n3613[1] , \sample_output.n3613[0] , 
         \SM_Sample_Output[0] , \sample_output.r_Sample_L[3] , n2767, 
         \sample_output.r_Sample_R[3] , \sample_output.r_Sample_L[2] , 
         \sample_output.r_Sample_R[2] , n6071, \sample_output.Output_Data[0] , 
         \sample_output.Output_Data[1] , \sample_output.n9802 , 
         \sample_output.n2801 , \SM_Sample_Output[1] , DAC_Ready, 
         \SM_Sample_Output[2] , n6910, \sample_output.n3613[14] , 
         \sample_output.n3613[15] , \sample_output.Output_Data[15] , 
         \sample_output.Output_Data[14] , \sample_output.n3613[12] , 
         \sample_output.n3613[13] , \sample_output.Output_Data[13] , 
         \sample_output.Output_Data[12] , \sample_output.n3613[10] , 
         \sample_output.n3613[11] , \sample_output.Output_Data[11] , 
         \sample_output.Output_Data[10] , \sample_output.n3613[8] , 
         \sample_output.n3613[9] , \sample_output.Output_Data[9] , 
         \sample_output.Output_Data[8] , \sample_output.n3613[6] , 
         \sample_output.n3613[7] , \sample_output.Output_Data[7] , 
         \sample_output.Output_Data[6] , \sample_output.n3613[4] , 
         \sample_output.n3613[5] , \sample_output.r_Sample_L[6] , 
         \sample_output.r_Sample_R[6] , \sample_output.r_Sample_R[7] , 
         \sample_output.r_Sample_L[7] , \sample_output.Output_Data[5] , 
         \sample_output.Output_Data[4] , \sample_output.n3613[2] , 
         \sample_output.n3613[3] , \sample_output.r_Sample_R[4] , 
         \sample_output.r_Sample_L[4] , \sample_output.r_Sample_R[5] , 
         \sample_output.r_Sample_L[5] , \sample_output.Output_Data[3] , 
         \sample_output.Output_Data[2] , 
         \r_Adder_Total[1][3].sig_049.FeedThruLUT , 
         \r_Adder_Total[1][2].sig_048.FeedThruLUT , \r_Adder_Total[1][3] , 
         \r_Adder_Total[1][2] , \r_Adder_Total[1][5].sig_051.FeedThruLUT , 
         \r_Adder_Total[1][4].sig_050.FeedThruLUT , \r_Adder_Total[1][5] , 
         \r_Adder_Total[1][4] , \r_Adder_Total[1][7].sig_053.FeedThruLUT , 
         \r_Adder_Total[1][6].sig_052.FeedThruLUT , \r_Adder_Total[1][7] , 
         \r_Adder_Total[1][6] , \r_Adder_Total[0][3].sig_055.FeedThruLUT , 
         \r_Adder_Total[0][2].sig_054.FeedThruLUT , \r_Adder_Total[0][3] , 
         \r_Adder_Total[0][2] , \r_Adder_Total[0][5].sig_057.FeedThruLUT , 
         \r_Adder_Total[0][4].sig_056.FeedThruLUT , \r_Adder_Total[0][5] , 
         \r_Adder_Total[0][4] , \r_Adder_Total[0][7].sig_059.FeedThruLUT , 
         \r_Adder_Total[0][6].sig_058.FeedThruLUT , \r_Adder_Total[0][7] , 
         \r_Adder_Total[0][6] , n6747, \Output_Data[17] , 
         \sample_output.n6743 , \sample_output.n6744 , 
         \sample_output.Output_Data[21] , \sample_output.Output_Data[20] , 
         \sample_output.Output_Data[20].sig_061.FeedThruLUT , 
         \sample_output.Output_Data[21].sig_060.FeedThruLUT , 
         \sample_output.dac.n2946 , \sample_output.dac.r_Data_To_Send[2] , 
         \sample_output.dac.r_Data_To_Send[3] , \sample_output.dac.n25[1] , 
         \sample_output.dac.n25[0] , \sample_output.dac.Current_Bit[0] , 
         \sample_output.dac.Current_Bit[1] , \sample_output.dac.n6321 , 
         \sample_output.dac.n6602 , 
         \sample_output.Output_Data[16].sig_063.FeedThruLUT , 
         \Output_Data[17].sig_062.FeedThruLUT , 
         \sample_output.Output_Data[16] , 
         \sample_output.dac.r_Data_To_Send[6] , 
         \sample_output.dac.r_Data_To_Send[7] , 
         \sample_output.Output_Data[14].sig_065.FeedThruLUT , 
         \sample_output.Output_Data[15].sig_064.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[8] , 
         \sample_output.dac.r_Data_To_Send[9] , 
         \sample_output.Output_Data[12].sig_067.FeedThruLUT , 
         \sample_output.Output_Data[13].sig_066.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[10] , 
         \sample_output.dac.r_Data_To_Send[11] , 
         \sample_output.Output_Data[10].sig_069.FeedThruLUT , 
         \sample_output.Output_Data[11].sig_068.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[12] , 
         \sample_output.dac.r_Data_To_Send[13] , 
         \sample_output.Output_Data[8].sig_071.FeedThruLUT , 
         \sample_output.Output_Data[9].sig_070.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[14] , 
         \sample_output.dac.r_Data_To_Send[15] , 
         \sample_output.Output_Data[6].sig_073.FeedThruLUT , 
         \sample_output.Output_Data[7].sig_072.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[16] , 
         \sample_output.dac.r_Data_To_Send[17] , 
         \sample_output.Output_Data[4].sig_075.FeedThruLUT , 
         \sample_output.Output_Data[5].sig_074.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[18] , 
         \sample_output.dac.r_Data_To_Send[19] , 
         \sample_output.Output_Data[2].sig_077.FeedThruLUT , 
         \sample_output.Output_Data[3].sig_076.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[20] , 
         \sample_output.dac.r_Data_To_Send[21] , 
         \sample_output.Output_Data[0].sig_080.FeedThruLUT , 
         \sample_output.Output_Data[1].sig_078.FeedThruLUT , 
         \sample_output.dac.r_Data_To_Send[22] , 
         \sample_output.dac.r_Data_To_Send[23] , \sample_output.dac.n25[3] , 
         \sample_output.dac.n25[2] , \sample_output.dac.Current_Bit[2] , 
         \sample_output.dac.Current_Bit[3] , n6754, n9670, Clock_Counter, 
         reset_n_c, \SM_DAC_Out[1] , n9_adj_1193, 
         \sample_output.dac.n2613[0]$n1 , \SM_DAC_Out[2] , 
         \sample_output.dac.n6348 , o_DAC_CS_c, 
         \ADC_Data[4][0].sig_141.FeedThruLUT , 
         \ADC_Data[4][1].sig_081.FeedThruLUT , \ADC_Data[4][0] , 
         \ADC_Data[4][1] , \Comb_Interval[1] , \Comb_Interval[0] , 
         \ADC_Data[3][14].sig_084.FeedThruLUT , 
         \ADC_Data[3][15].sig_082.FeedThruLUT , \ADC_Data[3][14] , 
         \ADC_Data[3][15] , \Freq_Scale[15] , \Freq_Scale[14] , 
         \SM_Top[3].sig_083.FeedThruLUT , \SM_Top[3] , n10291, DAC_Send, 
         n10_adj_1203, n10_adj_1194, n10_adj_1211, n10_adj_1209, n10_adj_1213, 
         n10_adj_1212, \ADC_Data[3][12].sig_086.FeedThruLUT , 
         \ADC_Data[3][13].sig_085.FeedThruLUT , \ADC_Data[3][12] , 
         \ADC_Data[3][13] , \Freq_Scale[13] , \Freq_Scale[12] , 
         \ADC_Data[3][10].sig_088.FeedThruLUT , 
         \ADC_Data[3][11].sig_087.FeedThruLUT , \ADC_Data[3][10] , 
         \ADC_Data[3][11] , \Freq_Scale[11] , \Freq_Scale[10] , 
         \ADC_Data[3][8].sig_090.FeedThruLUT , 
         \ADC_Data[3][9].sig_089.FeedThruLUT , \ADC_Data[3][8] , 
         \ADC_Data[3][9] , \Freq_Scale[9] , \Freq_Scale[8] , 
         \ADC_Data[3][6].sig_092.FeedThruLUT , 
         \ADC_Data[3][7].sig_091.FeedThruLUT , \ADC_Data[3][6] , 
         \ADC_Data[3][7] , \Freq_Scale[7] , \Freq_Scale[6] , 
         \ADC_Data[3][4].sig_094.FeedThruLUT , 
         \ADC_Data[3][5].sig_093.FeedThruLUT , \ADC_Data[3][4] , 
         \ADC_Data[3][5] , \Freq_Scale[5] , \Freq_Scale[4] , 
         \ADC_Data[3][2].sig_096.FeedThruLUT , 
         \ADC_Data[3][3].sig_095.FeedThruLUT , \ADC_Data[3][2] , 
         \ADC_Data[3][3] , \Freq_Scale[3] , \Freq_Scale[2] , 
         \ADC_Data[3][0].sig_140.FeedThruLUT , 
         \ADC_Data[3][1].sig_097.FeedThruLUT , \ADC_Data[3][0] , 
         \ADC_Data[3][1] , \Freq_Scale[1] , \Freq_Scale[0] , 
         \ADC_Data[2][8].sig_098.FeedThruLUT , \ADC_Data[2][8] , 
         \Scale_Initial[8] , \ADC_Data[2][6].sig_100.FeedThruLUT , 
         \ADC_Data[2][7].sig_099.FeedThruLUT , \ADC_Data[2][6] , 
         \ADC_Data[2][7] , \Scale_Initial[7] , \Scale_Initial[6] , 
         \ADC_Data[4][6].sig_102.FeedThruLUT , 
         \ADC_Data[4][7].sig_101.FeedThruLUT , \ADC_Data[4][6] , 
         \ADC_Data[4][7] , \Comb_Interval[7] , \Comb_Interval[6] , n7, 
         \SM_Top[0] , \SM_Top[2] , n9800, \Adder_Start[1] , 
         \Adder_Total[0][3].sig_108.FeedThruLUT , 
         \Adder_Total[0][2].sig_107.FeedThruLUT , n6387, 
         \Adder_Total[0][5].sig_110.FeedThruLUT , 
         \Adder_Total[0][4].sig_109.FeedThruLUT , 
         \Adder_Total[0][7].sig_112.FeedThruLUT , 
         \Adder_Total[0][6].sig_111.FeedThruLUT , 
         \Adder_Total[0][9].sig_114.FeedThruLUT , 
         \Adder_Total[0][8].sig_113.FeedThruLUT , 
         \Adder_Total[0][11].sig_116.FeedThruLUT , 
         \Adder_Total[0][10].sig_115.FeedThruLUT , 
         \Adder_Total[0][13].sig_118.FeedThruLUT , 
         \Adder_Total[0][12].sig_117.FeedThruLUT , 
         \Adder_Total[0][15].sig_120.FeedThruLUT , 
         \Adder_Total[0][14].sig_119.FeedThruLUT , 
         \Adder_Total[0][17].sig_122.FeedThruLUT , 
         \Adder_Total[0][16].sig_121.FeedThruLUT , 
         \Adder_Total[1][3].sig_124.FeedThruLUT , 
         \Adder_Total[1][2].sig_123.FeedThruLUT , 
         \Adder_Total[1][5].sig_126.FeedThruLUT , 
         \Adder_Total[1][4].sig_125.FeedThruLUT , 
         \Adder_Total[1][7].sig_128.FeedThruLUT , 
         \Adder_Total[1][6].sig_127.FeedThruLUT , 
         \Adder_Total[1][9].sig_130.FeedThruLUT , 
         \Adder_Total[1][8].sig_129.FeedThruLUT , 
         \Adder_Total[1][11].sig_132.FeedThruLUT , 
         \Adder_Total[1][10].sig_131.FeedThruLUT , 
         \Adder_Total[1][13].sig_134.FeedThruLUT , 
         \Adder_Total[1][12].sig_133.FeedThruLUT , 
         \Adder_Total[1][15].sig_136.FeedThruLUT , 
         \Adder_Total[1][14].sig_135.FeedThruLUT , 
         \Adder_Total[1][17].sig_138.FeedThruLUT , 
         \Adder_Total[1][16].sig_137.FeedThruLUT , 
         \SM_Top[2].sig_139.FeedThruLUT , n6353, n9910, Adder_Clear, 
         \genadder[1].adder.n6705 , \genadder[1].adder.n6707 , n2976, 
         \genadder[1].adder.n6701 , \genadder[1].adder.n6703 , 
         \genadder[1].adder.n6697 , \genadder[1].adder.n6699 , 
         \genadder[1].adder.n6693 , \genadder[1].adder.n6695 , 
         \genadder[1].adder.n6689 , \genadder[1].adder.n6691 , 
         \genadder[1].adder.n6675 , \genadder[1].adder.n6533 , 
         \genadder[1].adder.n6685 , \genadder[1].adder.n6687 , 
         \genadder[1].adder.n6681 , \genadder[1].adder.n6683 , 
         \genadder[1].adder.n6677 , \genadder[1].adder.n6679 , n6746, n6769, 
         n18, n2944, n17_adj_1169, n6767, n6768, n15_adj_1168, n16, n6765, 
         n6766, n13, n14, n6763, n6764, n11, n12, n6761, n6762, n9_adj_1167, 
         n10, n6759, n6760, n7_adj_1166, n8_2, n6757, n6758, n5_adj_1165, n6, 
         n6755, n6756, n3, n4_adj_1164, \genadder[1].adder.n6709 , 
         \genadder[0].adder.n6641 , \genadder[0].adder.n6639 , n2971, 
         \genadder[0].adder.n6635 , \genadder[0].adder.n6637 , 
         \genadder[0].adder.n6667 , \genadder[0].adder.n6504 , n6745, n6784, 
         n2942, \genadder[0].adder.n6663 , \genadder[0].adder.n6665 , 
         \genadder[0].adder.n6659 , \genadder[0].adder.n6661 , 
         \genadder[0].adder.n6655 , \genadder[0].adder.n6657 , 
         \genadder[0].adder.n6651 , \genadder[0].adder.n6653 , n6782, n6783, 
         \genadder[0].adder.n6647 , \genadder[0].adder.n6649 , 
         \genadder[0].adder.n6643 , \genadder[0].adder.n6645 , n6780, n6781, 
         n6778, n6779, n6776, n6777, n6774, n6775, n6772, n6773, n6770, n6771, 
         \mult.o_Mult_8__N_742[1] , \mult.o_Mult_8__N_742[0] , 
         Reset_Mult_Scaler, \mult.n6380 , \mult.n4069 , \mult.n4067 , 
         \mult.SM_Scale_Mult[1] , n6875, \mult.n1_adj_1086 , \mult.n1_2 , 
         \SM_Scale_Mult[0] , \mult.n9555 , \mult.n15 , \mult.n6258 , 
         o_Mult_Ready_N_783, \mult.n4073 , \mult.n4071 , \mult.n4077 , 
         \mult.n4075 , \mult.n3994 , \mult.n4079 , \mult.o_Mult_8__N_742[3] , 
         \mult.o_Mult_8__N_742[2] , \mult.o_Mult_8__N_742[5] , 
         \mult.o_Mult_8__N_742[4] , \mult.o_Mult_8__N_742[7] , 
         \mult.o_Mult_8__N_742[6] , \mult.o_Mult_8__N_742[8] , 
         \adc.Data_State.sig_143.FeedThruLUT , \adc.Data_State , \adc.n5924 , 
         \adc.Clock_Stable , \adc.Data_State.sig_144.FeedThruLUT , \adc.n6056 , 
         \adc.Data_State.sig_145.FeedThruLUT , \adc.n6055 , 
         \adc.Data_State.sig_146.FeedThruLUT , \adc.n6054 , 
         \adc.Data_State.sig_147.FeedThruLUT , \adc.n6053 , 
         \adc.Data_State.sig_148.FeedThruLUT , \adc.n6004 , 
         \adc.Data_State.sig_149.FeedThruLUT , \adc.n6052 , 
         \adc.Data_State.sig_150.FeedThruLUT , \adc.n6032 , 
         \adc.Data_State.sig_151.FeedThruLUT , \adc.n5928 , 
         \adc.Data_State.sig_152.FeedThruLUT , \adc.n6050 , 
         \adc.Data_State.sig_153.FeedThruLUT , \adc.n6049 , 
         \adc.Data_State.sig_154.FeedThruLUT , \adc.n6048 , 
         \adc.Data_State.sig_155.FeedThruLUT , \adc.n6047 , 
         \adc.Data_State.sig_156.FeedThruLUT , \adc.n6003 , 
         \adc.Data_State.sig_157.FeedThruLUT , \adc.n6046 , 
         \adc.Data_State.sig_158.FeedThruLUT , \adc.n6031 , 
         \adc.Data_State.sig_159.FeedThruLUT , \adc.n5927 , 
         \adc.Data_State.sig_160.FeedThruLUT , \adc.n6044 , 
         \adc.Data_State.sig_162.FeedThruLUT , \adc.n6043 , 
         \i_ADC_Clock_c.sig_165.FeedThruLUT , i_ADC_Clock_c, \adc.n9895 , 
         \adc.Data_State.sig_166.FeedThruLUT , \adc.n6042 , 
         \adc.Data_State.sig_167.FeedThruLUT , \adc.n6041 , 
         \adc.Data_State.sig_168.FeedThruLUT , \adc.n5998 , 
         \adc.Data_State.sig_169.FeedThruLUT , \adc.n6040 , 
         \adc.Data_State.sig_170.FeedThruLUT , \adc.n6030 , 
         \adc.Data_State.sig_171.FeedThruLUT , \adc.n9550 , 
         \adc.Data_State.sig_172.FeedThruLUT , \adc.n5923 , \adc.n17[0] , 
         \adc.n17[1] , \adc.Count_Stable[0] , \adc.Count_Stable[1] , 
         \adc.n6737 , \adc.n17[2] , \adc.Count_Stable[2] , 
         \adc.Data_State.sig_174.FeedThruLUT , \adc.n6037 , 
         \adc.Data_State.sig_175.FeedThruLUT , \adc.n6036 , 
         \adc.Data_State.sig_176.FeedThruLUT , \adc.n6035 , 
         \adc.Data_State.sig_178.FeedThruLUT , \adc.n6034 , 
         \adc.Data_State.sig_179.FeedThruLUT , \adc.n6028 , 
         \adc.Data_State.sig_180.FeedThruLUT , \adc.n9549 , \ADC_Data[1][8] , 
         \adc.Data_State.sig_181.FeedThruLUT , \adc.n5926 , 
         \adc.Data_State.sig_182.FeedThruLUT , \adc.n6011 , 
         \adc.Data_State.sig_183.FeedThruLUT , \adc.n6010 , 
         \adc.Data_State.sig_184.FeedThruLUT , \adc.n6009 , 
         \adc.Data_State.sig_185.FeedThruLUT , \adc.n6006 , 
         \adc.Data_State.sig_186.FeedThruLUT , \adc.n5999 , 
         \adc.Data_State.sig_188.FeedThruLUT , \adc.n6007 , 
         \adc.Data_State.sig_189.FeedThruLUT , \adc.n6008 , 
         \adc.Data_State.sig_190.FeedThruLUT , \adc.n4663 , 
         \adc.Data_State.sig_192.FeedThruLUT , \adc.n6014 , 
         \adc.Data_State.sig_193.FeedThruLUT , \adc.n6015 , \adc.n370[2] , 
         \adc.n370[1] , \adc.Receive_Bit[1] , \adc.Receive_Bit[2] , 
         \adc.Receive_Bit[0] , \adc.n2963 , \adc.n6674 , 
         \adc.Data_State.sig_195.FeedThruLUT , \adc.n6016 , 
         \adc.Data_State.sig_196.FeedThruLUT , \adc.n6000 , 
         \adc.Data_State.sig_197.FeedThruLUT , \adc.n6017 , 
         \adc.Data_State.sig_198.FeedThruLUT , \adc.n6018 , 
         \adc.Data_State.sig_199.FeedThruLUT , \adc.n5925 , 
         \adc.Data_State.sig_200.FeedThruLUT , \adc.n6020 , 
         \adc.Data_State.sig_201.FeedThruLUT , \adc.n6021 , 
         \adc.Data_State.sig_202.FeedThruLUT , \adc.n6022 , 
         \adc.Data_State.sig_203.FeedThruLUT , \adc.n6023 , 
         \adc.Data_State.sig_204.FeedThruLUT , \adc.n6001 , 
         \adc.Data_State.sig_205.FeedThruLUT , \adc.n6024 , n21, n24, 
         \sample_output.dac.n10588 , \sample_output.dac.n10589 , 
         \sample_output.dac.n11215 , \sample_output.dac.n10580 , 
         \sample_output.dac.n10579 , \sample_output.dac.n11218 , 
         \sample_output.dac.n24 , n2635, \SM_DAC_Out[0] , \SM_DAC_Out[3] , 
         \sample_output.dac.n9882 , \sample_output.dac.n9586 , 
         \sample_output.dac.o_SPI_Data_N_1070 , DAC_Send_adj_1196, n6888, 
         o_DAC_MOSI_c, \sample_output.dac.n15 , \sample_output.dac.n11230 , 
         \sample_output.dac.n11224 , \sample_output.dac.n11221 , 
         \sample_output.dac.n10585 , \sample_output.dac.n10586 , 
         \sample_output.dac.n15_adj_1092 , \sample_output.dac.n10583 , 
         \sample_output.dac.n10582 , \sample_output.dac.n11227 , 
         \sample_output.dac.n10 , n10255, n10_adj_1195, 
         \sample_output.dac.Current_Bit[4] , n10223, n6092, Mult_Ready, n31, 
         n9939, n9876, n10225, n6202, n9877, n9864, n303, n9_adj_1199, n4, 
         n5994, Freq_Too_High, n5890, \sample_position.n10277 , 
         \sample_position.n6_adj_1159 , \sample_position.n4 , 
         \sample_position.n30 , \sample_position.n28 , \sample_position.n26 , 
         \sample_position.n24 , \sample_position.n22 , \sample_position.n20 , 
         \sample_position.n18 , \sample_position.n7_adj_1095 , n10237, 
         o_Freq_Too_High_N_368, \sample_position.n4_adj_1096 , n9630, 
         \sample_position.n16 , \sample_position.n14_adj_1097 , 
         \sample_position.n6 , \sample_position.n9533 , 
         \sample_position.n12_adj_1098 , \sample_position.n12 , 
         \sample_position.n10 , \sample_position.n8 , \sample_position.n5985 , 
         \sample_position.n8_adj_1106 , \sample_position.n6_adj_1116 , 
         \sample_position.n4_adj_1117 , \sample_position.n9842 , 
         \sample_position.n4_adj_1118 , \sample_position.n2_adj_1133 , 
         \sample_position.n6125 , n6_adj_1197, n5, \sample_output.n4 , 
         \sample_output.n6550 , n17_2, \SM_DAC_Out[1].sig_079.FeedThruLUT , 
         n2078, \sample_output.dac.n7584 , \sample_output.dac.n22 , 
         \sample_output.dac.n10275 , \sample_output.dac.n10261 , o_DAC_SCK_c, 
         \sample_output.dac.n10249 , \sample_output.dac.n5907 , n2085, 
         \sample_output.dac.n5496 , n2118, n2101, \sample_output.dac.n6538 , 
         \sample_output.dac.n6 , \sample_output.n9836 , n13_adj_1216, n10593, 
         n7786, \sample_output.dac.n5 , \sample_output.dac.n2852 , n5492, 
         n42_adj_1206, n4_adj_1208, n38, n21_adj_1207, n10259, n10285, 
         n4_adj_1204, n5892, n7754, n10231, Sample_Ready, n1_2, n10247, n9938, 
         n6152, \sample_position.n6288 , n6204, n10245, n10235, n9911, 
         n9_adj_1201, n16_adj_1205, n9656, n9730, \Adder_Start[0] , n15, 
         n15_adj_1162, n15_adj_1189, n14_adj_1190, n9_adj_1200, n14_adj_1202, 
         debug_c, \mult.n10 , \mult.n14 , \mult.n10_adj_1087 , \mult.n9 , 
         \mult.n12 , \mult.n11 , \adc.Data_State.sig_173.FeedThruLUT , 
         \adc.n6038 , \adc.n8 , \adc.n5932 , \adc.n12 , \adc.n12_adj_1078 , 
         CS_Stable, SM_ADC_In, \adc.n6026 , \adc.n12_adj_1079 , \adc.n9 , 
         \adc.Receive_Bit[3] , \adc.Receive_Byte[1]_2 , \Receive_Byte[0] , 
         \adc.Receive_Byte[2]_2 , \adc.n8_adj_1080 , \adc.n10 , n6794, n6588, 
         n6299, \adc.n12_adj_1081 , \adc.CS_State_N_586 , 
         \adc.CS_Stable_N_596 , \adc.Clock_State , i_ADC_Data_c, \adc.n6598 , 
         \adc.n7597 , \adc.n12_adj_1082 , \adc.n6025 , \adc.n377[1] , 
         \adc.n370[3] , \adc.n11 , \adc.n377[3] , \adc.Receive_Byte[3]_2 , 
         \adc.n8_adj_1083 , \adc.n12_adj_1084 , \adc.n7 , 
         \adc.o_Data_Received_N_577 , \adc.n377[2] , \adc.n12_adj_1085 , 
         \adc.n10265 , \adc.n10229 , n6788, n7_adj_1210, Start_Mult_Scaler, 
         \mult.n6121 , \adc.n6002 , \adc.n6013 , \sample_position.n5888 , 
         \SM_Sample_Position[0].sig_042.FeedThruLUT , \SM_Top_3__N_121[0] , 
         n9_adj_1171, Comb_Muted, \mult.SM_Scale_Mult[1].sig_142.FeedThruLUT , 
         n9, \SM_Top_3__N_121[3] , n9_adj_1191, \sample_output.n9816 , 
         \SM_Sample_Output[0].sig_047.FeedThruLUT , \adc.CS_State , 
         \adc.i_ADC_CS_c , \sample_output.dac.n6165 , n9915, \n2085$n0 , 
         \SM_Top_3__N_121[2] , n6_adj_1198, 
         \SM_Sample_Position[2].sig_031.FeedThruLUT , 
         \adc.Data_State.sig_191.FeedThruLUT , 
         \adc.Data_State.sig_187.FeedThruLUT , 
         \sample_position.n87_adj_1160[0].sig_206.FeedThruLUT , 
         \SM_Adder_adj_1218[0] , \sample_position.n3 , 
         \sample_position.Sample_Pos_WE , 
         \sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.wr_en_i_N_372 
         , \SM_Adder[0] , \sample_output.dac.n25[4] , 
         \sample_output.dac.n8637 , \sample_output.dac.o_Ready_N_1072 , 
         \sample_output.dac.n5490 , \SM_Top_3__N_121[1] , n7_adj_1163, n9832, 
         n4_adj_1192, n6_adj_1170, \SM_Sample_Position[1].sig_043.FeedThruLUT , 
         \sample_position.n9784 , \genadder[1].adder.n8[0] , 
         \SM_Top[3].sig_104.FeedThruLUT , \ADC_Data[1][8].sig_024.FeedThruLUT , 
         \Harmonic_Scale[8] , n6785, \adc.Data_State.sig_177.FeedThruLUT , 
         \i_ADC_Clock_c.sig_161.FeedThruLUT , \adc.n3663 , n6753, n7720, 
         \adc.i_ADC_CS_c.sig_164.FeedThruLUT , \adc.n3659 , 
         \i_ADC_Data_c.sig_163.FeedThruLUT , \adc.n3661 , 
         \adc.i_ADC_CS_c.sig_194.FeedThruLUT , \adc.n7552 , 
         \genadder[0].adder.n6633 , \adc.n1 , \adc.n2 , 
         \SM_Top[3].sig_105.FeedThruLUT , \Sample_Value[15] , 
         \Sample_Value[14] , \Sample_Value[13] , \Sample_Value[12] , 
         \Sample_Value[11] , \Sample_Value[10] , \Sample_Value[9] , 
         \Sample_Value[8] , \Sample_Value[7] , \Sample_Value[6] , 
         \Sample_Value[5] , \Sample_Value[4] , \Sample_Value[3] , 
         \Sample_Value[2] , \Sample_Value[1] , \Sample_Value[0] , i_Clock_c, 
         \pll_48.lscc_pll_inst.feedback_w ;

  sample_position_SLICE_0 \sample_position.SLICE_0 ( 
    .DI0(\sample_position.n69[15] ), .D1(\sample_position.n12155 ), 
    .D0(\sample_position.n8713 ), .C0(\sample_position.n8569 ), 
    .B0(\sample_position.n8568 ), .CE(\sample_position.n6330 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8713 ), 
    .CIN1(\sample_position.n12155 ), 
    .Q0(\sample_position.Accumulated_Frequency[15] ), 
    .F0(\sample_position.n69[15] ), .COUT0(\sample_position.n12155 ));
  sample_position_SLICE_1 \sample_position.SLICE_1 ( 
    .DI1(\sample_position.n69[14] ), .DI0(\sample_position.n69[13] ), 
    .D1(\sample_position.n12152 ), .C1(\sample_position.n8571 ), 
    .B1(\sample_position.n8570 ), .D0(\sample_position.n8711 ), 
    .C0(\sample_position.n8573 ), .B0(\sample_position.n8572 ), 
    .CE(\sample_position.n6330 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n8711 ), .CIN1(\sample_position.n12152 ), 
    .Q0(\sample_position.Accumulated_Frequency[13] ), 
    .Q1(\sample_position.Accumulated_Frequency[14] ), 
    .F0(\sample_position.n69[13] ), .F1(\sample_position.n69[14] ), 
    .COUT1(\sample_position.n8713 ), .COUT0(\sample_position.n12152 ));
  sample_position_SLICE_2 \sample_position.SLICE_2 ( 
    .DI1(\sample_position.n69[12] ), .DI0(\sample_position.n69[11] ), 
    .D1(\sample_position.n12149 ), .C1(\sample_position.n8575 ), 
    .B1(\sample_position.n8574 ), .D0(\sample_position.n8709 ), 
    .C0(\sample_position.n8577 ), .B0(\sample_position.n8576 ), 
    .CE(\sample_position.n6330 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n8709 ), .CIN1(\sample_position.n12149 ), 
    .Q0(\sample_position.Accumulated_Frequency[11] ), 
    .Q1(\sample_position.Accumulated_Frequency[12] ), 
    .F0(\sample_position.n69[11] ), .F1(\sample_position.n69[12] ), 
    .COUT1(\sample_position.n8711 ), .COUT0(\sample_position.n12149 ));
  sample_position_SLICE_3 \sample_position.SLICE_3 ( 
    .DI0(\sample_position.n87[15] ), .D1(\sample_position.n12008 ), 
    .D0(\sample_position.n8839 ), 
    .C0(\sample_position.Accumulated_Frequency[15] ), 
    .B0(\sample_position.Sample_Pos_Read[15] ), .CE(n6849), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_position.n8839 ), 
    .CIN1(\sample_position.n12008 ), 
    .Q0(\sample_position.Sample_Position[15] ), .F0(\sample_position.n87[15] ), 
    .COUT0(\sample_position.n12008 ));
  sample_position_SLICE_4 \sample_position.SLICE_4 ( 
    .DI1(\sample_position.n87[14] ), .DI0(\sample_position.n87[13] ), 
    .D1(\sample_position.n12005 ), 
    .C1(\sample_position.Accumulated_Frequency[14] ), 
    .B1(\sample_position.Sample_Pos_Read[14] ), .D0(\sample_position.n8837 ), 
    .C0(\sample_position.Accumulated_Frequency[13] ), 
    .B0(\sample_position.Sample_Pos_Read[13] ), .CE(n6849), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_position.n8837 ), 
    .CIN1(\sample_position.n12005 ), 
    .Q0(\sample_position.Sample_Position[13] ), 
    .Q1(\sample_position.Sample_Position[14] ), .F0(\sample_position.n87[13] ), 
    .F1(\sample_position.n87[14] ), .COUT1(\sample_position.n8839 ), 
    .COUT0(\sample_position.n12005 ));
  sample_position_SLICE_5 \sample_position.SLICE_5 ( 
    .DI1(\sample_position.n69[10] ), .DI0(\sample_position.n69[9] ), 
    .D1(\sample_position.n12146 ), .C1(\sample_position.n8579 ), 
    .B1(\sample_position.n8578 ), .D0(\sample_position.n8707 ), 
    .C0(\sample_position.n8581 ), .B0(\sample_position.n8580 ), 
    .CE(\sample_position.n6330 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n8707 ), .CIN1(\sample_position.n12146 ), 
    .Q0(\sample_position.Accumulated_Frequency[9] ), 
    .Q1(\sample_position.Accumulated_Frequency[10] ), 
    .F0(\sample_position.n69[9] ), .F1(\sample_position.n69[10] ), 
    .COUT1(\sample_position.n8709 ), .COUT0(\sample_position.n12146 ));
  sample_position_SLICE_6 \sample_position.SLICE_6 ( 
    .DI1(\sample_position.n87[12] ), .DI0(\sample_position.n87[11] ), 
    .D1(\sample_position.n12002 ), 
    .C1(\sample_position.Accumulated_Frequency[12] ), 
    .B1(\sample_position.Sample_Pos_Read[12] ), .D0(\sample_position.n8835 ), 
    .C0(\sample_position.Accumulated_Frequency[11] ), 
    .B0(\sample_position.Sample_Pos_Read[11] ), .CE(n6849), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_position.n8835 ), 
    .CIN1(\sample_position.n12002 ), 
    .Q0(\sample_position.Sample_Position[11] ), 
    .Q1(\sample_position.Sample_Position[12] ), .F0(\sample_position.n87[11] ), 
    .F1(\sample_position.n87[12] ), .COUT1(\sample_position.n8837 ), 
    .COUT0(\sample_position.n12002 ));
  sample_position_SLICE_7 \sample_position.SLICE_7 ( 
    .DI1(\sample_position.n69[8] ), .DI0(\sample_position.n69[7] ), 
    .D1(\sample_position.n12143 ), .C1(\sample_position.n8583 ), 
    .B1(\sample_position.n8582 ), .D0(\sample_position.n8705 ), 
    .C0(\sample_position.n8585 ), .B0(\sample_position.n8584 ), 
    .CE(\sample_position.n6330 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n8705 ), .CIN1(\sample_position.n12143 ), 
    .Q0(\sample_position.Accumulated_Frequency[7] ), 
    .Q1(\sample_position.Accumulated_Frequency[8] ), 
    .F0(\sample_position.n69[7] ), .F1(\sample_position.n69[8] ), 
    .COUT1(\sample_position.n8707 ), .COUT0(\sample_position.n12143 ));
  sample_position_SLICE_8 \sample_position.SLICE_8 ( 
    .DI1(\sample_position.n87[10] ), .DI0(\sample_position.n87[9] ), 
    .D1(\sample_position.n11999 ), 
    .C1(\sample_position.Accumulated_Frequency[10] ), 
    .B1(\sample_position.Sample_Pos_Read[10] ), .D0(\sample_position.n8833 ), 
    .C0(\sample_position.Accumulated_Frequency[9] ), 
    .B0(\sample_position.Sample_Pos_Read[9] ), .CE(n6849), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8833 ), 
    .CIN1(\sample_position.n11999 ), .Q0(\sample_position.Sample_Position[9] ), 
    .Q1(\sample_position.Sample_Position[10] ), .F0(\sample_position.n87[9] ), 
    .F1(\sample_position.n87[10] ), .COUT1(\sample_position.n8835 ), 
    .COUT0(\sample_position.n11999 ));
  sample_position_SLICE_9 \sample_position.SLICE_9 ( 
    .DI1(\sample_position.n87[8] ), .DI0(\sample_position.n87[7] ), 
    .D1(\sample_position.n11996 ), 
    .C1(\sample_position.Accumulated_Frequency[8] ), 
    .B1(\sample_position.Sample_Pos_Read[8] ), .D0(\sample_position.n8831 ), 
    .C0(\sample_position.Accumulated_Frequency[7] ), 
    .B0(\sample_position.Sample_Pos_Read[7] ), .CE(n6849), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8831 ), 
    .CIN1(\sample_position.n11996 ), .Q0(\sample_position.Sample_Position[7] ), 
    .Q1(\sample_position.Sample_Position[8] ), .F0(\sample_position.n87[7] ), 
    .F1(\sample_position.n87[8] ), .COUT1(\sample_position.n8833 ), 
    .COUT0(\sample_position.n11996 ));
  sample_position_SLICE_10 \sample_position.SLICE_10 ( 
    .DI1(\sample_position.n69[6] ), .DI0(\sample_position.n69[5] ), 
    .D1(\sample_position.n12140 ), .C1(\sample_position.n8587 ), 
    .B1(\sample_position.n8586 ), .D0(\sample_position.n8703 ), 
    .C0(\sample_position.n8589 ), .B0(\sample_position.n8588 ), 
    .CE(\sample_position.n6330 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n8703 ), .CIN1(\sample_position.n12140 ), 
    .Q0(\sample_position.Accumulated_Frequency[5] ), 
    .Q1(\sample_position.Accumulated_Frequency[6] ), 
    .F0(\sample_position.n69[5] ), .F1(\sample_position.n69[6] ), 
    .COUT1(\sample_position.n8705 ), .COUT0(\sample_position.n12140 ));
  sample_position_SLICE_11 \sample_position.SLICE_11 ( 
    .DI1(\sample_position.n87[6] ), .DI0(\sample_position.n87[5] ), 
    .D1(\sample_position.n11993 ), 
    .C1(\sample_position.Accumulated_Frequency[6] ), 
    .B1(\sample_position.Sample_Pos_Read[6] ), .D0(\sample_position.n8829 ), 
    .C0(\sample_position.Accumulated_Frequency[5] ), 
    .B0(\sample_position.Sample_Pos_Read[5] ), .CE(n6849), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8829 ), 
    .CIN1(\sample_position.n11993 ), .Q0(\sample_position.Sample_Position[5] ), 
    .Q1(\sample_position.Sample_Position[6] ), .F0(\sample_position.n87[5] ), 
    .F1(\sample_position.n87[6] ), .COUT1(\sample_position.n8831 ), 
    .COUT0(\sample_position.n11993 ));
  sample_position_SLICE_12 \sample_position.SLICE_12 ( 
    .DI1(\sample_position.n69[4] ), .DI0(\sample_position.n69[3] ), 
    .D1(\sample_position.n12137 ), .C1(\sample_position.n8591 ), 
    .B1(\sample_position.n8590 ), .D0(\sample_position.n8701 ), 
    .C0(\sample_position.n8593 ), .B0(\sample_position.n8592 ), 
    .CE(\sample_position.n6330 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n8701 ), .CIN1(\sample_position.n12137 ), 
    .Q0(\sample_position.Accumulated_Frequency[3] ), 
    .Q1(\sample_position.Accumulated_Frequency[4] ), 
    .F0(\sample_position.n69[3] ), .F1(\sample_position.n69[4] ), 
    .COUT1(\sample_position.n8703 ), .COUT0(\sample_position.n12137 ));
  sample_position_SLICE_13 \sample_position.SLICE_13 ( 
    .DI1(\sample_position.n87[4] ), .DI0(\sample_position.n87[3] ), 
    .D1(\sample_position.n11990 ), 
    .C1(\sample_position.Accumulated_Frequency[4] ), 
    .B1(\sample_position.Sample_Pos_Read[4] ), .D0(\sample_position.n8827 ), 
    .C0(\sample_position.Accumulated_Frequency[3] ), 
    .B0(\sample_position.Sample_Pos_Read[3] ), .CE(n6849), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8827 ), 
    .CIN1(\sample_position.n11990 ), .Q0(\sample_position.Sample_Position[3] ), 
    .Q1(\sample_position.Sample_Position[4] ), .F0(\sample_position.n87[3] ), 
    .F1(\sample_position.n87[4] ), .COUT1(\sample_position.n8829 ), 
    .COUT0(\sample_position.n11990 ));
  sample_position_SLICE_14 \sample_position.SLICE_14 ( 
    .DI1(\sample_position.n87[2] ), .DI0(\sample_position.n87[1] ), 
    .D1(\sample_position.n11987 ), 
    .C1(\sample_position.Accumulated_Frequency[2] ), 
    .B1(\sample_position.Sample_Pos_Read[2] ), .D0(\sample_position.n8825 ), 
    .C0(\sample_position.Accumulated_Frequency[1] ), 
    .B0(\sample_position.Sample_Pos_Read[1] ), .CE(n6849), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8825 ), 
    .CIN1(\sample_position.n11987 ), .Q0(\sample_position.Sample_Position[1] ), 
    .Q1(\sample_position.Sample_Position[2] ), .F0(\sample_position.n87[1] ), 
    .F1(\sample_position.n87[2] ), .COUT1(\sample_position.n8827 ), 
    .COUT0(\sample_position.n11987 ));
  sample_position_SLICE_15 \sample_position.SLICE_15 ( 
    .DI1(\sample_position.n87[0] ), .D1(\sample_position.n11885 ), 
    .C1(\sample_position.Accumulated_Frequency[0] ), 
    .B1(\sample_position.Sample_Pos_Read[0] ), .CE(n6849), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN1(\sample_position.n11885 ), 
    .Q1(\sample_position.Sample_Position[0] ), .F1(\sample_position.n87[0] ), 
    .COUT1(\sample_position.n8825 ), .COUT0(\sample_position.n11885 ));
  sample_position_SLICE_16 \sample_position.SLICE_16 ( 
    .DI0(\sample_position.n87_adj_1160[15] ), .D1(\sample_position.n12068 ), 
    .D0(\sample_position.n8822 ), .C0(\sample_position.n2221[15] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .CE(\sample_position.n6257 ), .LSR(\sample_position.n6569 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8822 ), 
    .CIN1(\sample_position.n12068 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .F0(\sample_position.n87_adj_1160[15] ), .COUT0(\sample_position.n12068 ));
  sample_position_SLICE_17 \sample_position.SLICE_17 ( 
    .DI1(\sample_position.n87_adj_1160[14] ), 
    .DI0(\sample_position.n87_adj_1160[13] ), .D1(\sample_position.n12065 ), 
    .C1(\sample_position.n2221[14] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .D0(\sample_position.n8820 ), .C0(\sample_position.n2221[13] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .CE(\sample_position.n6257 ), .LSR(\sample_position.n6569 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8820 ), 
    .CIN1(\sample_position.n12065 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .F0(\sample_position.n87_adj_1160[13] ), 
    .F1(\sample_position.n87_adj_1160[14] ), .COUT1(\sample_position.n8822 ), 
    .COUT0(\sample_position.n12065 ));
  sample_position_SLICE_18 \sample_position.SLICE_18 ( 
    .DI1(\sample_position.n69[2] ), .DI0(\sample_position.n69[1] ), 
    .D1(\sample_position.n12134 ), .C1(\sample_position.n8595 ), 
    .B1(\sample_position.n8594 ), .D0(\sample_position.n8699 ), 
    .C0(\sample_position.n8597 ), .B0(\sample_position.n8596 ), 
    .CE(\sample_position.n6330 ), .CLK(Main_Clock), 
    .CIN0(\sample_position.n8699 ), .CIN1(\sample_position.n12134 ), 
    .Q0(\sample_position.Accumulated_Frequency[1] ), 
    .Q1(\sample_position.Accumulated_Frequency[2] ), 
    .F0(\sample_position.n69[1] ), .F1(\sample_position.n69[2] ), 
    .COUT1(\sample_position.n8701 ), .COUT0(\sample_position.n12134 ));
  sample_position_SLICE_19 \sample_position.SLICE_19 ( 
    .DI1(\sample_position.n69[0] ), .D1(\sample_position.n12071 ), 
    .C1(\sample_position.n8599 ), .B1(\sample_position.n8598 ), 
    .CE(\sample_position.n6330 ), .CLK(Main_Clock), 
    .CIN1(\sample_position.n12071 ), 
    .Q1(\sample_position.Accumulated_Frequency[0] ), 
    .F1(\sample_position.n69[0] ), .COUT1(\sample_position.n8699 ), 
    .COUT0(\sample_position.n12071 ));
  sample_position_SLICE_20 \sample_position.SLICE_20 ( 
    .DI1(\sample_position.n87_adj_1160[12] ), 
    .DI0(\sample_position.n87_adj_1160[11] ), .D1(\sample_position.n12062 ), 
    .C1(\sample_position.n2221[12] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .D0(\sample_position.n8818 ), .C0(\sample_position.n2221[11] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .CE(\sample_position.n6257 ), .LSR(\sample_position.n6569 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8818 ), 
    .CIN1(\sample_position.n12062 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .F0(\sample_position.n87_adj_1160[11] ), 
    .F1(\sample_position.n87_adj_1160[12] ), .COUT1(\sample_position.n8820 ), 
    .COUT0(\sample_position.n12062 ));
  sample_position_SLICE_21 \sample_position.SLICE_21 ( 
    .DI1(\sample_position.n87_adj_1160[10] ), 
    .DI0(\sample_position.n87_adj_1160[9] ), .D1(\sample_position.n12059 ), 
    .C1(\sample_position.n2221[10] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .D0(\sample_position.n8816 ), .C0(\sample_position.n2221[9] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .CE(\sample_position.n6257 ), .LSR(\sample_position.n6569 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8816 ), 
    .CIN1(\sample_position.n12059 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .F0(\sample_position.n87_adj_1160[9] ), 
    .F1(\sample_position.n87_adj_1160[10] ), .COUT1(\sample_position.n8818 ), 
    .COUT0(\sample_position.n12059 ));
  sample_position_SLICE_22 \sample_position.SLICE_22 ( 
    .DI1(\sample_position.n87_adj_1160[8] ), 
    .DI0(\sample_position.n87_adj_1160[7] ), .D1(\sample_position.n12053 ), 
    .C1(\sample_position.n2221[8] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[8] ), 
    .D0(\sample_position.n8814 ), .C0(\sample_position.n2221[7] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .CE(\sample_position.n6257 ), .LSR(\sample_position.n6569 ), 
    .CLK(Main_Clock), .CIN0(\sample_position.n8814 ), 
    .CIN1(\sample_position.n12053 ), 
    .Q0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[8] ), 
    .F0(\sample_position.n87_adj_1160[7] ), 
    .F1(\sample_position.n87_adj_1160[8] ), .COUT1(\sample_position.n8816 ), 
    .COUT0(\sample_position.n12053 ));
  sample_position_SLICE_23 \sample_position.SLICE_23 ( 
    .D1(\sample_position.n12050 ), .C1(\sample_position.n2221[6] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .D0(\sample_position.n8812 ), .C0(\sample_position.n2221[5] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .CIN0(\sample_position.n8812 ), .CIN1(\sample_position.n12050 ), 
    .F0(\sample_position.n87_adj_1160[5] ), 
    .F1(\sample_position.n87_adj_1160[6] ), .COUT1(\sample_position.n8814 ), 
    .COUT0(\sample_position.n12050 ));
  sample_position_SLICE_24 \sample_position.SLICE_24 ( 
    .D1(\sample_position.n12047 ), .C1(\sample_position.n2221[4] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .D0(\sample_position.n8810 ), .C0(\sample_position.n2221[3] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .CIN0(\sample_position.n8810 ), .CIN1(\sample_position.n12047 ), 
    .F0(\sample_position.n87_adj_1160[3] ), 
    .F1(\sample_position.n87_adj_1160[4] ), .COUT1(\sample_position.n8812 ), 
    .COUT0(\sample_position.n12047 ));
  sample_position_SLICE_25 \sample_position.SLICE_25 ( 
    .D1(\sample_position.n12044 ), .C1(\sample_position.n2221[2] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .D0(\sample_position.n8808 ), .C0(\sample_position.n2221[1] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .CIN0(\sample_position.n8808 ), .CIN1(\sample_position.n12044 ), 
    .F0(\sample_position.n87_adj_1160[1] ), 
    .F1(\sample_position.n87_adj_1160[2] ), .COUT1(\sample_position.n8810 ), 
    .COUT0(\sample_position.n12044 ));
  sample_position_SLICE_26 \sample_position.SLICE_26 ( 
    .D1(\sample_position.n12041 ), .C1(\sample_position.n2221[0] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[0] ), 
    .CIN1(\sample_position.n12041 ), .F1(\sample_position.n87_adj_1160[0] ), 
    .COUT1(\sample_position.n8808 ), .COUT0(\sample_position.n12041 ));
  sample_position_SLICE_27 \sample_position.SLICE_27 ( 
    .D1(\sample_position.n12026 ), .D0(\sample_position.n8805 ), 
    .C0(\sample_position.n1[15] ), .CIN0(\sample_position.n8805 ), 
    .CIN1(\sample_position.n12026 ), .F0(\sample_position.n87_adj_1161[15] ), 
    .COUT0(\sample_position.n12026 ));
  sample_position_SLICE_28 \sample_position.SLICE_28 ( 
    .D1(\sample_position.n12023 ), .C1(\sample_position.n1[14] ), 
    .D0(\sample_position.n8803 ), .C0(\sample_position.n1[13] ), 
    .CIN0(\sample_position.n8803 ), .CIN1(\sample_position.n12023 ), 
    .F0(\sample_position.n87_adj_1161[13] ), 
    .F1(\sample_position.n87_adj_1161[14] ), .COUT1(\sample_position.n8805 ), 
    .COUT0(\sample_position.n12023 ));
  sample_position_SLICE_29 \sample_position.SLICE_29 ( 
    .D1(\sample_position.n12020 ), .C1(\sample_position.n1[12] ), 
    .D0(\sample_position.n8801 ), .C0(\sample_position.n1[11] ), 
    .CIN0(\sample_position.n8801 ), .CIN1(\sample_position.n12020 ), 
    .F0(\sample_position.n87_adj_1161[11] ), 
    .F1(\sample_position.n87_adj_1161[12] ), .COUT1(\sample_position.n8803 ), 
    .COUT0(\sample_position.n12020 ));
  sample_position_SLICE_30 \sample_position.SLICE_30 ( 
    .D1(\sample_position.n12017 ), .C1(\sample_position.n1[10] ), 
    .D0(\sample_position.n8799 ), .C0(\sample_position.n1[9] ), 
    .CIN0(\sample_position.n8799 ), .CIN1(\sample_position.n12017 ), 
    .F0(\sample_position.n87_adj_1161[9] ), 
    .F1(\sample_position.n87_adj_1161[10] ), .COUT1(\sample_position.n8801 ), 
    .COUT0(\sample_position.n12017 ));
  sample_position_SLICE_31 \sample_position.SLICE_31 ( 
    .D1(\sample_position.n12014 ), .C1(\sample_position.n1[8] ), 
    .D0(\sample_position.n8797 ), .C0(\sample_position.n1[7] ), 
    .CIN0(\sample_position.n8797 ), .CIN1(\sample_position.n12014 ), 
    .F0(\sample_position.n87_adj_1161[7] ), 
    .F1(\sample_position.n87_adj_1161[8] ), .COUT1(\sample_position.n8799 ), 
    .COUT0(\sample_position.n12014 ));
  sample_position_SLICE_32 \sample_position.SLICE_32 ( 
    .D1(\sample_position.n11972 ), .C1(\sample_position.n1[6] ), 
    .D0(\sample_position.n8795 ), .C0(\sample_position.n1[5] ), 
    .CIN0(\sample_position.n8795 ), .CIN1(\sample_position.n11972 ), 
    .F0(\sample_position.n87_adj_1161[5] ), 
    .F1(\sample_position.n87_adj_1161[6] ), .COUT1(\sample_position.n8797 ), 
    .COUT0(\sample_position.n11972 ));
  sample_position_SLICE_33 \sample_position.SLICE_33 ( 
    .D1(\sample_position.n11969 ), .C1(\sample_position.n1[4] ), 
    .D0(\sample_position.n8793 ), .C0(\sample_position.n1[3] ), 
    .CIN0(\sample_position.n8793 ), .CIN1(\sample_position.n11969 ), 
    .F0(\sample_position.n87_adj_1161[3] ), 
    .F1(\sample_position.n87_adj_1161[4] ), .COUT1(\sample_position.n8795 ), 
    .COUT0(\sample_position.n11969 ));
  sample_position_SLICE_34 \sample_position.SLICE_34 ( 
    .D1(\sample_position.n11966 ), .C1(\sample_position.n1[2] ), 
    .D0(\sample_position.n8791 ), .C0(\sample_position.n1[1] ), 
    .CIN0(\sample_position.n8791 ), .CIN1(\sample_position.n11966 ), 
    .F0(\sample_position.n87_adj_1161[1] ), 
    .F1(\sample_position.n87_adj_1161[2] ), .COUT1(\sample_position.n8793 ), 
    .COUT0(\sample_position.n11966 ));
  sample_position_SLICE_35 \sample_position.SLICE_35 ( 
    .D1(\sample_position.n11963 ), .C1(\sample_position.n1[0] ), .B1(VCC_net), 
    .CIN1(\sample_position.n11963 ), .F1(\sample_position.n87_adj_1161[0] ), 
    .COUT1(\sample_position.n8791 ), .COUT0(\sample_position.n11963 ));
  sample_output_SLICE_36 \sample_output.SLICE_36 ( 
    .DI1(\sample_output.n3950[2] ), .DI0(\sample_output.n3950[1] ), 
    .D1(\sample_output.n12077 ), .C1(VCC_net), .B1(\r_Adder_Total[1][10] ), 
    .D0(\sample_output.n8671 ), .B0(\r_Adder_Total[1][9] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_output.n8671 ), 
    .CIN1(\sample_output.n12077 ), .Q0(\sample_output.r_Sample_R[9] ), 
    .Q1(\sample_output.r_Sample_R[10] ), .F0(\sample_output.n3950[1] ), 
    .F1(\sample_output.n3950[2] ), .COUT1(\sample_output.n8673 ), 
    .COUT0(\sample_output.n12077 ));
  sample_output_SLICE_37 \sample_output.SLICE_37 ( 
    .DI0(\sample_output.n3974[9] ), .D1(\sample_output.n12107 ), 
    .D0(\sample_output.n8859 ), .C0(VCC_net), .B0(\r_Adder_Total[0][17] ), 
    .CE(n2981), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n8859 ), .CIN1(\sample_output.n12107 ), 
    .Q0(\sample_output.r_Sample_L[17] ), .F0(\sample_output.n3974[9] ), 
    .COUT0(\sample_output.n12107 ));
  sample_output_SLICE_38 \sample_output.SLICE_38 ( 
    .DI1(\sample_output.n3974[8] ), .DI0(\sample_output.n3974[7] ), 
    .D1(\sample_output.n12104 ), .B1(\r_Adder_Total[0][16] ), 
    .D0(\sample_output.n8857 ), .B0(\r_Adder_Total[0][15] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_output.n8857 ), 
    .CIN1(\sample_output.n12104 ), .Q0(\sample_output.r_Sample_L[15] ), 
    .Q1(\sample_output.r_Sample_L[16] ), .F0(\sample_output.n3974[7] ), 
    .F1(\sample_output.n3974[8] ), .COUT1(\sample_output.n8859 ), 
    .COUT0(\sample_output.n12104 ));
  sample_output_SLICE_39 \sample_output.SLICE_39 ( 
    .DI1(\sample_output.n3974[6] ), .DI0(\sample_output.n3974[5] ), 
    .D1(\sample_output.n12101 ), .B1(\r_Adder_Total[0][14] ), 
    .D0(\sample_output.n8855 ), .B0(\r_Adder_Total[0][13] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_output.n8855 ), 
    .CIN1(\sample_output.n12101 ), .Q0(\sample_output.r_Sample_L[13] ), 
    .Q1(\sample_output.r_Sample_L[14] ), .F0(\sample_output.n3974[5] ), 
    .F1(\sample_output.n3974[6] ), .COUT1(\sample_output.n8857 ), 
    .COUT0(\sample_output.n12101 ));
  sample_output_SLICE_40 \sample_output.SLICE_40 ( 
    .DI1(\sample_output.n3974[4] ), .DI0(\sample_output.n3974[3] ), 
    .D1(\sample_output.n12098 ), .B1(\r_Adder_Total[0][12] ), 
    .D0(\sample_output.n8853 ), .B0(\r_Adder_Total[0][11] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_output.n8853 ), 
    .CIN1(\sample_output.n12098 ), .Q0(\sample_output.r_Sample_L[11] ), 
    .Q1(\sample_output.r_Sample_L[12] ), .F0(\sample_output.n3974[3] ), 
    .F1(\sample_output.n3974[4] ), .COUT1(\sample_output.n8855 ), 
    .COUT0(\sample_output.n12098 ));
  sample_output_SLICE_41 \sample_output.SLICE_41 ( 
    .DI1(\sample_output.n3974[2] ), .DI0(\sample_output.n3974[1] ), 
    .D1(\sample_output.n12095 ), .C1(VCC_net), .B1(\r_Adder_Total[0][10] ), 
    .D0(\sample_output.n8851 ), .B0(\r_Adder_Total[0][9] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_output.n8851 ), 
    .CIN1(\sample_output.n12095 ), .Q0(\sample_output.r_Sample_L[9] ), 
    .Q1(\sample_output.r_Sample_L[10] ), .F0(\sample_output.n3974[1] ), 
    .F1(\sample_output.n3974[2] ), .COUT1(\sample_output.n8853 ), 
    .COUT0(\sample_output.n12095 ));
  sample_output_SLICE_42 \sample_output.SLICE_42 ( 
    .DI1(\sample_output.n3974[0] ), .D1(\sample_output.n12092 ), .C1(VCC_net), 
    .B1(\r_Adder_Total[0][8] ), .CE(n2981), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN1(\sample_output.n12092 ), 
    .Q1(\sample_output.r_Sample_L[8] ), .F1(\sample_output.n3974[0] ), 
    .COUT1(\sample_output.n8851 ), .COUT0(\sample_output.n12092 ));
  sample_output_SLICE_43 \sample_output.SLICE_43 ( 
    .DI1(\sample_output.n3950[0] ), .D1(\sample_output.n12074 ), .C1(VCC_net), 
    .B1(\r_Adder_Total[1][8] ), .CE(n2981), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .CIN1(\sample_output.n12074 ), 
    .Q1(\sample_output.r_Sample_R[8] ), .F1(\sample_output.n3950[0] ), 
    .COUT1(\sample_output.n8671 ), .COUT0(\sample_output.n12074 ));
  sample_output_SLICE_44 \sample_output.SLICE_44 ( 
    .DI1(\sample_output.n3950[4] ), .DI0(\sample_output.n3950[3] ), 
    .D1(\sample_output.n12080 ), .B1(\r_Adder_Total[1][12] ), 
    .D0(\sample_output.n8673 ), .B0(\r_Adder_Total[1][11] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_output.n8673 ), 
    .CIN1(\sample_output.n12080 ), .Q0(\sample_output.r_Sample_R[11] ), 
    .Q1(\sample_output.r_Sample_R[12] ), .F0(\sample_output.n3950[3] ), 
    .F1(\sample_output.n3950[4] ), .COUT1(\sample_output.n8675 ), 
    .COUT0(\sample_output.n12080 ));
  sample_output_SLICE_45 \sample_output.SLICE_45 ( 
    .DI0(\sample_output.n3950[9] ), .D1(\sample_output.n12089 ), 
    .D0(\sample_output.n8679 ), .C0(VCC_net), .B0(\r_Adder_Total[1][17] ), 
    .CE(n2981), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .CIN0(\sample_output.n8679 ), .CIN1(\sample_output.n12089 ), 
    .Q0(\sample_output.r_Sample_R[17] ), .F0(\sample_output.n3950[9] ), 
    .COUT0(\sample_output.n12089 ));
  sample_output_SLICE_46 \sample_output.SLICE_46 ( 
    .DI1(\sample_output.n3950[8] ), .DI0(\sample_output.n3950[7] ), 
    .D1(\sample_output.n12086 ), .B1(\r_Adder_Total[1][16] ), 
    .D0(\sample_output.n8677 ), .B0(\r_Adder_Total[1][15] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_output.n8677 ), 
    .CIN1(\sample_output.n12086 ), .Q0(\sample_output.r_Sample_R[15] ), 
    .Q1(\sample_output.r_Sample_R[16] ), .F0(\sample_output.n3950[7] ), 
    .F1(\sample_output.n3950[8] ), .COUT1(\sample_output.n8679 ), 
    .COUT0(\sample_output.n12086 ));
  sample_output_SLICE_47 \sample_output.SLICE_47 ( 
    .DI1(\sample_output.n3950[6] ), .DI0(\sample_output.n3950[5] ), 
    .D1(\sample_output.n12083 ), .B1(\r_Adder_Total[1][14] ), 
    .D0(\sample_output.n8675 ), .B0(\r_Adder_Total[1][13] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .CIN0(\sample_output.n8675 ), 
    .CIN1(\sample_output.n12083 ), .Q0(\sample_output.r_Sample_R[13] ), 
    .Q1(\sample_output.r_Sample_R[14] ), .F0(\sample_output.n3950[5] ), 
    .F1(\sample_output.n3950[6] ), .COUT1(\sample_output.n8677 ), 
    .COUT0(\sample_output.n12083 ));
  SLICE_48 SLICE_48( .DI0(n70), .D1(n12131), .D0(n8696), 
    .C0(\Sample_Timer[15] ), .LSR(n6597), .CLK(Main_Clock), .CIN0(n8696), 
    .CIN1(n12131), .Q0(\Sample_Timer[15] ), .F0(n70), .COUT0(n12131));
  SLICE_49 SLICE_49( .DI1(n71), .DI0(n72), .D1(n12128), 
    .C1(\Sample_Timer[14] ), .D0(n8694), .C0(\Sample_Timer[13] ), .LSR(n6597), 
    .CLK(Main_Clock), .CIN0(n8694), .CIN1(n12128), .Q0(\Sample_Timer[13] ), 
    .Q1(\Sample_Timer[14] ), .F0(n72), .F1(n71), .COUT1(n8696), .COUT0(n12128));
  SLICE_50 SLICE_50( .DI1(n73), .DI0(n74), .D1(n12125), 
    .C1(\Sample_Timer[12] ), .D0(n8692), .C0(\Sample_Timer[11] ), .LSR(n6597), 
    .CLK(Main_Clock), .CIN0(n8692), .CIN1(n12125), .Q0(\Sample_Timer[11] ), 
    .Q1(\Sample_Timer[12] ), .F0(n74), .F1(n73), .COUT1(n8694), .COUT0(n12125));
  SLICE_51 SLICE_51( .DI1(n75), .DI0(n76), .D1(n12122), 
    .C1(\Sample_Timer[10] ), .D0(n8690), .C0(\Sample_Timer[9] ), .LSR(n6597), 
    .CLK(Main_Clock), .CIN0(n8690), .CIN1(n12122), .Q0(\Sample_Timer[9] ), 
    .Q1(\Sample_Timer[10] ), .F0(n76), .F1(n75), .COUT1(n8692), .COUT0(n12122));
  SLICE_52 SLICE_52( .DI1(n77), .DI0(n78), .D1(n12119), .C1(\Sample_Timer[8] ), 
    .D0(n8688), .C0(\Sample_Timer[7] ), .LSR(n6597), .CLK(Main_Clock), 
    .CIN0(n8688), .CIN1(n12119), .Q0(\Sample_Timer[7] ), 
    .Q1(\Sample_Timer[8] ), .F0(n78), .F1(n77), .COUT1(n8690), .COUT0(n12119));
  SLICE_53 SLICE_53( .DI1(n79), .DI0(n80), .D1(n12116), .C1(\Sample_Timer[6] ), 
    .D0(n8686), .C0(\Sample_Timer[5] ), .LSR(n6597), .CLK(Main_Clock), 
    .CIN0(n8686), .CIN1(n12116), .Q0(\Sample_Timer[5] ), 
    .Q1(\Sample_Timer[6] ), .F0(n80), .F1(n79), .COUT1(n8688), .COUT0(n12116));
  SLICE_54 SLICE_54( .D1(n11975), .B1(\Harmonic[2] ), .D0(n8662), 
    .B0(\Harmonic[1] ), .CIN0(n8662), .CIN1(n11975), .F0(n45), .F1(n44), 
    .COUT1(n8664), .COUT0(n11975));
  SLICE_55 SLICE_55( .D1(n11978), .B1(\Harmonic[4] ), .D0(n8664), 
    .B0(\Harmonic[3] ), .CIN0(n8664), .CIN1(n11978), .F0(n43), .F1(n42), 
    .COUT1(n8666), .COUT0(n11978));
  SLICE_56 SLICE_56( .D1(n11888), .C1(VCC_net), .B1(\Harmonic[0] ), 
    .CIN1(n11888), .F1(n46), .COUT1(n8662), .COUT0(n11888));
  SLICE_57 SLICE_57( .D1(n11984), .D0(n8668), .B0(\Harmonic[7] ), .CIN0(n8668), 
    .CIN1(n11984), .F0(n39), .COUT0(n11984));
  SLICE_58 SLICE_58( .DI1(n81), .DI0(n82), .D1(n12113), .C1(\Sample_Timer[4] ), 
    .D0(n8684), .C0(\Sample_Timer[3] ), .LSR(n6597), .CLK(Main_Clock), 
    .CIN0(n8684), .CIN1(n12113), .Q0(\Sample_Timer[3] ), 
    .Q1(\Sample_Timer[4] ), .F0(n82), .F1(n81), .COUT1(n8686), .COUT0(n12113));
  SLICE_59 SLICE_59( .DI1(n83), .DI0(n84), .D1(n12110), .C1(\Sample_Timer[2] ), 
    .D0(n8682), .C0(\Sample_Timer[1] ), .LSR(n6597), .CLK(Main_Clock), 
    .CIN0(n8682), .CIN1(n12110), .Q0(\Sample_Timer[1] ), 
    .Q1(\Sample_Timer[2] ), .F0(n84), .F1(n83), .COUT1(n8684), .COUT0(n12110));
  SLICE_60 SLICE_60( .DI1(n85), .D1(n12011), .C1(\Sample_Timer[0] ), 
    .B1(VCC_net), .LSR(n6597), .CLK(Main_Clock), .CIN1(n12011), 
    .Q1(\Sample_Timer[0] ), .F1(n85), .COUT1(n8682), .COUT0(n12011));
  SLICE_61 SLICE_61( .D1(n11981), .B1(\Harmonic[6] ), .D0(n8666), 
    .B0(\Harmonic[5] ), .CIN0(n8666), .CIN1(n11981), .F0(n41), .F1(n40), 
    .COUT1(n8668), .COUT0(n11981));
  genadder_1__adder_SLICE_62 \genadder[1].adder.SLICE_62 ( 
    .D1(\genadder[1].adder.n11960 ), .C1(\Working_Total_adj_1217[31] ), 
    .B1(\genadder[1].adder.Adder_Total[1][18] ), 
    .D0(\genadder[1].adder.n8765 ), .C0(\Working_Total_adj_1217[31] ), 
    .B0(\Adder_Total[1][17] ), .CIN0(\genadder[1].adder.n8765 ), 
    .CIN1(\genadder[1].adder.n11960 ), .F0(\genadder[1].adder.n167[17] ), 
    .F1(\genadder[1].adder.n167[18] ), .COUT0(\genadder[1].adder.n11960 ));
  genadder_1__adder_SLICE_63 \genadder[1].adder.SLICE_63 ( 
    .D1(\genadder[1].adder.n11957 ), .C1(\Working_Total_adj_1217[31] ), 
    .B1(\Adder_Total[1][16] ), .D0(\genadder[1].adder.n8763 ), 
    .C0(\Working_Total_adj_1217[31] ), .B0(\Adder_Total[1][15] ), 
    .CIN0(\genadder[1].adder.n8763 ), .CIN1(\genadder[1].adder.n11957 ), 
    .F0(\genadder[1].adder.n167[15] ), .F1(\genadder[1].adder.n167[16] ), 
    .COUT1(\genadder[1].adder.n8765 ), .COUT0(\genadder[1].adder.n11957 ));
  genadder_1__adder_SLICE_64 \genadder[1].adder.SLICE_64 ( 
    .D1(\genadder[1].adder.n11954 ), .C1(\Working_Total_adj_1217[23] ), 
    .B1(\Adder_Total[1][14] ), .D0(\genadder[1].adder.n8761 ), 
    .C0(\Working_Total_adj_1217[22] ), .B0(\Adder_Total[1][13] ), 
    .CIN0(\genadder[1].adder.n8761 ), .CIN1(\genadder[1].adder.n11954 ), 
    .F0(\genadder[1].adder.n167[13] ), .F1(\genadder[1].adder.n167[14] ), 
    .COUT1(\genadder[1].adder.n8763 ), .COUT0(\genadder[1].adder.n11954 ));
  genadder_1__adder_SLICE_65 \genadder[1].adder.SLICE_65 ( 
    .D1(\genadder[1].adder.n11951 ), .C1(\Working_Total_adj_1217[21] ), 
    .B1(\Adder_Total[1][12] ), .D0(\genadder[1].adder.n8759 ), 
    .C0(\Working_Total_adj_1217[20] ), .B0(\Adder_Total[1][11] ), 
    .CIN0(\genadder[1].adder.n8759 ), .CIN1(\genadder[1].adder.n11951 ), 
    .F0(\genadder[1].adder.n167[11] ), .F1(\genadder[1].adder.n167[12] ), 
    .COUT1(\genadder[1].adder.n8761 ), .COUT0(\genadder[1].adder.n11951 ));
  genadder_1__adder_SLICE_66 \genadder[1].adder.SLICE_66 ( 
    .D1(\genadder[1].adder.n11948 ), .C1(\Working_Total_adj_1217[19] ), 
    .B1(\Adder_Total[1][10] ), .D0(\genadder[1].adder.n8757 ), 
    .C0(\Working_Total_adj_1217[18] ), .B0(\Adder_Total[1][9] ), 
    .CIN0(\genadder[1].adder.n8757 ), .CIN1(\genadder[1].adder.n11948 ), 
    .F0(\genadder[1].adder.n167[9] ), .F1(\genadder[1].adder.n167[10] ), 
    .COUT1(\genadder[1].adder.n8759 ), .COUT0(\genadder[1].adder.n11948 ));
  genadder_1__adder_SLICE_67 \genadder[1].adder.SLICE_67 ( 
    .D1(\genadder[1].adder.n11945 ), .C1(\Working_Total_adj_1217[17] ), 
    .B1(\Adder_Total[1][8] ), .D0(\genadder[1].adder.n8755 ), 
    .C0(\Working_Total_adj_1217[16] ), .B0(\Adder_Total[1][7] ), 
    .CIN0(\genadder[1].adder.n8755 ), .CIN1(\genadder[1].adder.n11945 ), 
    .F0(\genadder[1].adder.n167[7] ), .F1(\genadder[1].adder.n167[8] ), 
    .COUT1(\genadder[1].adder.n8757 ), .COUT0(\genadder[1].adder.n11945 ));
  genadder_1__adder_SLICE_68 \genadder[1].adder.SLICE_68 ( 
    .D1(\genadder[1].adder.n11942 ), .C1(\Working_Total_adj_1217[15] ), 
    .B1(\Adder_Total[1][6] ), .D0(\genadder[1].adder.n8753 ), 
    .C0(\Working_Total_adj_1217[14] ), .B0(\Adder_Total[1][5] ), 
    .CIN0(\genadder[1].adder.n8753 ), .CIN1(\genadder[1].adder.n11942 ), 
    .F0(\genadder[1].adder.n167[5] ), .F1(\genadder[1].adder.n167[6] ), 
    .COUT1(\genadder[1].adder.n8755 ), .COUT0(\genadder[1].adder.n11942 ));
  genadder_1__adder_SLICE_69 \genadder[1].adder.SLICE_69 ( 
    .D1(\genadder[1].adder.n11939 ), .C1(\Working_Total_adj_1217[13] ), 
    .B1(\Adder_Total[1][4] ), .D0(\genadder[1].adder.n8751 ), 
    .C0(\Working_Total_adj_1217[12] ), .B0(\Adder_Total[1][3] ), 
    .CIN0(\genadder[1].adder.n8751 ), .CIN1(\genadder[1].adder.n11939 ), 
    .F0(\genadder[1].adder.n167[3] ), .F1(\genadder[1].adder.n167[4] ), 
    .COUT1(\genadder[1].adder.n8753 ), .COUT0(\genadder[1].adder.n11939 ));
  genadder_1__adder_SLICE_70 \genadder[1].adder.SLICE_70 ( 
    .D1(\genadder[1].adder.n11936 ), .C1(\Working_Total_adj_1217[11] ), 
    .B1(\Adder_Total[1][2] ), .D0(\genadder[1].adder.n8749 ), 
    .C0(\Working_Total_adj_1217[10] ), 
    .B0(\genadder[1].adder.Adder_Total[1][1] ), 
    .CIN0(\genadder[1].adder.n8749 ), .CIN1(\genadder[1].adder.n11936 ), 
    .F0(\genadder[1].adder.n167[1] ), .F1(\genadder[1].adder.n167[2] ), 
    .COUT1(\genadder[1].adder.n8751 ), .COUT0(\genadder[1].adder.n11936 ));
  genadder_1__adder_SLICE_71 \genadder[1].adder.SLICE_71 ( 
    .D1(\genadder[1].adder.n11933 ), .C1(\Working_Total_adj_1217[9] ), 
    .B1(\genadder[1].adder.Adder_Total[1][0] ), 
    .CIN1(\genadder[1].adder.n11933 ), .F1(\genadder[1].adder.n167[0] ), 
    .COUT1(\genadder[1].adder.n8749 ), .COUT0(\genadder[1].adder.n11933 ));
  genadder_0__adder_SLICE_72 \genadder[0].adder.SLICE_72 ( 
    .D1(\genadder[0].adder.n12158 ), .C1(\Working_Total[31] ), 
    .B1(\genadder[0].adder.Adder_Total[0][18] ), 
    .D0(\genadder[0].adder.n8732 ), .C0(\Working_Total[31] ), 
    .B0(\Adder_Total[0][17] ), .CIN0(\genadder[0].adder.n8732 ), 
    .CIN1(\genadder[0].adder.n12158 ), .F0(\genadder[0].adder.n167[17] ), 
    .F1(\genadder[0].adder.n167[18] ), .COUT0(\genadder[0].adder.n12158 ));
  genadder_0__adder_SLICE_73 \genadder[0].adder.SLICE_73 ( 
    .D1(\genadder[0].adder.n12056 ), .C1(\Working_Total[31] ), 
    .B1(\Adder_Total[0][16] ), .D0(\genadder[0].adder.n8730 ), 
    .C0(\Working_Total[31] ), .B0(\Adder_Total[0][15] ), 
    .CIN0(\genadder[0].adder.n8730 ), .CIN1(\genadder[0].adder.n12056 ), 
    .F0(\genadder[0].adder.n167[15] ), .F1(\genadder[0].adder.n167[16] ), 
    .COUT1(\genadder[0].adder.n8732 ), .COUT0(\genadder[0].adder.n12056 ));
  genadder_0__adder_SLICE_74 \genadder[0].adder.SLICE_74 ( 
    .D1(\genadder[0].adder.n11912 ), .C1(\Working_Total[23] ), 
    .B1(\Adder_Total[0][14] ), .D0(\genadder[0].adder.n8728 ), 
    .C0(\Working_Total[22] ), .B0(\Adder_Total[0][13] ), 
    .CIN0(\genadder[0].adder.n8728 ), .CIN1(\genadder[0].adder.n11912 ), 
    .F0(\genadder[0].adder.n167[13] ), .F1(\genadder[0].adder.n167[14] ), 
    .COUT1(\genadder[0].adder.n8730 ), .COUT0(\genadder[0].adder.n11912 ));
  genadder_0__adder_SLICE_75 \genadder[0].adder.SLICE_75 ( 
    .D1(\genadder[0].adder.n11909 ), .C1(\Working_Total[21] ), 
    .B1(\Adder_Total[0][12] ), .D0(\genadder[0].adder.n8726 ), 
    .C0(\Working_Total[20] ), .B0(\Adder_Total[0][11] ), 
    .CIN0(\genadder[0].adder.n8726 ), .CIN1(\genadder[0].adder.n11909 ), 
    .F0(\genadder[0].adder.n167[11] ), .F1(\genadder[0].adder.n167[12] ), 
    .COUT1(\genadder[0].adder.n8728 ), .COUT0(\genadder[0].adder.n11909 ));
  genadder_0__adder_SLICE_76 \genadder[0].adder.SLICE_76 ( 
    .D1(\genadder[0].adder.n11906 ), .C1(\Working_Total[19] ), 
    .B1(\Adder_Total[0][10] ), .D0(\genadder[0].adder.n8724 ), 
    .C0(\Working_Total[18] ), .B0(\Adder_Total[0][9] ), 
    .CIN0(\genadder[0].adder.n8724 ), .CIN1(\genadder[0].adder.n11906 ), 
    .F0(\genadder[0].adder.n167[9] ), .F1(\genadder[0].adder.n167[10] ), 
    .COUT1(\genadder[0].adder.n8726 ), .COUT0(\genadder[0].adder.n11906 ));
  genadder_0__adder_SLICE_77 \genadder[0].adder.SLICE_77 ( 
    .D1(\genadder[0].adder.n11903 ), .C1(\Working_Total[17] ), 
    .B1(\Adder_Total[0][8] ), .D0(\genadder[0].adder.n8722 ), 
    .C0(\Working_Total[16] ), .B0(\Adder_Total[0][7] ), 
    .CIN0(\genadder[0].adder.n8722 ), .CIN1(\genadder[0].adder.n11903 ), 
    .F0(\genadder[0].adder.n167[7] ), .F1(\genadder[0].adder.n167[8] ), 
    .COUT1(\genadder[0].adder.n8724 ), .COUT0(\genadder[0].adder.n11903 ));
  genadder_0__adder_SLICE_78 \genadder[0].adder.SLICE_78 ( 
    .D1(\genadder[0].adder.n11900 ), .C1(\Working_Total[15] ), 
    .B1(\Adder_Total[0][6] ), .D0(\genadder[0].adder.n8720 ), 
    .C0(\Working_Total[14] ), .B0(\Adder_Total[0][5] ), 
    .CIN0(\genadder[0].adder.n8720 ), .CIN1(\genadder[0].adder.n11900 ), 
    .F0(\genadder[0].adder.n167[5] ), .F1(\genadder[0].adder.n167[6] ), 
    .COUT1(\genadder[0].adder.n8722 ), .COUT0(\genadder[0].adder.n11900 ));
  genadder_0__adder_SLICE_79 \genadder[0].adder.SLICE_79 ( 
    .D1(\genadder[0].adder.n11897 ), .C1(\Working_Total[13] ), 
    .B1(\Adder_Total[0][4] ), .D0(\genadder[0].adder.n8718 ), 
    .C0(\Working_Total[12] ), .B0(\Adder_Total[0][3] ), 
    .CIN0(\genadder[0].adder.n8718 ), .CIN1(\genadder[0].adder.n11897 ), 
    .F0(\genadder[0].adder.n167[3] ), .F1(\genadder[0].adder.n167[4] ), 
    .COUT1(\genadder[0].adder.n8720 ), .COUT0(\genadder[0].adder.n11897 ));
  genadder_0__adder_SLICE_80 \genadder[0].adder.SLICE_80 ( 
    .D1(\genadder[0].adder.n11894 ), .C1(\Working_Total[11] ), 
    .B1(\Adder_Total[0][2] ), .D0(\genadder[0].adder.n8716 ), 
    .C0(\Working_Total[10] ), .B0(\genadder[0].adder.Adder_Total[0][1] ), 
    .CIN0(\genadder[0].adder.n8716 ), .CIN1(\genadder[0].adder.n11894 ), 
    .F0(\genadder[0].adder.n167[1] ), .F1(\genadder[0].adder.n167[2] ), 
    .COUT1(\genadder[0].adder.n8718 ), .COUT0(\genadder[0].adder.n11894 ));
  genadder_0__adder_SLICE_81 \genadder[0].adder.SLICE_81 ( 
    .D1(\genadder[0].adder.n11891 ), .C1(\Working_Total[9] ), 
    .B1(\genadder[0].adder.Adder_Total[0][0] ), 
    .CIN1(\genadder[0].adder.n11891 ), .F1(\genadder[0].adder.n167[0] ), 
    .COUT1(\genadder[0].adder.n8716 ), .COUT0(\genadder[0].adder.n11891 ));
  mult_SLICE_82 \mult.SLICE_82 ( .D1(\mult.n11930 ), .D0(\mult.n8848 ), 
    .C0(\mult.n1[8] ), .B0(\Adder_Mult[8] ), .CIN0(\mult.n8848 ), 
    .CIN1(\mult.n11930 ), .F0(\mult.n57[9] ), .F1(\mult.cout ), 
    .COUT0(\mult.n11930 ));
  mult_SLICE_83 \mult.SLICE_83 ( .D1(\mult.n11927 ), .C1(\mult.n1[7] ), 
    .B1(\Adder_Mult[7] ), .D0(\mult.n8846 ), .C0(\mult.n1[6] ), 
    .B0(\Adder_Mult[6] ), .CIN0(\mult.n8846 ), .CIN1(\mult.n11927 ), 
    .F0(\mult.n57[7] ), .F1(\mult.n57[8] ), .COUT1(\mult.n8848 ), 
    .COUT0(\mult.n11927 ));
  mult_SLICE_84 \mult.SLICE_84 ( .D1(\mult.n11924 ), .C1(\mult.n1[5] ), 
    .B1(\Adder_Mult[5] ), .D0(\mult.n8844 ), .C0(\mult.n1[4] ), 
    .B0(\Adder_Mult[4] ), .CIN0(\mult.n8844 ), .CIN1(\mult.n11924 ), 
    .F0(\mult.n57[5] ), .F1(\mult.n57[6] ), .COUT1(\mult.n8846 ), 
    .COUT0(\mult.n11924 ));
  mult_SLICE_85 \mult.SLICE_85 ( .D1(\mult.n11921 ), .C1(\mult.n1[3] ), 
    .B1(\Adder_Mult[3] ), .D0(\mult.n8842 ), .C0(\mult.n1[2] ), 
    .B0(\Adder_Mult[2] ), .CIN0(\mult.n8842 ), .CIN1(\mult.n11921 ), 
    .F0(\mult.n57[3] ), .F1(\mult.n57[4] ), .COUT1(\mult.n8844 ), 
    .COUT0(\mult.n11921 ));
  mult_SLICE_86 \mult.SLICE_86 ( .D1(\mult.n11918 ), .C1(\mult.n1[1] ), 
    .B1(\Adder_Mult[1] ), .D0(VCC_net), .C0(\mult.n1[0] ), 
    .B0(\Adder_Mult[0] ), .CIN1(\mult.n11918 ), .F0(\mult.n57[1] ), 
    .F1(\mult.n57[2] ), .COUT1(\mult.n8842 ), .COUT0(\mult.n11918 ));
  mult_SLICE_87 \mult.SLICE_87 ( .D1(\mult.n12038 ), .D0(\mult.n8788 ), 
    .B0(\mult.Comb_Counter[7] ), .CIN0(\mult.n8788 ), .CIN1(\mult.n12038 ), 
    .F0(\mult.n47[7] ), .COUT0(\mult.n12038 ));
  mult_SLICE_88 \mult.SLICE_88 ( .D1(\mult.n12035 ), 
    .B1(\mult.Comb_Counter[6] ), .D0(\mult.n8786 ), 
    .B0(\mult.Comb_Counter[5] ), .CIN0(\mult.n8786 ), .CIN1(\mult.n12035 ), 
    .F0(\mult.n47[5] ), .F1(\mult.n47[6] ), .COUT1(\mult.n8788 ), 
    .COUT0(\mult.n12035 ));
  mult_SLICE_89 \mult.SLICE_89 ( .D1(\mult.n12032 ), 
    .B1(\mult.Comb_Counter[4] ), .D0(\mult.n8784 ), 
    .B0(\mult.Comb_Counter[3] ), .CIN0(\mult.n8784 ), .CIN1(\mult.n12032 ), 
    .F0(\mult.n47[3] ), .F1(\mult.n47[4] ), .COUT1(\mult.n8786 ), 
    .COUT0(\mult.n12032 ));
  mult_SLICE_90 \mult.SLICE_90 ( .D1(\mult.n12029 ), 
    .B1(\mult.Comb_Counter[2] ), .D0(\mult.n8782 ), 
    .B0(\mult.Comb_Counter[1] ), .CIN0(\mult.n8782 ), .CIN1(\mult.n12029 ), 
    .F0(\mult.n47[1] ), .F1(\mult.n47[2] ), .COUT1(\mult.n8784 ), 
    .COUT0(\mult.n12029 ));
  mult_SLICE_91 \mult.SLICE_91 ( .D1(\mult.n11915 ), .C1(VCC_net), 
    .B1(\mult.Comb_Counter[0] ), .CIN1(\mult.n11915 ), .F1(\mult.n47[0] ), 
    .COUT1(\mult.n8782 ), .COUT0(\mult.n11915 ));
  SLICE_92 SLICE_92( .DI0(test_N_190), .A0(test_c), .CLK(ADC_Data_Received), 
    .Q0(test_c), .F0(test_N_190));
  SLICE_93 SLICE_93( .DI1(n10_adj_1214), .DI0(n10_adj_1215), .B1(\SM_Top[1] ), 
    .A1(n45), .C0(n46), .A0(\SM_Top[1] ), .CE(n6833), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\Harmonic[0] ), .Q1(\Harmonic[1] ), 
    .F0(n10_adj_1215), .F1(n10_adj_1214));
  SLICE_94 SLICE_94( .DI1(\ADC_Data[1][1].sig_017.FeedThruLUT ), 
    .DI0(\ADC_Data[1][0].sig_000.FeedThruLUT ), .B1(\ADC_Data[1][1] ), 
    .A0(\ADC_Data[1][0] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[0] ), 
    .Q1(\Harmonic_Scale[1] ), .F0(\ADC_Data[1][0].sig_000.FeedThruLUT ), 
    .F1(\ADC_Data[1][1].sig_017.FeedThruLUT ));
  SLICE_95 SLICE_95( .DI1(\ADC_Data[0][1].sig_002.FeedThruLUT ), 
    .DI0(\ADC_Data[0][0].sig_001.FeedThruLUT ), .B1(\ADC_Data[0][1] ), 
    .A0(\ADC_Data[0][0] ), .CLK(ADC_Data_Received), .Q0(\Frequency[0] ), 
    .Q1(\Frequency[1] ), .F0(\ADC_Data[0][0].sig_001.FeedThruLUT ), 
    .F1(\ADC_Data[0][1].sig_002.FeedThruLUT ));
  SLICE_97 SLICE_97( .DI1(\ADC_Data[0][3].sig_004.FeedThruLUT ), 
    .DI0(\ADC_Data[0][2].sig_003.FeedThruLUT ), .D1(\ADC_Data[0][3] ), 
    .C0(\ADC_Data[0][2] ), .CLK(ADC_Data_Received), .Q0(\Frequency[2] ), 
    .Q1(\Frequency[3] ), .F0(\ADC_Data[0][2].sig_003.FeedThruLUT ), 
    .F1(\ADC_Data[0][3].sig_004.FeedThruLUT ));
  SLICE_99 SLICE_99( .DI1(\ADC_Data[0][5].sig_006.FeedThruLUT ), 
    .DI0(\ADC_Data[0][4].sig_005.FeedThruLUT ), .A1(\ADC_Data[0][5] ), 
    .A0(\ADC_Data[0][4] ), .CLK(ADC_Data_Received), .Q0(\Frequency[4] ), 
    .Q1(\Frequency[5] ), .F0(\ADC_Data[0][4].sig_005.FeedThruLUT ), 
    .F1(\ADC_Data[0][5].sig_006.FeedThruLUT ));
  SLICE_101 SLICE_101( .DI1(\ADC_Data[0][7].sig_008.FeedThruLUT ), 
    .DI0(\ADC_Data[0][6].sig_007.FeedThruLUT ), .A1(\ADC_Data[0][7] ), 
    .D0(\ADC_Data[0][6] ), .CLK(ADC_Data_Received), .Q0(\Frequency[6] ), 
    .Q1(\Frequency[7] ), .F0(\ADC_Data[0][6].sig_007.FeedThruLUT ), 
    .F1(\ADC_Data[0][7].sig_008.FeedThruLUT ));
  SLICE_103 SLICE_103( .DI1(\ADC_Data[0][9].sig_010.FeedThruLUT ), 
    .DI0(\ADC_Data[0][8].sig_009.FeedThruLUT ), .C1(\ADC_Data[0][9] ), 
    .B0(\ADC_Data[0][8] ), .CLK(ADC_Data_Received), .Q0(\Frequency[8] ), 
    .Q1(\Frequency[9] ), .F0(\ADC_Data[0][8].sig_009.FeedThruLUT ), 
    .F1(\ADC_Data[0][9].sig_010.FeedThruLUT ));
  SLICE_105 SLICE_105( .DI1(\ADC_Data[0][11].sig_012.FeedThruLUT ), 
    .DI0(\ADC_Data[0][10].sig_011.FeedThruLUT ), .D1(\ADC_Data[0][11] ), 
    .A0(\ADC_Data[0][10] ), .CLK(ADC_Data_Received), .Q0(\Frequency[10] ), 
    .Q1(\Frequency[11] ), .F0(\ADC_Data[0][10].sig_011.FeedThruLUT ), 
    .F1(\ADC_Data[0][11].sig_012.FeedThruLUT ));
  SLICE_107 SLICE_107( .DI1(\ADC_Data[0][13].sig_014.FeedThruLUT ), 
    .DI0(\ADC_Data[0][12].sig_013.FeedThruLUT ), .A1(\ADC_Data[0][13] ), 
    .A0(\ADC_Data[0][12] ), .CLK(ADC_Data_Received), .Q0(\Frequency[12] ), 
    .Q1(\Frequency[13] ), .F0(\ADC_Data[0][12].sig_013.FeedThruLUT ), 
    .F1(\ADC_Data[0][13].sig_014.FeedThruLUT ));
  SLICE_109 SLICE_109( .DI1(\ADC_Data[0][15].sig_016.FeedThruLUT ), 
    .DI0(\ADC_Data[0][14].sig_015.FeedThruLUT ), .B1(\ADC_Data[0][15] ), 
    .D0(\ADC_Data[0][14] ), .CLK(ADC_Data_Received), .Q0(\Frequency[14] ), 
    .Q1(\Frequency[15] ), .F0(\ADC_Data[0][14].sig_015.FeedThruLUT ), 
    .F1(\ADC_Data[0][15].sig_016.FeedThruLUT ));
  SLICE_112 SLICE_112( .DI1(\ADC_Data[1][3].sig_019.FeedThruLUT ), 
    .DI0(\ADC_Data[1][2].sig_018.FeedThruLUT ), .B1(\ADC_Data[1][3] ), 
    .D0(\ADC_Data[1][2] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[2] ), 
    .Q1(\Harmonic_Scale[3] ), .F0(\ADC_Data[1][2].sig_018.FeedThruLUT ), 
    .F1(\ADC_Data[1][3].sig_019.FeedThruLUT ));
  SLICE_114 SLICE_114( .DI1(\ADC_Data[1][5].sig_021.FeedThruLUT ), 
    .DI0(\ADC_Data[1][4].sig_020.FeedThruLUT ), .C1(\ADC_Data[1][5] ), 
    .D0(\ADC_Data[1][4] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[4] ), 
    .Q1(\Harmonic_Scale[5] ), .F0(\ADC_Data[1][4].sig_020.FeedThruLUT ), 
    .F1(\ADC_Data[1][5].sig_021.FeedThruLUT ));
  SLICE_116 SLICE_116( .DI1(\ADC_Data[1][7].sig_023.FeedThruLUT ), 
    .DI0(\ADC_Data[1][6].sig_022.FeedThruLUT ), .C1(\ADC_Data[1][7] ), 
    .C0(\ADC_Data[1][6] ), .CLK(ADC_Data_Received), .Q0(\Harmonic_Scale[6] ), 
    .Q1(\Harmonic_Scale[7] ), .F0(\ADC_Data[1][6].sig_022.FeedThruLUT ), 
    .F1(\ADC_Data[1][7].sig_023.FeedThruLUT ));
  SLICE_119 SLICE_119( .DI1(\ADC_Data[2][4].sig_026.FeedThruLUT ), 
    .DI0(\ADC_Data[2][5].sig_025.FeedThruLUT ), .A1(\ADC_Data[2][4] ), 
    .A0(\ADC_Data[2][5] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[5] ), 
    .Q1(\Scale_Initial[4] ), .F0(\ADC_Data[2][5].sig_025.FeedThruLUT ), 
    .F1(\ADC_Data[2][4].sig_026.FeedThruLUT ));
  SLICE_121 SLICE_121( .DI1(\ADC_Data[2][2].sig_028.FeedThruLUT ), 
    .DI0(\ADC_Data[2][3].sig_027.FeedThruLUT ), .B1(\ADC_Data[2][2] ), 
    .C0(\ADC_Data[2][3] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[3] ), 
    .Q1(\Scale_Initial[2] ), .F0(\ADC_Data[2][3].sig_027.FeedThruLUT ), 
    .F1(\ADC_Data[2][2].sig_028.FeedThruLUT ));
  SLICE_123 SLICE_123( .DI1(\ADC_Data[2][0].sig_106.FeedThruLUT ), 
    .DI0(\ADC_Data[2][1].sig_029.FeedThruLUT ), .B1(\ADC_Data[2][0] ), 
    .B0(\ADC_Data[2][1] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[1] ), 
    .Q1(\Scale_Initial[0] ), .F0(\ADC_Data[2][1].sig_029.FeedThruLUT ), 
    .F1(\ADC_Data[2][0].sig_106.FeedThruLUT ));
  sample_position_SLICE_124 \sample_position.SLICE_124 ( 
    .DI1(\sample_position.Sample_Position[6].sig_041.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[5].sig_030.FeedThruLUT ), 
    .D1(\sample_position.Sample_Position[6] ), 
    .B0(\sample_position.Sample_Position[5] ), .CE(n6824), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[0] ), 
    .Q1(\sample_position.LUT_Pos[1] ), 
    .F0(\sample_position.Sample_Position[5].sig_030.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[6].sig_041.FeedThruLUT ));
  sample_position_SLICE_125 \sample_position.SLICE_125 ( 
    .DI1(\sample_position.SM_Sample_Position_2__N_311[1] ), 
    .DI0(\sample_position.SM_Sample_Position_2__N_311[0] ), 
    .D1(\SM_Sample_Position[1] ), .C1(\SM_Sample_Position[2] ), 
    .B1(\SM_Sample_Position[0] ), .D0(\SM_Sample_Position[2] ), 
    .C0(\SM_Sample_Position[0] ), .B0(\sample_position.n10636 ), 
    .A0(Next_Sample), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(\SM_Sample_Position[0] ), .Q1(\SM_Sample_Position[1] ), 
    .F0(\sample_position.SM_Sample_Position_2__N_311[0] ), 
    .F1(\sample_position.SM_Sample_Position_2__N_311[1] ));
  sample_position_SLICE_128 \sample_position.SLICE_128 ( 
    .DI1(\sample_position.n105[0] ), .DI0(\sample_position.n105[1] ), 
    .C1(\Harmonic[0] ), .B1(\sample_position.n87_adj_1161[0] ), 
    .A1(\sample_position.Accumulated_Freq_Offset[0] ), .D0(\Harmonic[0] ), 
    .B0(\sample_position.n87_adj_1161[1] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .CE(\sample_position.n6110 ), .LSR(\sample_position.n6587 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[1] ), 
    .Q1(\sample_position.Accumulated_Offset[0] ), 
    .F0(\sample_position.n105[1] ), .F1(\sample_position.n105[0] ));
  sample_position_SLICE_129 \sample_position.SLICE_129 ( 
    .DI1(\sample_position.n105[3] ), .DI0(\sample_position.n105[2] ), 
    .D1(\sample_position.Accumulated_Freq_Offset[3] ), 
    .C1(\sample_position.n87_adj_1161[3] ), .A1(\Harmonic[0] ), 
    .D0(\Harmonic[0] ), .C0(\sample_position.Accumulated_Freq_Offset[2] ), 
    .A0(\sample_position.n87_adj_1161[2] ), .CE(\sample_position.n6110 ), 
    .LSR(\sample_position.n6587 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Offset[2] ), 
    .Q1(\sample_position.Accumulated_Offset[3] ), 
    .F0(\sample_position.n105[2] ), .F1(\sample_position.n105[3] ));
  sample_position_SLICE_131 \sample_position.SLICE_131 ( 
    .DI1(\sample_position.n105[5] ), .DI0(\sample_position.n105[4] ), 
    .C1(\sample_position.Accumulated_Freq_Offset[5] ), 
    .B1(\sample_position.n87_adj_1161[5] ), .A1(\Harmonic[0] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[4] ), 
    .B0(\sample_position.n87_adj_1161[4] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6110 ), .LSR(\sample_position.n6587 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[4] ), 
    .Q1(\sample_position.Accumulated_Offset[5] ), 
    .F0(\sample_position.n105[4] ), .F1(\sample_position.n105[5] ));
  sample_position_SLICE_133 \sample_position.SLICE_133 ( 
    .DI1(\sample_position.n105[7] ), .DI0(\sample_position.n105[6] ), 
    .D1(\sample_position.n87_adj_1161[7] ), .C1(\Harmonic[0] ), 
    .A1(\sample_position.Accumulated_Freq_Offset[7] ), .D0(\Harmonic[0] ), 
    .B0(\sample_position.n87_adj_1161[6] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[6] ), 
    .CE(\sample_position.n6110 ), .LSR(\sample_position.n6587 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[6] ), 
    .Q1(\sample_position.Accumulated_Offset[7] ), 
    .F0(\sample_position.n105[6] ), .F1(\sample_position.n105[7] ));
  sample_position_SLICE_134 \sample_position.SLICE_134 ( 
    .DI0(\sample_position.Sample_Position[15].sig_032.FeedThruLUT ), 
    .B0(\sample_position.Sample_Position[15] ), .CE(n6824), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[10] ), 
    .F0(\sample_position.Sample_Position[15].sig_032.FeedThruLUT ));
  sample_position_SLICE_135 \sample_position.SLICE_135 ( 
    .DI1(\sample_position.Sample_Position[13].sig_034.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[14].sig_033.FeedThruLUT ), 
    .D1(\sample_position.Sample_Position[13] ), 
    .A0(\sample_position.Sample_Position[14] ), .CE(n6824), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[9] ), 
    .Q1(\sample_position.LUT_Pos[8] ), 
    .F0(\sample_position.Sample_Position[14].sig_033.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[13].sig_034.FeedThruLUT ));
  sample_position_SLICE_137 \sample_position.SLICE_137 ( 
    .DI1(\sample_position.Sample_Position[11].sig_036.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[12].sig_035.FeedThruLUT ), 
    .C1(\sample_position.Sample_Position[11] ), 
    .D0(\sample_position.Sample_Position[12] ), .CE(n6824), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[7] ), 
    .Q1(\sample_position.LUT_Pos[6] ), 
    .F0(\sample_position.Sample_Position[12].sig_035.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[11].sig_036.FeedThruLUT ));
  sample_position_SLICE_139 \sample_position.SLICE_139 ( 
    .DI1(\sample_position.Sample_Position[9].sig_038.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[10].sig_037.FeedThruLUT ), 
    .C1(\sample_position.Sample_Position[9] ), 
    .C0(\sample_position.Sample_Position[10] ), .CE(n6824), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[5] ), 
    .Q1(\sample_position.LUT_Pos[4] ), 
    .F0(\sample_position.Sample_Position[10].sig_037.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[9].sig_038.FeedThruLUT ));
  sample_position_SLICE_141 \sample_position.SLICE_141 ( 
    .DI1(\sample_position.Sample_Position[7].sig_040.FeedThruLUT ), 
    .DI0(\sample_position.Sample_Position[8].sig_039.FeedThruLUT ), 
    .B1(\sample_position.Sample_Position[7] ), 
    .A0(\sample_position.Sample_Position[8] ), .CE(n6824), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\sample_position.LUT_Pos[3] ), 
    .Q1(\sample_position.LUT_Pos[2] ), 
    .F0(\sample_position.Sample_Position[8].sig_039.FeedThruLUT ), 
    .F1(\sample_position.Sample_Position[7].sig_040.FeedThruLUT ));
  sample_position_SLICE_145 \sample_position.SLICE_145 ( 
    .DI1(\sample_position.n105[9] ), .DI0(\sample_position.n105[8] ), 
    .C1(\sample_position.n87_adj_1161[9] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[9] ), .A1(\Harmonic[0] ), 
    .D0(\sample_position.n87_adj_1161[8] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[8] ), .A0(\Harmonic[0] ), 
    .CE(\sample_position.n6110 ), .LSR(\sample_position.n6587 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[8] ), 
    .Q1(\sample_position.Accumulated_Offset[9] ), 
    .F0(\sample_position.n105[8] ), .F1(\sample_position.n105[9] ));
  sample_position_SLICE_147 \sample_position.SLICE_147 ( 
    .DI1(\sample_position.n105[11] ), .DI0(\sample_position.n105[10] ), 
    .D1(\sample_position.Accumulated_Freq_Offset[11] ), .C1(\Harmonic[0] ), 
    .B1(\sample_position.n87_adj_1161[11] ), .D0(\Harmonic[0] ), 
    .C0(\sample_position.n87_adj_1161[10] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[10] ), 
    .CE(\sample_position.n6110 ), .LSR(\sample_position.n6587 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[10] ), 
    .Q1(\sample_position.Accumulated_Offset[11] ), 
    .F0(\sample_position.n105[10] ), .F1(\sample_position.n105[11] ));
  sample_position_SLICE_149 \sample_position.SLICE_149 ( 
    .DI1(\sample_position.n105[13] ), .DI0(\sample_position.n105[12] ), 
    .C1(\sample_position.n87_adj_1161[13] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[13] ), .A1(\Harmonic[0] ), 
    .D0(\Harmonic[0] ), .B0(\sample_position.n87_adj_1161[12] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[12] ), 
    .CE(\sample_position.n6110 ), .LSR(\sample_position.n6587 ), 
    .CLK(Main_Clock), .Q0(\sample_position.Accumulated_Offset[12] ), 
    .Q1(\sample_position.Accumulated_Offset[13] ), 
    .F0(\sample_position.n105[12] ), .F1(\sample_position.n105[13] ));
  sample_position_SLICE_152 \sample_position.SLICE_152 ( 
    .DI1(\sample_position.n105[15] ), .DI0(\sample_position.n105[14] ), 
    .C1(\sample_position.n87_adj_1161[15] ), 
    .B1(\sample_position.Accumulated_Freq_Offset[15] ), .A1(\Harmonic[0] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[14] ), .B0(\Harmonic[0] ), 
    .A0(\sample_position.n87_adj_1161[14] ), .CE(\sample_position.n6110 ), 
    .LSR(\sample_position.n6587 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Offset[14] ), 
    .Q1(\sample_position.Accumulated_Offset[15] ), 
    .F0(\sample_position.n105[14] ), .F1(\sample_position.n105[15] ));
  sample_position_SLICE_155 \sample_position.SLICE_155 ( 
    .DI1(\sample_position.n87_adj_1160[2].sig_208.FeedThruLUT ), 
    .DI0(\sample_position.n87_adj_1160[1].sig_207.FeedThruLUT ), 
    .D1(\sample_position.n87_adj_1160[2] ), 
    .C0(\sample_position.n87_adj_1160[1] ), .CE(\sample_position.n6257 ), 
    .LSR(\sample_position.n6569 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .F0(\sample_position.n87_adj_1160[1].sig_207.FeedThruLUT ), 
    .F1(\sample_position.n87_adj_1160[2].sig_208.FeedThruLUT ));
  sample_position_SLICE_157 \sample_position.SLICE_157 ( 
    .DI1(\sample_position.n87_adj_1160[4].sig_210.FeedThruLUT ), 
    .DI0(\sample_position.n87_adj_1160[3].sig_209.FeedThruLUT ), 
    .D1(\sample_position.n87_adj_1160[4] ), 
    .D0(\sample_position.n87_adj_1160[3] ), .CE(\sample_position.n6257 ), 
    .LSR(\sample_position.n6569 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .F0(\sample_position.n87_adj_1160[3].sig_209.FeedThruLUT ), 
    .F1(\sample_position.n87_adj_1160[4].sig_210.FeedThruLUT ));
  sample_position_SLICE_159 \sample_position.SLICE_159 ( 
    .DI1(\sample_position.n87_adj_1160[6].sig_212.FeedThruLUT ), 
    .DI0(\sample_position.n87_adj_1160[5].sig_211.FeedThruLUT ), 
    .D1(\sample_position.n87_adj_1160[6] ), 
    .D0(\sample_position.n87_adj_1160[5] ), .CE(\sample_position.n6257 ), 
    .LSR(\sample_position.n6569 ), .CLK(Main_Clock), 
    .Q0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .Q1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .F0(\sample_position.n87_adj_1160[5].sig_211.FeedThruLUT ), 
    .F1(\sample_position.n87_adj_1160[6].sig_212.FeedThruLUT ));
  SLICE_164 SLICE_164( .DI1(\ADC_Data[4][5].sig_103.FeedThruLUT ), 
    .DI0(\ADC_Data[4][4].sig_044.FeedThruLUT ), .C1(\ADC_Data[4][5] ), 
    .D0(\ADC_Data[4][4] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[4] ), 
    .Q1(\Comb_Interval[5] ), .F0(\ADC_Data[4][4].sig_044.FeedThruLUT ), 
    .F1(\ADC_Data[4][5].sig_103.FeedThruLUT ));
  SLICE_165 SLICE_165( .DI1(\ADC_Data[4][2].sig_046.FeedThruLUT ), 
    .DI0(\ADC_Data[4][3].sig_045.FeedThruLUT ), .B1(\ADC_Data[4][2] ), 
    .B0(\ADC_Data[4][3] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[3] ), 
    .Q1(\Comb_Interval[2] ), .F0(\ADC_Data[4][3].sig_045.FeedThruLUT ), 
    .F1(\ADC_Data[4][2].sig_046.FeedThruLUT ));
  sample_output_SLICE_167 \sample_output.SLICE_167 ( 
    .DI1(\sample_output.n3613[1] ), .DI0(\sample_output.n3613[0] ), 
    .D1(\SM_Sample_Output[0] ), .C1(\sample_output.r_Sample_L[3] ), .B1(n2767), 
    .A1(\sample_output.r_Sample_R[3] ), .D0(\sample_output.r_Sample_L[2] ), 
    .C0(\SM_Sample_Output[0] ), .B0(\sample_output.r_Sample_R[2] ), .A0(n2767), 
    .CE(n6071), .CLK(Main_Clock), .Q0(\sample_output.Output_Data[0] ), 
    .Q1(\sample_output.Output_Data[1] ), .F0(\sample_output.n3613[0] ), 
    .F1(\sample_output.n3613[1] ));
  sample_output_SLICE_168 \sample_output.SLICE_168 ( 
    .DI1(\sample_output.n9802 ), .DI0(\sample_output.n2801 ), 
    .D1(\SM_Sample_Output[1] ), .B1(\SM_Sample_Output[0] ), 
    .D0(\SM_Sample_Output[0] ), .C0(\SM_Sample_Output[1] ), .B0(DAC_Ready), 
    .A0(\SM_Sample_Output[2] ), .CE(n6910), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q0(\SM_Sample_Output[0] ), .Q1(\SM_Sample_Output[1] ), 
    .F0(\sample_output.n2801 ), .F1(\sample_output.n9802 ));
  sample_output_SLICE_169 \sample_output.SLICE_169 ( 
    .DI1(\sample_output.n3613[14] ), .DI0(\sample_output.n3613[15] ), 
    .D1(\SM_Sample_Output[0] ), .C1(\sample_output.r_Sample_L[16] ), 
    .B1(n2767), .A1(\sample_output.r_Sample_R[16] ), 
    .D0(\sample_output.r_Sample_L[17] ), .C0(n2767), 
    .B0(\sample_output.r_Sample_R[17] ), .A0(\SM_Sample_Output[0] ), 
    .CE(n6071), .CLK(Main_Clock), .Q0(\sample_output.Output_Data[15] ), 
    .Q1(\sample_output.Output_Data[14] ), .F0(\sample_output.n3613[15] ), 
    .F1(\sample_output.n3613[14] ));
  sample_output_SLICE_171 \sample_output.SLICE_171 ( 
    .DI1(\sample_output.n3613[12] ), .DI0(\sample_output.n3613[13] ), 
    .D1(\sample_output.r_Sample_L[14] ), .C1(\SM_Sample_Output[0] ), 
    .B1(\sample_output.r_Sample_R[14] ), .A1(n2767), 
    .D0(\SM_Sample_Output[0] ), .C0(\sample_output.r_Sample_L[15] ), 
    .B0(n2767), .A0(\sample_output.r_Sample_R[15] ), .CE(n6071), 
    .CLK(Main_Clock), .Q0(\sample_output.Output_Data[13] ), 
    .Q1(\sample_output.Output_Data[12] ), .F0(\sample_output.n3613[13] ), 
    .F1(\sample_output.n3613[12] ));
  sample_output_SLICE_173 \sample_output.SLICE_173 ( 
    .DI1(\sample_output.n3613[10] ), .DI0(\sample_output.n3613[11] ), 
    .D1(\sample_output.r_Sample_R[12] ), .C1(n2767), 
    .B1(\SM_Sample_Output[0] ), .A1(\sample_output.r_Sample_L[12] ), 
    .D0(n2767), .C0(\sample_output.r_Sample_R[13] ), 
    .B0(\sample_output.r_Sample_L[13] ), .A0(\SM_Sample_Output[0] ), 
    .CE(n6071), .CLK(Main_Clock), .Q0(\sample_output.Output_Data[11] ), 
    .Q1(\sample_output.Output_Data[10] ), .F0(\sample_output.n3613[11] ), 
    .F1(\sample_output.n3613[10] ));
  sample_output_SLICE_175 \sample_output.SLICE_175 ( 
    .DI1(\sample_output.n3613[8] ), .DI0(\sample_output.n3613[9] ), 
    .D1(\sample_output.r_Sample_L[10] ), .C1(\SM_Sample_Output[0] ), 
    .B1(\sample_output.r_Sample_R[10] ), .A1(n2767), .D0(n2767), 
    .C0(\sample_output.r_Sample_L[11] ), .B0(\SM_Sample_Output[0] ), 
    .A0(\sample_output.r_Sample_R[11] ), .CE(n6071), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[9] ), .Q1(\sample_output.Output_Data[8] ), 
    .F0(\sample_output.n3613[9] ), .F1(\sample_output.n3613[8] ));
  sample_output_SLICE_177 \sample_output.SLICE_177 ( 
    .DI1(\sample_output.n3613[6] ), .DI0(\sample_output.n3613[7] ), 
    .D1(\sample_output.r_Sample_L[8] ), .C1(\SM_Sample_Output[0] ), 
    .B1(\sample_output.r_Sample_R[8] ), .A1(n2767), .D0(\SM_Sample_Output[0] ), 
    .C0(\sample_output.r_Sample_L[9] ), .B0(n2767), 
    .A0(\sample_output.r_Sample_R[9] ), .CE(n6071), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[7] ), .Q1(\sample_output.Output_Data[6] ), 
    .F0(\sample_output.n3613[7] ), .F1(\sample_output.n3613[6] ));
  sample_output_SLICE_179 \sample_output.SLICE_179 ( 
    .DI1(\sample_output.n3613[4] ), .DI0(\sample_output.n3613[5] ), 
    .D1(\sample_output.r_Sample_L[6] ), .C1(\SM_Sample_Output[0] ), 
    .B1(\sample_output.r_Sample_R[6] ), .A1(n2767), .D0(\SM_Sample_Output[0] ), 
    .C0(\sample_output.r_Sample_R[7] ), .B0(n2767), 
    .A0(\sample_output.r_Sample_L[7] ), .CE(n6071), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[5] ), .Q1(\sample_output.Output_Data[4] ), 
    .F0(\sample_output.n3613[5] ), .F1(\sample_output.n3613[4] ));
  sample_output_SLICE_181 \sample_output.SLICE_181 ( 
    .DI1(\sample_output.n3613[2] ), .DI0(\sample_output.n3613[3] ), 
    .D1(\sample_output.r_Sample_R[4] ), .C1(n2767), 
    .B1(\sample_output.r_Sample_L[4] ), .A1(\SM_Sample_Output[0] ), .D0(n2767), 
    .C0(\sample_output.r_Sample_R[5] ), .B0(\SM_Sample_Output[0] ), 
    .A0(\sample_output.r_Sample_L[5] ), .CE(n6071), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[3] ), .Q1(\sample_output.Output_Data[2] ), 
    .F0(\sample_output.n3613[3] ), .F1(\sample_output.n3613[2] ));
  SLICE_185 SLICE_185( .DI1(\r_Adder_Total[1][3].sig_049.FeedThruLUT ), 
    .DI0(\r_Adder_Total[1][2].sig_048.FeedThruLUT ), 
    .B1(\r_Adder_Total[1][3] ), .B0(\r_Adder_Total[1][2] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_output.r_Sample_R[2] ), 
    .Q1(\sample_output.r_Sample_R[3] ), 
    .F0(\r_Adder_Total[1][2].sig_048.FeedThruLUT ), 
    .F1(\r_Adder_Total[1][3].sig_049.FeedThruLUT ));
  SLICE_187 SLICE_187( .DI1(\r_Adder_Total[1][5].sig_051.FeedThruLUT ), 
    .DI0(\r_Adder_Total[1][4].sig_050.FeedThruLUT ), 
    .D1(\r_Adder_Total[1][5] ), .C0(\r_Adder_Total[1][4] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_output.r_Sample_R[4] ), 
    .Q1(\sample_output.r_Sample_R[5] ), 
    .F0(\r_Adder_Total[1][4].sig_050.FeedThruLUT ), 
    .F1(\r_Adder_Total[1][5].sig_051.FeedThruLUT ));
  SLICE_189 SLICE_189( .DI1(\r_Adder_Total[1][7].sig_053.FeedThruLUT ), 
    .DI0(\r_Adder_Total[1][6].sig_052.FeedThruLUT ), 
    .C1(\r_Adder_Total[1][7] ), .A0(\r_Adder_Total[1][6] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_output.r_Sample_R[6] ), 
    .Q1(\sample_output.r_Sample_R[7] ), 
    .F0(\r_Adder_Total[1][6].sig_052.FeedThruLUT ), 
    .F1(\r_Adder_Total[1][7].sig_053.FeedThruLUT ));
  SLICE_193 SLICE_193( .DI1(\r_Adder_Total[0][3].sig_055.FeedThruLUT ), 
    .DI0(\r_Adder_Total[0][2].sig_054.FeedThruLUT ), 
    .A1(\r_Adder_Total[0][3] ), .A0(\r_Adder_Total[0][2] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_output.r_Sample_L[2] ), 
    .Q1(\sample_output.r_Sample_L[3] ), 
    .F0(\r_Adder_Total[0][2].sig_054.FeedThruLUT ), 
    .F1(\r_Adder_Total[0][3].sig_055.FeedThruLUT ));
  SLICE_195 SLICE_195( .DI1(\r_Adder_Total[0][5].sig_057.FeedThruLUT ), 
    .DI0(\r_Adder_Total[0][4].sig_056.FeedThruLUT ), 
    .A1(\r_Adder_Total[0][5] ), .D0(\r_Adder_Total[0][4] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_output.r_Sample_L[4] ), 
    .Q1(\sample_output.r_Sample_L[5] ), 
    .F0(\r_Adder_Total[0][4].sig_056.FeedThruLUT ), 
    .F1(\r_Adder_Total[0][5].sig_057.FeedThruLUT ));
  SLICE_197 SLICE_197( .DI1(\r_Adder_Total[0][7].sig_059.FeedThruLUT ), 
    .DI0(\r_Adder_Total[0][6].sig_058.FeedThruLUT ), 
    .C1(\r_Adder_Total[0][7] ), .B0(\r_Adder_Total[0][6] ), .CE(n2981), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\sample_output.r_Sample_L[6] ), 
    .Q1(\sample_output.r_Sample_L[7] ), 
    .F0(\r_Adder_Total[0][6].sig_058.FeedThruLUT ), 
    .F1(\r_Adder_Total[0][7].sig_059.FeedThruLUT ));
  SLICE_199 SLICE_199( .DI0(n6747), .D0(\Output_Data[17] ), .C0(n2767), 
    .A0(n6071), .CLK(Main_Clock), .Q0(\Output_Data[17] ), .F0(n6747));
  sample_output_SLICE_200 \sample_output.SLICE_200 ( 
    .DI1(\sample_output.n6743 ), .DI0(\sample_output.n6744 ), .D1(n2767), 
    .C1(\sample_output.Output_Data[21] ), .B1(n6071), 
    .A1(\SM_Sample_Output[0] ), .D0(\SM_Sample_Output[0] ), .C0(n2767), 
    .B0(\sample_output.Output_Data[20] ), .A0(n6071), .CLK(Main_Clock), 
    .Q0(\sample_output.Output_Data[20] ), .Q1(\sample_output.Output_Data[21] ), 
    .F0(\sample_output.n6744 ), .F1(\sample_output.n6743 ));
  sample_output_SLICE_202 \sample_output.SLICE_202 ( 
    .DI1(\sample_output.Output_Data[20].sig_061.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[21].sig_060.FeedThruLUT ), 
    .A1(\sample_output.Output_Data[20] ), .B0(\sample_output.Output_Data[21] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[2] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[3] ), 
    .F0(\sample_output.Output_Data[21].sig_060.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[20].sig_061.FeedThruLUT ));
  sample_output_dac_SLICE_203 \sample_output.dac.SLICE_203 ( 
    .DI1(\sample_output.dac.n25[1] ), .DI0(\sample_output.dac.n25[0] ), 
    .D1(\sample_output.dac.Current_Bit[0] ), 
    .B1(\sample_output.dac.Current_Bit[1] ), 
    .C0(\sample_output.dac.Current_Bit[0] ), .CE(\sample_output.dac.n6321 ), 
    .LSR(\sample_output.dac.n6602 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.Current_Bit[0] ), 
    .Q1(\sample_output.dac.Current_Bit[1] ), .F0(\sample_output.dac.n25[0] ), 
    .F1(\sample_output.dac.n25[1] ));
  SLICE_205 SLICE_205( 
    .DI1(\sample_output.Output_Data[16].sig_063.FeedThruLUT ), 
    .DI0(\Output_Data[17].sig_062.FeedThruLUT ), 
    .D1(\sample_output.Output_Data[16] ), .D0(\Output_Data[17] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[6] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[7] ), 
    .F0(\Output_Data[17].sig_062.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[16].sig_063.FeedThruLUT ));
  sample_output_SLICE_207 \sample_output.SLICE_207 ( 
    .DI1(\sample_output.Output_Data[14].sig_065.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[15].sig_064.FeedThruLUT ), 
    .C1(\sample_output.Output_Data[14] ), .C0(\sample_output.Output_Data[15] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[8] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[9] ), 
    .F0(\sample_output.Output_Data[15].sig_064.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[14].sig_065.FeedThruLUT ));
  sample_output_SLICE_209 \sample_output.SLICE_209 ( 
    .DI1(\sample_output.Output_Data[12].sig_067.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[13].sig_066.FeedThruLUT ), 
    .B1(\sample_output.Output_Data[12] ), .D0(\sample_output.Output_Data[13] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[10] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[11] ), 
    .F0(\sample_output.Output_Data[13].sig_066.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[12].sig_067.FeedThruLUT ));
  sample_output_SLICE_211 \sample_output.SLICE_211 ( 
    .DI1(\sample_output.Output_Data[10].sig_069.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[11].sig_068.FeedThruLUT ), 
    .C1(\sample_output.Output_Data[10] ), .D0(\sample_output.Output_Data[11] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[12] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[13] ), 
    .F0(\sample_output.Output_Data[11].sig_068.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[10].sig_069.FeedThruLUT ));
  sample_output_SLICE_213 \sample_output.SLICE_213 ( 
    .DI1(\sample_output.Output_Data[8].sig_071.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[9].sig_070.FeedThruLUT ), 
    .D1(\sample_output.Output_Data[8] ), .D0(\sample_output.Output_Data[9] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[14] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[15] ), 
    .F0(\sample_output.Output_Data[9].sig_070.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[8].sig_071.FeedThruLUT ));
  sample_output_SLICE_215 \sample_output.SLICE_215 ( 
    .DI1(\sample_output.Output_Data[6].sig_073.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[7].sig_072.FeedThruLUT ), 
    .C1(\sample_output.Output_Data[6] ), .A0(\sample_output.Output_Data[7] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[16] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[17] ), 
    .F0(\sample_output.Output_Data[7].sig_072.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[6].sig_073.FeedThruLUT ));
  sample_output_SLICE_217 \sample_output.SLICE_217 ( 
    .DI1(\sample_output.Output_Data[4].sig_075.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[5].sig_074.FeedThruLUT ), 
    .B1(\sample_output.Output_Data[4] ), .B0(\sample_output.Output_Data[5] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[18] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[19] ), 
    .F0(\sample_output.Output_Data[5].sig_074.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[4].sig_075.FeedThruLUT ));
  sample_output_SLICE_219 \sample_output.SLICE_219 ( 
    .DI1(\sample_output.Output_Data[2].sig_077.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[3].sig_076.FeedThruLUT ), 
    .B1(\sample_output.Output_Data[2] ), .B0(\sample_output.Output_Data[3] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[20] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[21] ), 
    .F0(\sample_output.Output_Data[3].sig_076.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[2].sig_077.FeedThruLUT ));
  sample_output_SLICE_221 \sample_output.SLICE_221 ( 
    .DI1(\sample_output.Output_Data[0].sig_080.FeedThruLUT ), 
    .DI0(\sample_output.Output_Data[1].sig_078.FeedThruLUT ), 
    .D1(\sample_output.Output_Data[0] ), .B0(\sample_output.Output_Data[1] ), 
    .CE(\sample_output.dac.n2946 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.r_Data_To_Send[22] ), 
    .Q1(\sample_output.dac.r_Data_To_Send[23] ), 
    .F0(\sample_output.Output_Data[1].sig_078.FeedThruLUT ), 
    .F1(\sample_output.Output_Data[0].sig_080.FeedThruLUT ));
  sample_output_dac_SLICE_227 \sample_output.dac.SLICE_227 ( 
    .DI1(\sample_output.dac.n25[3] ), .DI0(\sample_output.dac.n25[2] ), 
    .D1(\sample_output.dac.Current_Bit[2] ), 
    .C1(\sample_output.dac.Current_Bit[3] ), 
    .B1(\sample_output.dac.Current_Bit[0] ), 
    .A1(\sample_output.dac.Current_Bit[1] ), 
    .D0(\sample_output.dac.Current_Bit[1] ), 
    .C0(\sample_output.dac.Current_Bit[2] ), 
    .A0(\sample_output.dac.Current_Bit[0] ), .CE(\sample_output.dac.n6321 ), 
    .LSR(\sample_output.dac.n6602 ), .CLK(Main_Clock), 
    .Q0(\sample_output.dac.Current_Bit[2] ), 
    .Q1(\sample_output.dac.Current_Bit[3] ), .F0(\sample_output.dac.n25[2] ), 
    .F1(\sample_output.dac.n25[3] ));
  SLICE_231 SLICE_231( .DI1(n6754), .DI0(n9670), .D1(Clock_Counter), 
    .A1(reset_n_c), .D0(\SM_DAC_Out[1] ), .C0(reset_n_c), .B0(n9_adj_1193), 
    .A0(Clock_Counter), .CLK(Main_Clock), .Q0(\SM_DAC_Out[1] ), 
    .Q1(Clock_Counter), .F0(n9670), .F1(n6754));
  sample_output_dac_SLICE_233 \sample_output.dac.SLICE_233 ( 
    .DI0(\sample_output.dac.n2613[0]$n1 ), .B0(\SM_DAC_Out[2] ), 
    .CE(\sample_output.dac.n6348 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q0(o_DAC_CS_c), .F0(\sample_output.dac.n2613[0]$n1 ));
  SLICE_236 SLICE_236( .DI1(\ADC_Data[4][0].sig_141.FeedThruLUT ), 
    .DI0(\ADC_Data[4][1].sig_081.FeedThruLUT ), .C1(\ADC_Data[4][0] ), 
    .B0(\ADC_Data[4][1] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[1] ), 
    .Q1(\Comb_Interval[0] ), .F0(\ADC_Data[4][1].sig_081.FeedThruLUT ), 
    .F1(\ADC_Data[4][0].sig_141.FeedThruLUT ));
  SLICE_237 SLICE_237( .DI1(\ADC_Data[3][14].sig_084.FeedThruLUT ), 
    .DI0(\ADC_Data[3][15].sig_082.FeedThruLUT ), .C1(\ADC_Data[3][14] ), 
    .C0(\ADC_Data[3][15] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[15] ), 
    .Q1(\Freq_Scale[14] ), .F0(\ADC_Data[3][15].sig_082.FeedThruLUT ), 
    .F1(\ADC_Data[3][14].sig_084.FeedThruLUT ));
  SLICE_238 SLICE_238( .DI0(\SM_Top[3].sig_083.FeedThruLUT ), .A0(\SM_Top[3] ), 
    .CE(n10291), .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(DAC_Send), 
    .F0(\SM_Top[3].sig_083.FeedThruLUT ));
  SLICE_239 SLICE_239( .DI1(n10_adj_1203), .DI0(n10_adj_1194), 
    .C1(\SM_Top[1] ), .B1(n40), .D0(n39), .B0(\SM_Top[1] ), .CE(n6833), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\Harmonic[7] ), 
    .Q1(\Harmonic[6] ), .F0(n10_adj_1194), .F1(n10_adj_1203));
  SLICE_241 SLICE_241( .DI1(n10_adj_1211), .DI0(n10_adj_1209), .D1(n42), 
    .B1(\SM_Top[1] ), .C0(n41), .A0(\SM_Top[1] ), .CE(n6833), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\Harmonic[5] ), 
    .Q1(\Harmonic[4] ), .F0(n10_adj_1209), .F1(n10_adj_1211));
  SLICE_243 SLICE_243( .DI1(n10_adj_1213), .DI0(n10_adj_1212), 
    .B1(\SM_Top[1] ), .A1(n44), .C0(\SM_Top[1] ), .B0(n43), .CE(n6833), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\Harmonic[3] ), 
    .Q1(\Harmonic[2] ), .F0(n10_adj_1212), .F1(n10_adj_1213));
  SLICE_247 SLICE_247( .DI1(\ADC_Data[3][12].sig_086.FeedThruLUT ), 
    .DI0(\ADC_Data[3][13].sig_085.FeedThruLUT ), .A1(\ADC_Data[3][12] ), 
    .D0(\ADC_Data[3][13] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[13] ), 
    .Q1(\Freq_Scale[12] ), .F0(\ADC_Data[3][13].sig_085.FeedThruLUT ), 
    .F1(\ADC_Data[3][12].sig_086.FeedThruLUT ));
  SLICE_249 SLICE_249( .DI1(\ADC_Data[3][10].sig_088.FeedThruLUT ), 
    .DI0(\ADC_Data[3][11].sig_087.FeedThruLUT ), .D1(\ADC_Data[3][10] ), 
    .C0(\ADC_Data[3][11] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[11] ), 
    .Q1(\Freq_Scale[10] ), .F0(\ADC_Data[3][11].sig_087.FeedThruLUT ), 
    .F1(\ADC_Data[3][10].sig_088.FeedThruLUT ));
  SLICE_251 SLICE_251( .DI1(\ADC_Data[3][8].sig_090.FeedThruLUT ), 
    .DI0(\ADC_Data[3][9].sig_089.FeedThruLUT ), .D1(\ADC_Data[3][8] ), 
    .D0(\ADC_Data[3][9] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[9] ), 
    .Q1(\Freq_Scale[8] ), .F0(\ADC_Data[3][9].sig_089.FeedThruLUT ), 
    .F1(\ADC_Data[3][8].sig_090.FeedThruLUT ));
  SLICE_253 SLICE_253( .DI1(\ADC_Data[3][6].sig_092.FeedThruLUT ), 
    .DI0(\ADC_Data[3][7].sig_091.FeedThruLUT ), .B1(\ADC_Data[3][6] ), 
    .A0(\ADC_Data[3][7] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[7] ), 
    .Q1(\Freq_Scale[6] ), .F0(\ADC_Data[3][7].sig_091.FeedThruLUT ), 
    .F1(\ADC_Data[3][6].sig_092.FeedThruLUT ));
  SLICE_255 SLICE_255( .DI1(\ADC_Data[3][4].sig_094.FeedThruLUT ), 
    .DI0(\ADC_Data[3][5].sig_093.FeedThruLUT ), .B1(\ADC_Data[3][4] ), 
    .A0(\ADC_Data[3][5] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[5] ), 
    .Q1(\Freq_Scale[4] ), .F0(\ADC_Data[3][5].sig_093.FeedThruLUT ), 
    .F1(\ADC_Data[3][4].sig_094.FeedThruLUT ));
  SLICE_257 SLICE_257( .DI1(\ADC_Data[3][2].sig_096.FeedThruLUT ), 
    .DI0(\ADC_Data[3][3].sig_095.FeedThruLUT ), .B1(\ADC_Data[3][2] ), 
    .A0(\ADC_Data[3][3] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[3] ), 
    .Q1(\Freq_Scale[2] ), .F0(\ADC_Data[3][3].sig_095.FeedThruLUT ), 
    .F1(\ADC_Data[3][2].sig_096.FeedThruLUT ));
  SLICE_259 SLICE_259( .DI1(\ADC_Data[3][0].sig_140.FeedThruLUT ), 
    .DI0(\ADC_Data[3][1].sig_097.FeedThruLUT ), .A1(\ADC_Data[3][0] ), 
    .A0(\ADC_Data[3][1] ), .CLK(ADC_Data_Received), .Q0(\Freq_Scale[1] ), 
    .Q1(\Freq_Scale[0] ), .F0(\ADC_Data[3][1].sig_097.FeedThruLUT ), 
    .F1(\ADC_Data[3][0].sig_140.FeedThruLUT ));
  SLICE_260 SLICE_260( .DI0(\ADC_Data[2][8].sig_098.FeedThruLUT ), 
    .A0(\ADC_Data[2][8] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[8] ), 
    .F0(\ADC_Data[2][8].sig_098.FeedThruLUT ));
  SLICE_261 SLICE_261( .DI1(\ADC_Data[2][6].sig_100.FeedThruLUT ), 
    .DI0(\ADC_Data[2][7].sig_099.FeedThruLUT ), .A1(\ADC_Data[2][6] ), 
    .A0(\ADC_Data[2][7] ), .CLK(ADC_Data_Received), .Q0(\Scale_Initial[7] ), 
    .Q1(\Scale_Initial[6] ), .F0(\ADC_Data[2][7].sig_099.FeedThruLUT ), 
    .F1(\ADC_Data[2][6].sig_100.FeedThruLUT ));
  SLICE_266 SLICE_266( .DI1(\ADC_Data[4][6].sig_102.FeedThruLUT ), 
    .DI0(\ADC_Data[4][7].sig_101.FeedThruLUT ), .C1(\ADC_Data[4][6] ), 
    .A0(\ADC_Data[4][7] ), .CLK(ADC_Data_Received), .Q0(\Comb_Interval[7] ), 
    .Q1(\Comb_Interval[6] ), .F0(\ADC_Data[4][7].sig_101.FeedThruLUT ), 
    .F1(\ADC_Data[4][6].sig_102.FeedThruLUT ));
  SLICE_272 SLICE_272( .DI0(n7), .C0(\SM_Top[0] ), .A0(\SM_Top[2] ), 
    .CE(n9800), .LSR(reset_n_N_191), .CLK(Main_Clock), .Q0(\Adder_Start[1] ), 
    .F0(n7));
  SLICE_273 SLICE_273( .DI1(\Adder_Total[0][3].sig_108.FeedThruLUT ), 
    .DI0(\Adder_Total[0][2].sig_107.FeedThruLUT ), .B1(\Adder_Total[0][3] ), 
    .C0(\Adder_Total[0][2] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][2] ), .Q1(\r_Adder_Total[0][3] ), 
    .F0(\Adder_Total[0][2].sig_107.FeedThruLUT ), 
    .F1(\Adder_Total[0][3].sig_108.FeedThruLUT ));
  SLICE_275 SLICE_275( .DI1(\Adder_Total[0][5].sig_110.FeedThruLUT ), 
    .DI0(\Adder_Total[0][4].sig_109.FeedThruLUT ), .C1(\Adder_Total[0][5] ), 
    .D0(\Adder_Total[0][4] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][4] ), .Q1(\r_Adder_Total[0][5] ), 
    .F0(\Adder_Total[0][4].sig_109.FeedThruLUT ), 
    .F1(\Adder_Total[0][5].sig_110.FeedThruLUT ));
  SLICE_277 SLICE_277( .DI1(\Adder_Total[0][7].sig_112.FeedThruLUT ), 
    .DI0(\Adder_Total[0][6].sig_111.FeedThruLUT ), .A1(\Adder_Total[0][7] ), 
    .A0(\Adder_Total[0][6] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][6] ), .Q1(\r_Adder_Total[0][7] ), 
    .F0(\Adder_Total[0][6].sig_111.FeedThruLUT ), 
    .F1(\Adder_Total[0][7].sig_112.FeedThruLUT ));
  SLICE_279 SLICE_279( .DI1(\Adder_Total[0][9].sig_114.FeedThruLUT ), 
    .DI0(\Adder_Total[0][8].sig_113.FeedThruLUT ), .A1(\Adder_Total[0][9] ), 
    .B0(\Adder_Total[0][8] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][8] ), .Q1(\r_Adder_Total[0][9] ), 
    .F0(\Adder_Total[0][8].sig_113.FeedThruLUT ), 
    .F1(\Adder_Total[0][9].sig_114.FeedThruLUT ));
  SLICE_281 SLICE_281( .DI1(\Adder_Total[0][11].sig_116.FeedThruLUT ), 
    .DI0(\Adder_Total[0][10].sig_115.FeedThruLUT ), .D1(\Adder_Total[0][11] ), 
    .C0(\Adder_Total[0][10] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][10] ), .Q1(\r_Adder_Total[0][11] ), 
    .F0(\Adder_Total[0][10].sig_115.FeedThruLUT ), 
    .F1(\Adder_Total[0][11].sig_116.FeedThruLUT ));
  SLICE_283 SLICE_283( .DI1(\Adder_Total[0][13].sig_118.FeedThruLUT ), 
    .DI0(\Adder_Total[0][12].sig_117.FeedThruLUT ), .A1(\Adder_Total[0][13] ), 
    .A0(\Adder_Total[0][12] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][12] ), .Q1(\r_Adder_Total[0][13] ), 
    .F0(\Adder_Total[0][12].sig_117.FeedThruLUT ), 
    .F1(\Adder_Total[0][13].sig_118.FeedThruLUT ));
  SLICE_285 SLICE_285( .DI1(\Adder_Total[0][15].sig_120.FeedThruLUT ), 
    .DI0(\Adder_Total[0][14].sig_119.FeedThruLUT ), .B1(\Adder_Total[0][15] ), 
    .D0(\Adder_Total[0][14] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][14] ), .Q1(\r_Adder_Total[0][15] ), 
    .F0(\Adder_Total[0][14].sig_119.FeedThruLUT ), 
    .F1(\Adder_Total[0][15].sig_120.FeedThruLUT ));
  SLICE_287 SLICE_287( .DI1(\Adder_Total[0][17].sig_122.FeedThruLUT ), 
    .DI0(\Adder_Total[0][16].sig_121.FeedThruLUT ), .C1(\Adder_Total[0][17] ), 
    .B0(\Adder_Total[0][16] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[0][16] ), .Q1(\r_Adder_Total[0][17] ), 
    .F0(\Adder_Total[0][16].sig_121.FeedThruLUT ), 
    .F1(\Adder_Total[0][17].sig_122.FeedThruLUT ));
  SLICE_289 SLICE_289( .DI1(\Adder_Total[1][3].sig_124.FeedThruLUT ), 
    .DI0(\Adder_Total[1][2].sig_123.FeedThruLUT ), .A1(\Adder_Total[1][3] ), 
    .D0(\Adder_Total[1][2] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][2] ), .Q1(\r_Adder_Total[1][3] ), 
    .F0(\Adder_Total[1][2].sig_123.FeedThruLUT ), 
    .F1(\Adder_Total[1][3].sig_124.FeedThruLUT ));
  SLICE_291 SLICE_291( .DI1(\Adder_Total[1][5].sig_126.FeedThruLUT ), 
    .DI0(\Adder_Total[1][4].sig_125.FeedThruLUT ), .B1(\Adder_Total[1][5] ), 
    .C0(\Adder_Total[1][4] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][4] ), .Q1(\r_Adder_Total[1][5] ), 
    .F0(\Adder_Total[1][4].sig_125.FeedThruLUT ), 
    .F1(\Adder_Total[1][5].sig_126.FeedThruLUT ));
  SLICE_293 SLICE_293( .DI1(\Adder_Total[1][7].sig_128.FeedThruLUT ), 
    .DI0(\Adder_Total[1][6].sig_127.FeedThruLUT ), .A1(\Adder_Total[1][7] ), 
    .D0(\Adder_Total[1][6] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][6] ), .Q1(\r_Adder_Total[1][7] ), 
    .F0(\Adder_Total[1][6].sig_127.FeedThruLUT ), 
    .F1(\Adder_Total[1][7].sig_128.FeedThruLUT ));
  SLICE_295 SLICE_295( .DI1(\Adder_Total[1][9].sig_130.FeedThruLUT ), 
    .DI0(\Adder_Total[1][8].sig_129.FeedThruLUT ), .A1(\Adder_Total[1][9] ), 
    .B0(\Adder_Total[1][8] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][8] ), .Q1(\r_Adder_Total[1][9] ), 
    .F0(\Adder_Total[1][8].sig_129.FeedThruLUT ), 
    .F1(\Adder_Total[1][9].sig_130.FeedThruLUT ));
  SLICE_297 SLICE_297( .DI1(\Adder_Total[1][11].sig_132.FeedThruLUT ), 
    .DI0(\Adder_Total[1][10].sig_131.FeedThruLUT ), .D1(\Adder_Total[1][11] ), 
    .B0(\Adder_Total[1][10] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][10] ), .Q1(\r_Adder_Total[1][11] ), 
    .F0(\Adder_Total[1][10].sig_131.FeedThruLUT ), 
    .F1(\Adder_Total[1][11].sig_132.FeedThruLUT ));
  SLICE_299 SLICE_299( .DI1(\Adder_Total[1][13].sig_134.FeedThruLUT ), 
    .DI0(\Adder_Total[1][12].sig_133.FeedThruLUT ), .D1(\Adder_Total[1][13] ), 
    .C0(\Adder_Total[1][12] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][12] ), .Q1(\r_Adder_Total[1][13] ), 
    .F0(\Adder_Total[1][12].sig_133.FeedThruLUT ), 
    .F1(\Adder_Total[1][13].sig_134.FeedThruLUT ));
  SLICE_301 SLICE_301( .DI1(\Adder_Total[1][15].sig_136.FeedThruLUT ), 
    .DI0(\Adder_Total[1][14].sig_135.FeedThruLUT ), .C1(\Adder_Total[1][15] ), 
    .C0(\Adder_Total[1][14] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][14] ), .Q1(\r_Adder_Total[1][15] ), 
    .F0(\Adder_Total[1][14].sig_135.FeedThruLUT ), 
    .F1(\Adder_Total[1][15].sig_136.FeedThruLUT ));
  SLICE_303 SLICE_303( .DI1(\Adder_Total[1][17].sig_138.FeedThruLUT ), 
    .DI0(\Adder_Total[1][16].sig_137.FeedThruLUT ), .D1(\Adder_Total[1][17] ), 
    .C0(\Adder_Total[1][16] ), .CE(n6387), .CLK(Main_Clock), 
    .Q0(\r_Adder_Total[1][16] ), .Q1(\r_Adder_Total[1][17] ), 
    .F0(\Adder_Total[1][16].sig_137.FeedThruLUT ), 
    .F1(\Adder_Total[1][17].sig_138.FeedThruLUT ));
  SLICE_307 SLICE_307( .DI0(\SM_Top[2].sig_139.FeedThruLUT ), .C0(\SM_Top[2] ), 
    .CE(n6353), .LSR(n9910), .CLK(Main_Clock), .Q0(Adder_Clear), 
    .F0(\SM_Top[2].sig_139.FeedThruLUT ));
  genadder_1__adder_SLICE_310 \genadder[1].adder.SLICE_310 ( 
    .DI1(\genadder[1].adder.n6705 ), .DI0(\genadder[1].adder.n6707 ), 
    .C1(reset_n_c), .A1(\genadder[1].adder.n167[16] ), .B0(reset_n_c), 
    .A0(\genadder[1].adder.n167[17] ), .CE(n2976), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[1][17] ), .Q1(\Adder_Total[1][16] ), 
    .F0(\genadder[1].adder.n6707 ), .F1(\genadder[1].adder.n6705 ));
  genadder_1__adder_SLICE_313 \genadder[1].adder.SLICE_313 ( 
    .DI1(\genadder[1].adder.n6701 ), .DI0(\genadder[1].adder.n6703 ), 
    .C1(\genadder[1].adder.n167[14] ), .B1(reset_n_c), .C0(reset_n_c), 
    .B0(\genadder[1].adder.n167[15] ), .CE(n2976), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[1][15] ), .Q1(\Adder_Total[1][14] ), 
    .F0(\genadder[1].adder.n6703 ), .F1(\genadder[1].adder.n6701 ));
  genadder_1__adder_SLICE_315 \genadder[1].adder.SLICE_315 ( 
    .DI1(\genadder[1].adder.n6697 ), .DI0(\genadder[1].adder.n6699 ), 
    .D1(\genadder[1].adder.n167[12] ), .B1(reset_n_c), 
    .C0(\genadder[1].adder.n167[13] ), .A0(reset_n_c), .CE(n2976), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][13] ), 
    .Q1(\Adder_Total[1][12] ), .F0(\genadder[1].adder.n6699 ), 
    .F1(\genadder[1].adder.n6697 ));
  genadder_1__adder_SLICE_317 \genadder[1].adder.SLICE_317 ( 
    .DI1(\genadder[1].adder.n6693 ), .DI0(\genadder[1].adder.n6695 ), 
    .C1(\genadder[1].adder.n167[10] ), .B1(reset_n_c), 
    .B0(\genadder[1].adder.n167[11] ), .A0(reset_n_c), .CE(n2976), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][11] ), 
    .Q1(\Adder_Total[1][10] ), .F0(\genadder[1].adder.n6695 ), 
    .F1(\genadder[1].adder.n6693 ));
  genadder_1__adder_SLICE_319 \genadder[1].adder.SLICE_319 ( 
    .DI1(\genadder[1].adder.n6689 ), .DI0(\genadder[1].adder.n6691 ), 
    .C1(reset_n_c), .B1(\genadder[1].adder.n167[8] ), 
    .C0(\genadder[1].adder.n167[9] ), .A0(reset_n_c), .CE(n2976), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][9] ), 
    .Q1(\Adder_Total[1][8] ), .F0(\genadder[1].adder.n6691 ), 
    .F1(\genadder[1].adder.n6689 ));
  genadder_1__adder_SLICE_320 \genadder[1].adder.SLICE_320 ( 
    .DI1(\genadder[1].adder.n6675 ), .DI0(\genadder[1].adder.n6533 ), 
    .C1(reset_n_c), .B1(\genadder[1].adder.n167[1] ), .B0(reset_n_c), 
    .A0(\genadder[1].adder.n167[0] ), .CE(n2976), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\genadder[1].adder.Adder_Total[1][0] ), 
    .Q1(\genadder[1].adder.Adder_Total[1][1] ), .F0(\genadder[1].adder.n6533 ), 
    .F1(\genadder[1].adder.n6675 ));
  genadder_1__adder_SLICE_322 \genadder[1].adder.SLICE_322 ( 
    .DI1(\genadder[1].adder.n6685 ), .DI0(\genadder[1].adder.n6687 ), 
    .D1(\genadder[1].adder.n167[6] ), .B1(reset_n_c), 
    .D0(\genadder[1].adder.n167[7] ), .C0(reset_n_c), .CE(n2976), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][7] ), 
    .Q1(\Adder_Total[1][6] ), .F0(\genadder[1].adder.n6687 ), 
    .F1(\genadder[1].adder.n6685 ));
  genadder_1__adder_SLICE_324 \genadder[1].adder.SLICE_324 ( 
    .DI1(\genadder[1].adder.n6681 ), .DI0(\genadder[1].adder.n6683 ), 
    .D1(\genadder[1].adder.n167[4] ), .A1(reset_n_c), 
    .C0(\genadder[1].adder.n167[5] ), .B0(reset_n_c), .CE(n2976), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[1][5] ), 
    .Q1(\Adder_Total[1][4] ), .F0(\genadder[1].adder.n6683 ), 
    .F1(\genadder[1].adder.n6681 ));
  genadder_1__adder_SLICE_326 \genadder[1].adder.SLICE_326 ( 
    .DI1(\genadder[1].adder.n6677 ), .DI0(\genadder[1].adder.n6679 ), 
    .C1(\genadder[1].adder.n167[2] ), .A1(reset_n_c), .D0(reset_n_c), 
    .B0(\genadder[1].adder.n167[3] ), .CE(n2976), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[1][3] ), .Q1(\Adder_Total[1][2] ), 
    .F0(\genadder[1].adder.n6679 ), .F1(\genadder[1].adder.n6677 ));
  SLICE_329 SLICE_329( .DI1(n6746), .DI0(n6769), .D1(n18), 
    .C1(\Working_Total_adj_1217[9] ), .A1(n2944), .D0(n17_adj_1169), 
    .C0(\Working_Total_adj_1217[10] ), .B0(n2944), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1217[10] ), .Q1(\Working_Total_adj_1217[9] ), 
    .F0(n6769), .F1(n6746));
  SLICE_330 SLICE_330( .DI1(n6767), .DI0(n6768), .D1(n15_adj_1168), .B1(n2944), 
    .A1(\Working_Total_adj_1217[12] ), .D0(n16), 
    .C0(\Working_Total_adj_1217[11] ), .A0(n2944), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1217[11] ), .Q1(\Working_Total_adj_1217[12] ), 
    .F0(n6768), .F1(n6767));
  SLICE_332 SLICE_332( .DI1(n6765), .DI0(n6766), .D1(n13), 
    .C1(\Working_Total_adj_1217[14] ), .A1(n2944), .D0(n14), 
    .C0(\Working_Total_adj_1217[13] ), .B0(n2944), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1217[13] ), .Q1(\Working_Total_adj_1217[14] ), 
    .F0(n6766), .F1(n6765));
  SLICE_334 SLICE_334( .DI1(n6763), .DI0(n6764), .D1(n11), .C1(n2944), 
    .B1(\Working_Total_adj_1217[16] ), .D0(n12), 
    .B0(\Working_Total_adj_1217[15] ), .A0(n2944), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1217[15] ), .Q1(\Working_Total_adj_1217[16] ), 
    .F0(n6764), .F1(n6763));
  SLICE_336 SLICE_336( .DI1(n6761), .DI0(n6762), .D1(n9_adj_1167), 
    .C1(\Working_Total_adj_1217[18] ), .B1(n2944), .D0(n10), .C0(n2944), 
    .A0(\Working_Total_adj_1217[17] ), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1217[17] ), .Q1(\Working_Total_adj_1217[18] ), 
    .F0(n6762), .F1(n6761));
  SLICE_338 SLICE_338( .DI1(n6759), .DI0(n6760), .D1(n7_adj_1166), 
    .C1(\Working_Total_adj_1217[20] ), .A1(n2944), .D0(n8_2), .B0(n2944), 
    .A0(\Working_Total_adj_1217[19] ), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1217[19] ), .Q1(\Working_Total_adj_1217[20] ), 
    .F0(n6760), .F1(n6759));
  SLICE_340 SLICE_340( .DI1(n6757), .DI0(n6758), .D1(n5_adj_1165), 
    .C1(\Working_Total_adj_1217[22] ), .A1(n2944), .D0(n6), .B0(n2944), 
    .A0(\Working_Total_adj_1217[21] ), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1217[21] ), .Q1(\Working_Total_adj_1217[22] ), 
    .F0(n6758), .F1(n6757));
  SLICE_342 SLICE_342( .DI1(n6755), .DI0(n6756), .D1(n3), 
    .C1(\Working_Total_adj_1217[31] ), .B1(n2944), .D0(n4_adj_1164), 
    .C0(n2944), .A0(\Working_Total_adj_1217[23] ), .CLK(Main_Clock), 
    .Q0(\Working_Total_adj_1217[23] ), .Q1(\Working_Total_adj_1217[31] ), 
    .F0(n6756), .F1(n6755));
  genadder_1__adder_SLICE_345 \genadder[1].adder.SLICE_345 ( 
    .DI0(\genadder[1].adder.n6709 ), .C0(reset_n_c), 
    .A0(\genadder[1].adder.n167[18] ), .CE(n2976), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\genadder[1].adder.Adder_Total[1][18] ), 
    .F0(\genadder[1].adder.n6709 ));
  genadder_0__adder_SLICE_348 \genadder[0].adder.SLICE_348 ( 
    .DI1(\genadder[0].adder.n6641 ), .DI0(\genadder[0].adder.n6639 ), 
    .C1(reset_n_c), .B1(\genadder[0].adder.n167[14] ), 
    .D0(\genadder[0].adder.n167[15] ), .B0(reset_n_c), .CE(n2971), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[0][15] ), 
    .Q1(\Adder_Total[0][14] ), .F0(\genadder[0].adder.n6639 ), 
    .F1(\genadder[0].adder.n6641 ));
  genadder_0__adder_SLICE_349 \genadder[0].adder.SLICE_349 ( 
    .DI1(\genadder[0].adder.n6635 ), .DI0(\genadder[0].adder.n6637 ), 
    .C1(reset_n_c), .B1(\genadder[0].adder.n167[17] ), .D0(reset_n_c), 
    .B0(\genadder[0].adder.n167[16] ), .CE(n2971), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[0][16] ), .Q1(\Adder_Total[0][17] ), 
    .F0(\genadder[0].adder.n6637 ), .F1(\genadder[0].adder.n6635 ));
  genadder_0__adder_SLICE_350 \genadder[0].adder.SLICE_350 ( 
    .DI1(\genadder[0].adder.n6667 ), .DI0(\genadder[0].adder.n6504 ), 
    .D1(reset_n_c), .A1(\genadder[0].adder.n167[1] ), .C0(reset_n_c), 
    .A0(\genadder[0].adder.n167[0] ), .CE(n2971), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\genadder[0].adder.Adder_Total[0][0] ), 
    .Q1(\genadder[0].adder.Adder_Total[0][1] ), .F0(\genadder[0].adder.n6504 ), 
    .F1(\genadder[0].adder.n6667 ));
  SLICE_351 SLICE_351( .DI1(n6745), .DI0(n6784), .D1(n18), 
    .C1(\Working_Total[9] ), .B1(n2942), .D0(n17_adj_1169), .C0(n2942), 
    .B0(\Working_Total[10] ), .CLK(Main_Clock), .Q0(\Working_Total[10] ), 
    .Q1(\Working_Total[9] ), .F0(n6784), .F1(n6745));
  genadder_0__adder_SLICE_353 \genadder[0].adder.SLICE_353 ( 
    .DI1(\genadder[0].adder.n6663 ), .DI0(\genadder[0].adder.n6665 ), 
    .C1(reset_n_c), .A1(\genadder[0].adder.n167[3] ), 
    .D0(\genadder[0].adder.n167[2] ), .B0(reset_n_c), .CE(n2971), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[0][2] ), 
    .Q1(\Adder_Total[0][3] ), .F0(\genadder[0].adder.n6665 ), 
    .F1(\genadder[0].adder.n6663 ));
  genadder_0__adder_SLICE_355 \genadder[0].adder.SLICE_355 ( 
    .DI1(\genadder[0].adder.n6659 ), .DI0(\genadder[0].adder.n6661 ), 
    .D1(\genadder[0].adder.n167[5] ), .A1(reset_n_c), .D0(reset_n_c), 
    .C0(\genadder[0].adder.n167[4] ), .CE(n2971), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[0][4] ), .Q1(\Adder_Total[0][5] ), 
    .F0(\genadder[0].adder.n6661 ), .F1(\genadder[0].adder.n6659 ));
  genadder_0__adder_SLICE_357 \genadder[0].adder.SLICE_357 ( 
    .DI1(\genadder[0].adder.n6655 ), .DI0(\genadder[0].adder.n6657 ), 
    .D1(reset_n_c), .B1(\genadder[0].adder.n167[7] ), 
    .D0(\genadder[0].adder.n167[6] ), .A0(reset_n_c), .CE(n2971), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[0][6] ), 
    .Q1(\Adder_Total[0][7] ), .F0(\genadder[0].adder.n6657 ), 
    .F1(\genadder[0].adder.n6655 ));
  genadder_0__adder_SLICE_359 \genadder[0].adder.SLICE_359 ( 
    .DI1(\genadder[0].adder.n6651 ), .DI0(\genadder[0].adder.n6653 ), 
    .C1(reset_n_c), .B1(\genadder[0].adder.n167[9] ), .D0(reset_n_c), 
    .B0(\genadder[0].adder.n167[8] ), .CE(n2971), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[0][8] ), .Q1(\Adder_Total[0][9] ), 
    .F0(\genadder[0].adder.n6653 ), .F1(\genadder[0].adder.n6651 ));
  SLICE_361 SLICE_361( .DI1(n6782), .DI0(n6783), .D1(n15_adj_1168), .C1(n2942), 
    .A1(\Working_Total[12] ), .D0(n16), .C0(\Working_Total[11] ), .B0(n2942), 
    .CLK(Main_Clock), .Q0(\Working_Total[11] ), .Q1(\Working_Total[12] ), 
    .F0(n6783), .F1(n6782));
  genadder_0__adder_SLICE_362 \genadder[0].adder.SLICE_362 ( 
    .DI1(\genadder[0].adder.n6647 ), .DI0(\genadder[0].adder.n6649 ), 
    .C1(reset_n_c), .A1(\genadder[0].adder.n167[11] ), 
    .D0(\genadder[0].adder.n167[10] ), .B0(reset_n_c), .CE(n2971), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q0(\Adder_Total[0][10] ), 
    .Q1(\Adder_Total[0][11] ), .F0(\genadder[0].adder.n6649 ), 
    .F1(\genadder[0].adder.n6647 ));
  genadder_0__adder_SLICE_365 \genadder[0].adder.SLICE_365 ( 
    .DI1(\genadder[0].adder.n6643 ), .DI0(\genadder[0].adder.n6645 ), 
    .D1(\genadder[0].adder.n167[13] ), .C1(reset_n_c), .D0(reset_n_c), 
    .C0(\genadder[0].adder.n167[12] ), .CE(n2971), .LSR(Adder_Clear), 
    .CLK(Main_Clock), .Q0(\Adder_Total[0][12] ), .Q1(\Adder_Total[0][13] ), 
    .F0(\genadder[0].adder.n6645 ), .F1(\genadder[0].adder.n6643 ));
  SLICE_367 SLICE_367( .DI1(n6780), .DI0(n6781), .D1(n13), 
    .C1(\Working_Total[14] ), .B1(n2942), .D0(n14), .C0(n2942), 
    .A0(\Working_Total[13] ), .CLK(Main_Clock), .Q0(\Working_Total[13] ), 
    .Q1(\Working_Total[14] ), .F0(n6781), .F1(n6780));
  SLICE_369 SLICE_369( .DI1(n6778), .DI0(n6779), .D1(n11), 
    .C1(\Working_Total[16] ), .A1(n2942), .D0(n12), .B0(n2942), 
    .A0(\Working_Total[15] ), .CLK(Main_Clock), .Q0(\Working_Total[15] ), 
    .Q1(\Working_Total[16] ), .F0(n6779), .F1(n6778));
  SLICE_371 SLICE_371( .DI1(n6776), .DI0(n6777), .D1(n9_adj_1167), 
    .C1(\Working_Total[18] ), .A1(n2942), .D0(n10), .B0(n2942), 
    .A0(\Working_Total[17] ), .CLK(Main_Clock), .Q0(\Working_Total[17] ), 
    .Q1(\Working_Total[18] ), .F0(n6777), .F1(n6776));
  SLICE_373 SLICE_373( .DI1(n6774), .DI0(n6775), .D1(n7_adj_1166), 
    .C1(\Working_Total[20] ), .B1(n2942), .D0(n8_2), .C0(n2942), 
    .A0(\Working_Total[19] ), .CLK(Main_Clock), .Q0(\Working_Total[19] ), 
    .Q1(\Working_Total[20] ), .F0(n6775), .F1(n6774));
  SLICE_375 SLICE_375( .DI1(n6772), .DI0(n6773), .D1(n5_adj_1165), 
    .C1(\Working_Total[22] ), .A1(n2942), .D0(n6), .B0(\Working_Total[21] ), 
    .A0(n2942), .CLK(Main_Clock), .Q0(\Working_Total[21] ), 
    .Q1(\Working_Total[22] ), .F0(n6773), .F1(n6772));
  SLICE_377 SLICE_377( .DI1(n6770), .DI0(n6771), .D1(n3), 
    .B1(\Working_Total[31] ), .A1(n2942), .D0(n4_adj_1164), .C0(n2942), 
    .A0(\Working_Total[23] ), .CLK(Main_Clock), .Q0(\Working_Total[23] ), 
    .Q1(\Working_Total[31] ), .F0(n6771), .F1(n6770));
  mult_SLICE_383 \mult.SLICE_383 ( .DI1(\mult.o_Mult_8__N_742[1] ), 
    .DI0(\mult.o_Mult_8__N_742[0] ), .D1(Reset_Mult_Scaler), 
    .C1(\mult.n57[2] ), .B1(\mult.cout ), .A1(\Scale_Initial[1] ), 
    .D0(\mult.n57[1] ), .C0(\mult.cout ), .B0(\Scale_Initial[0] ), 
    .A0(Reset_Mult_Scaler), .CE(\mult.n6380 ), .CLK(Main_Clock), 
    .Q0(\Adder_Mult[0] ), .Q1(\Adder_Mult[1] ), .F0(\mult.o_Mult_8__N_742[0] ), 
    .F1(\mult.o_Mult_8__N_742[1] ));
  mult_SLICE_384 \mult.SLICE_384 ( .DI1(\mult.n4069 ), .DI0(\mult.n4067 ), 
    .C1(\mult.n47[6] ), .B1(\mult.SM_Scale_Mult[1] ), 
    .C0(\mult.SM_Scale_Mult[1] ), .A0(\mult.n47[7] ), .CE(n6875), 
    .LSR(Reset_Mult_Scaler), .CLK(Main_Clock), .Q0(\mult.Comb_Counter[7] ), 
    .Q1(\mult.Comb_Counter[6] ), .F0(\mult.n4067 ), .F1(\mult.n4069 ));
  mult_SLICE_385 \mult.SLICE_385 ( .DI1(\mult.n1_adj_1086 ), .DI0(\mult.n1_2 ), 
    .D1(\SM_Scale_Mult[0] ), .C1(\mult.n9555 ), .A1(\mult.n15 ), 
    .B0(\mult.n15 ), .A0(\SM_Scale_Mult[0] ), .CE(\mult.n6258 ), 
    .LSR(o_Mult_Ready_N_783), .CLK(Main_Clock), .Q0(\mult.SM_Scale_Mult[1] ), 
    .Q1(\SM_Scale_Mult[0] ), .F0(\mult.n1_2 ), .F1(\mult.n1_adj_1086 ));
  mult_SLICE_387 \mult.SLICE_387 ( .DI1(\mult.n4073 ), .DI0(\mult.n4071 ), 
    .C1(\mult.SM_Scale_Mult[1] ), .B1(\mult.n47[4] ), .C0(\mult.n47[5] ), 
    .B0(\mult.SM_Scale_Mult[1] ), .CE(n6875), .LSR(Reset_Mult_Scaler), 
    .CLK(Main_Clock), .Q0(\mult.Comb_Counter[5] ), .Q1(\mult.Comb_Counter[4] ), 
    .F0(\mult.n4071 ), .F1(\mult.n4073 ));
  mult_SLICE_389 \mult.SLICE_389 ( .DI1(\mult.n4077 ), .DI0(\mult.n4075 ), 
    .B1(\mult.n47[2] ), .A1(\mult.SM_Scale_Mult[1] ), 
    .D0(\mult.SM_Scale_Mult[1] ), .B0(\mult.n47[3] ), .CE(n6875), 
    .LSR(Reset_Mult_Scaler), .CLK(Main_Clock), .Q0(\mult.Comb_Counter[3] ), 
    .Q1(\mult.Comb_Counter[2] ), .F0(\mult.n4075 ), .F1(\mult.n4077 ));
  mult_SLICE_391 \mult.SLICE_391 ( .DI1(\mult.n3994 ), .DI0(\mult.n4079 ), 
    .B1(\mult.n47[0] ), .A1(\mult.SM_Scale_Mult[1] ), 
    .D0(\mult.SM_Scale_Mult[1] ), .C0(\mult.n47[1] ), .CE(n6875), 
    .LSR(Reset_Mult_Scaler), .CLK(Main_Clock), .Q0(\mult.Comb_Counter[1] ), 
    .Q1(\mult.Comb_Counter[0] ), .F0(\mult.n4079 ), .F1(\mult.n3994 ));
  mult_SLICE_393 \mult.SLICE_393 ( .DI1(\mult.o_Mult_8__N_742[3] ), 
    .DI0(\mult.o_Mult_8__N_742[2] ), .D1(Reset_Mult_Scaler), .C1(\mult.cout ), 
    .B1(\Scale_Initial[3] ), .A1(\mult.n57[4] ), .D0(\mult.n57[3] ), 
    .C0(\Scale_Initial[2] ), .B0(\mult.cout ), .A0(Reset_Mult_Scaler), 
    .CE(\mult.n6380 ), .CLK(Main_Clock), .Q0(\Adder_Mult[2] ), 
    .Q1(\Adder_Mult[3] ), .F0(\mult.o_Mult_8__N_742[2] ), 
    .F1(\mult.o_Mult_8__N_742[3] ));
  mult_SLICE_395 \mult.SLICE_395 ( .DI1(\mult.o_Mult_8__N_742[5] ), 
    .DI0(\mult.o_Mult_8__N_742[4] ), .D1(Reset_Mult_Scaler), .C1(\mult.cout ), 
    .B1(\mult.n57[6] ), .A1(\Scale_Initial[5] ), .D0(\mult.n57[5] ), 
    .C0(\Scale_Initial[4] ), .B0(\mult.cout ), .A0(Reset_Mult_Scaler), 
    .CE(\mult.n6380 ), .CLK(Main_Clock), .Q0(\Adder_Mult[4] ), 
    .Q1(\Adder_Mult[5] ), .F0(\mult.o_Mult_8__N_742[4] ), 
    .F1(\mult.o_Mult_8__N_742[5] ));
  mult_SLICE_397 \mult.SLICE_397 ( .DI1(\mult.o_Mult_8__N_742[7] ), 
    .DI0(\mult.o_Mult_8__N_742[6] ), .D1(\Scale_Initial[7] ), .C1(\mult.cout ), 
    .B1(Reset_Mult_Scaler), .A1(\mult.n57[8] ), .D0(\mult.cout ), 
    .C0(Reset_Mult_Scaler), .B0(\Scale_Initial[6] ), .A0(\mult.n57[7] ), 
    .CE(\mult.n6380 ), .CLK(Main_Clock), .Q0(\Adder_Mult[6] ), 
    .Q1(\Adder_Mult[7] ), .F0(\mult.o_Mult_8__N_742[6] ), 
    .F1(\mult.o_Mult_8__N_742[7] ));
  mult_SLICE_399 \mult.SLICE_399 ( .DI0(\mult.o_Mult_8__N_742[8] ), 
    .D0(\mult.n57[9] ), .C0(\mult.cout ), .B0(\Scale_Initial[8] ), 
    .A0(Reset_Mult_Scaler), .CE(\mult.n6380 ), .CLK(Main_Clock), 
    .Q0(\Adder_Mult[8] ), .F0(\mult.o_Mult_8__N_742[8] ));
  adc_SLICE_407 \adc.SLICE_407 ( .DI0(\adc.Data_State.sig_143.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n5924 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][7] ), .F0(\adc.Data_State.sig_143.FeedThruLUT ));
  adc_SLICE_408 \adc.SLICE_408 ( .DI0(\adc.Data_State.sig_144.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6056 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][6] ), .F0(\adc.Data_State.sig_144.FeedThruLUT ));
  adc_SLICE_409 \adc.SLICE_409 ( .DI0(\adc.Data_State.sig_145.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6055 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][5] ), .F0(\adc.Data_State.sig_145.FeedThruLUT ));
  adc_SLICE_410 \adc.SLICE_410 ( .DI0(\adc.Data_State.sig_146.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6054 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][4] ), .F0(\adc.Data_State.sig_146.FeedThruLUT ));
  adc_SLICE_411 \adc.SLICE_411 ( .DI0(\adc.Data_State.sig_147.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6053 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][3] ), .F0(\adc.Data_State.sig_147.FeedThruLUT ));
  adc_SLICE_412 \adc.SLICE_412 ( .DI0(\adc.Data_State.sig_148.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6004 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][2] ), .F0(\adc.Data_State.sig_148.FeedThruLUT ));
  adc_SLICE_413 \adc.SLICE_413 ( .DI0(\adc.Data_State.sig_149.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6052 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][1] ), .F0(\adc.Data_State.sig_149.FeedThruLUT ));
  adc_SLICE_414 \adc.SLICE_414 ( .DI0(\adc.Data_State.sig_150.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6032 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[4][0] ), .F0(\adc.Data_State.sig_150.FeedThruLUT ));
  adc_SLICE_415 \adc.SLICE_415 ( .DI0(\adc.Data_State.sig_151.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n5928 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][15] ), .F0(\adc.Data_State.sig_151.FeedThruLUT ));
  adc_SLICE_416 \adc.SLICE_416 ( .DI0(\adc.Data_State.sig_152.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6050 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][14] ), .F0(\adc.Data_State.sig_152.FeedThruLUT ));
  adc_SLICE_417 \adc.SLICE_417 ( .DI0(\adc.Data_State.sig_153.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6049 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][13] ), .F0(\adc.Data_State.sig_153.FeedThruLUT ));
  adc_SLICE_418 \adc.SLICE_418 ( .DI0(\adc.Data_State.sig_154.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6048 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][12] ), .F0(\adc.Data_State.sig_154.FeedThruLUT ));
  adc_SLICE_419 \adc.SLICE_419 ( .DI0(\adc.Data_State.sig_155.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6047 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][11] ), .F0(\adc.Data_State.sig_155.FeedThruLUT ));
  adc_SLICE_420 \adc.SLICE_420 ( .DI0(\adc.Data_State.sig_156.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6003 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][10] ), .F0(\adc.Data_State.sig_156.FeedThruLUT ));
  adc_SLICE_421 \adc.SLICE_421 ( .DI0(\adc.Data_State.sig_157.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6046 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][9] ), .F0(\adc.Data_State.sig_157.FeedThruLUT ));
  adc_SLICE_422 \adc.SLICE_422 ( .DI0(\adc.Data_State.sig_158.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6031 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][8] ), .F0(\adc.Data_State.sig_158.FeedThruLUT ));
  adc_SLICE_423 \adc.SLICE_423 ( .DI0(\adc.Data_State.sig_159.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n5927 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][7] ), .F0(\adc.Data_State.sig_159.FeedThruLUT ));
  adc_SLICE_425 \adc.SLICE_425 ( .DI0(\adc.Data_State.sig_160.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6044 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][6] ), .F0(\adc.Data_State.sig_160.FeedThruLUT ));
  adc_SLICE_427 \adc.SLICE_427 ( .DI0(\adc.Data_State.sig_162.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6043 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][5] ), .F0(\adc.Data_State.sig_162.FeedThruLUT ));
  SLICE_430 SLICE_430( .DI0(\i_ADC_Clock_c.sig_165.FeedThruLUT ), 
    .A0(i_ADC_Clock_c), .CE(\adc.n9895 ), .CLK(Main_Clock), 
    .Q0(\adc.Clock_Stable ), .F0(\i_ADC_Clock_c.sig_165.FeedThruLUT ));
  adc_SLICE_431 \adc.SLICE_431 ( .DI0(\adc.Data_State.sig_166.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6042 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][4] ), .F0(\adc.Data_State.sig_166.FeedThruLUT ));
  adc_SLICE_432 \adc.SLICE_432 ( .DI0(\adc.Data_State.sig_167.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6041 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][3] ), .F0(\adc.Data_State.sig_167.FeedThruLUT ));
  adc_SLICE_433 \adc.SLICE_433 ( .DI0(\adc.Data_State.sig_168.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n5998 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][2] ), .F0(\adc.Data_State.sig_168.FeedThruLUT ));
  adc_SLICE_434 \adc.SLICE_434 ( .DI0(\adc.Data_State.sig_169.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6040 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][1] ), .F0(\adc.Data_State.sig_169.FeedThruLUT ));
  adc_SLICE_435 \adc.SLICE_435 ( .DI0(\adc.Data_State.sig_170.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6030 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[3][0] ), .F0(\adc.Data_State.sig_170.FeedThruLUT ));
  adc_SLICE_436 \adc.SLICE_436 ( .DI0(\adc.Data_State.sig_171.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n9550 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][8] ), .F0(\adc.Data_State.sig_171.FeedThruLUT ));
  adc_SLICE_437 \adc.SLICE_437 ( .DI0(\adc.Data_State.sig_172.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n5923 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][7] ), .F0(\adc.Data_State.sig_172.FeedThruLUT ));
  adc_SLICE_438 \adc.SLICE_438 ( .DI1(\adc.n17[0] ), .DI0(\adc.n17[1] ), 
    .B1(\adc.Count_Stable[0] ), .C0(\adc.Count_Stable[0] ), 
    .A0(\adc.Count_Stable[1] ), .CE(reset_n_c), .LSR(\adc.n6737 ), 
    .CLK(Main_Clock), .Q0(\adc.Count_Stable[1] ), .Q1(\adc.Count_Stable[0] ), 
    .F0(\adc.n17[1] ), .F1(\adc.n17[0] ));
  adc_SLICE_439 \adc.SLICE_439 ( .DI0(\adc.n17[2] ), 
    .C0(\adc.Count_Stable[1] ), .B0(\adc.Count_Stable[2] ), 
    .A0(\adc.Count_Stable[0] ), .CE(reset_n_c), .LSR(\adc.n6737 ), 
    .CLK(Main_Clock), .Q0(\adc.Count_Stable[2] ), .F0(\adc.n17[2] ));
  adc_SLICE_441 \adc.SLICE_441 ( .DI0(\adc.Data_State.sig_174.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6037 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][5] ), .F0(\adc.Data_State.sig_174.FeedThruLUT ));
  adc_SLICE_442 \adc.SLICE_442 ( .DI0(\adc.Data_State.sig_175.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6036 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][4] ), .F0(\adc.Data_State.sig_175.FeedThruLUT ));
  adc_SLICE_443 \adc.SLICE_443 ( .DI0(\adc.Data_State.sig_176.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6035 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][3] ), .F0(\adc.Data_State.sig_176.FeedThruLUT ));
  adc_SLICE_445 \adc.SLICE_445 ( .DI0(\adc.Data_State.sig_178.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6034 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][1] ), .F0(\adc.Data_State.sig_178.FeedThruLUT ));
  adc_SLICE_446 \adc.SLICE_446 ( .DI0(\adc.Data_State.sig_179.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6028 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[2][0] ), .F0(\adc.Data_State.sig_179.FeedThruLUT ));
  adc_SLICE_447 \adc.SLICE_447 ( .DI0(\adc.Data_State.sig_180.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n9549 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][8] ), .F0(\adc.Data_State.sig_180.FeedThruLUT ));
  adc_SLICE_448 \adc.SLICE_448 ( .DI0(\adc.Data_State.sig_181.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n5926 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][7] ), .F0(\adc.Data_State.sig_181.FeedThruLUT ));
  adc_SLICE_449 \adc.SLICE_449 ( .DI0(\adc.Data_State.sig_182.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6011 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][6] ), .F0(\adc.Data_State.sig_182.FeedThruLUT ));
  adc_SLICE_450 \adc.SLICE_450 ( .DI0(\adc.Data_State.sig_183.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6010 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][5] ), .F0(\adc.Data_State.sig_183.FeedThruLUT ));
  adc_SLICE_451 \adc.SLICE_451 ( .DI0(\adc.Data_State.sig_184.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6009 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][4] ), .F0(\adc.Data_State.sig_184.FeedThruLUT ));
  adc_SLICE_453 \adc.SLICE_453 ( .DI0(\adc.Data_State.sig_185.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6006 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][3] ), .F0(\adc.Data_State.sig_185.FeedThruLUT ));
  adc_SLICE_454 \adc.SLICE_454 ( .DI0(\adc.Data_State.sig_186.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n5999 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][2] ), .F0(\adc.Data_State.sig_186.FeedThruLUT ));
  adc_SLICE_456 \adc.SLICE_456 ( .DI0(\adc.Data_State.sig_188.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6007 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][1] ), .F0(\adc.Data_State.sig_188.FeedThruLUT ));
  adc_SLICE_457 \adc.SLICE_457 ( .DI0(\adc.Data_State.sig_189.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6008 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[1][0] ), .F0(\adc.Data_State.sig_189.FeedThruLUT ));
  adc_SLICE_459 \adc.SLICE_459 ( .DI0(\adc.Data_State.sig_190.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n4663 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][15] ), .F0(\adc.Data_State.sig_190.FeedThruLUT ));
  adc_SLICE_462 \adc.SLICE_462 ( .DI0(\adc.Data_State.sig_192.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6014 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][13] ), .F0(\adc.Data_State.sig_192.FeedThruLUT ));
  adc_SLICE_463 \adc.SLICE_463 ( .DI0(\adc.Data_State.sig_193.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6015 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][12] ), .F0(\adc.Data_State.sig_193.FeedThruLUT ));
  adc_SLICE_464 \adc.SLICE_464 ( .DI1(\adc.n370[2] ), .DI0(\adc.n370[1] ), 
    .D1(\adc.Receive_Bit[1] ), .C1(\adc.Receive_Bit[2] ), 
    .A1(\adc.Receive_Bit[0] ), .D0(\adc.Receive_Bit[0] ), 
    .A0(\adc.Receive_Bit[1] ), .CE(\adc.n2963 ), .LSR(\adc.n6674 ), 
    .CLK(\adc.Clock_Stable ), .Q0(\adc.Receive_Bit[1] ), 
    .Q1(\adc.Receive_Bit[2] ), .F0(\adc.n370[1] ), .F1(\adc.n370[2] ));
  adc_SLICE_468 \adc.SLICE_468 ( .DI0(\adc.Data_State.sig_195.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6016 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][11] ), .F0(\adc.Data_State.sig_195.FeedThruLUT ));
  adc_SLICE_469 \adc.SLICE_469 ( .DI0(\adc.Data_State.sig_196.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6000 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][10] ), .F0(\adc.Data_State.sig_196.FeedThruLUT ));
  adc_SLICE_470 \adc.SLICE_470 ( .DI0(\adc.Data_State.sig_197.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6017 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][9] ), .F0(\adc.Data_State.sig_197.FeedThruLUT ));
  adc_SLICE_471 \adc.SLICE_471 ( .DI0(\adc.Data_State.sig_198.FeedThruLUT ), 
    .B0(\adc.Data_State ), .CE(\adc.n6018 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][8] ), .F0(\adc.Data_State.sig_198.FeedThruLUT ));
  adc_SLICE_472 \adc.SLICE_472 ( .DI0(\adc.Data_State.sig_199.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n5925 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][7] ), .F0(\adc.Data_State.sig_199.FeedThruLUT ));
  adc_SLICE_473 \adc.SLICE_473 ( .DI0(\adc.Data_State.sig_200.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6020 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][6] ), .F0(\adc.Data_State.sig_200.FeedThruLUT ));
  adc_SLICE_474 \adc.SLICE_474 ( .DI0(\adc.Data_State.sig_201.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6021 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][5] ), .F0(\adc.Data_State.sig_201.FeedThruLUT ));
  adc_SLICE_475 \adc.SLICE_475 ( .DI0(\adc.Data_State.sig_202.FeedThruLUT ), 
    .C0(\adc.Data_State ), .CE(\adc.n6022 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][4] ), .F0(\adc.Data_State.sig_202.FeedThruLUT ));
  adc_SLICE_476 \adc.SLICE_476 ( .DI0(\adc.Data_State.sig_203.FeedThruLUT ), 
    .A0(\adc.Data_State ), .CE(\adc.n6023 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][3] ), .F0(\adc.Data_State.sig_203.FeedThruLUT ));
  adc_SLICE_477 \adc.SLICE_477 ( .DI0(\adc.Data_State.sig_204.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6001 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][2] ), .F0(\adc.Data_State.sig_204.FeedThruLUT ));
  adc_SLICE_478 \adc.SLICE_478 ( .DI0(\adc.Data_State.sig_205.FeedThruLUT ), 
    .D0(\adc.Data_State ), .CE(\adc.n6024 ), .CLK(\adc.Clock_Stable ), 
    .Q0(\ADC_Data[0][1] ), .F0(\adc.Data_State.sig_205.FeedThruLUT ));
  SLICE_480 SLICE_480( .D1(\SM_Sample_Output[0] ), .C1(n21), 
    .B1(\SM_Sample_Output[2] ), .A1(\SM_Sample_Output[1] ), .D0(DAC_Send), 
    .C0(DAC_Ready), .B0(\SM_Sample_Output[1] ), .A0(\SM_Sample_Output[0] ), 
    .F0(n21), .F1(n24));
  sample_output_dac_SLICE_482 \sample_output.dac.SLICE_482 ( 
    .D1(\sample_output.dac.Current_Bit[2] ), .C1(\sample_output.dac.n10588 ), 
    .B1(\sample_output.dac.n10589 ), .A1(\sample_output.dac.Current_Bit[1] ), 
    .C0(\sample_output.dac.r_Data_To_Send[21] ), 
    .B0(\sample_output.dac.r_Data_To_Send[20] ), 
    .A0(\sample_output.dac.Current_Bit[0] ), .F0(\sample_output.dac.n10588 ), 
    .F1(\sample_output.dac.n11215 ));
  sample_output_dac_SLICE_483 \sample_output.dac.SLICE_483 ( 
    .D1(\sample_output.dac.n10580 ), .C1(\sample_output.dac.n10579 ), 
    .B1(\sample_output.dac.n11215 ), .A1(\sample_output.dac.Current_Bit[2] ), 
    .D0(\sample_output.dac.r_Data_To_Send[16] ), 
    .C0(\sample_output.dac.Current_Bit[0] ), 
    .A0(\sample_output.dac.r_Data_To_Send[17] ), 
    .F0(\sample_output.dac.n10579 ), .F1(\sample_output.dac.n11218 ));
  sample_output_dac_SLICE_484 \sample_output.dac.SLICE_484 ( 
    .D1(\sample_output.dac.n24 ), .C1(n2635), .B1(Clock_Counter), 
    .A1(\SM_DAC_Out[0] ), .D0(\SM_DAC_Out[1] ), .C0(\SM_DAC_Out[2] ), 
    .B0(\SM_DAC_Out[3] ), .A0(\SM_DAC_Out[0] ), .F0(n2635), 
    .F1(\sample_output.dac.n9882 ));
  sample_output_dac_SLICE_485 \sample_output.dac.SLICE_485 ( 
    .DI1(\sample_output.dac.n9586 ), .D1(\SM_DAC_Out[0] ), .B1(n2635), 
    .A1(\sample_output.dac.o_SPI_Data_N_1070 ), .C0(\SM_DAC_Out[0] ), 
    .B0(DAC_Send_adj_1196), .A0(n2635), .CE(n6888), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(o_DAC_MOSI_c), .F0(\sample_output.dac.n15 ), 
    .F1(\sample_output.dac.n9586 ));
  sample_output_dac_SLICE_486 \sample_output.dac.SLICE_486 ( 
    .D1(\sample_output.dac.n11230 ), .C1(\sample_output.dac.n11224 ), 
    .B1(\sample_output.dac.Current_Bit[1] ), 
    .A1(\sample_output.dac.Current_Bit[3] ), 
    .D0(\sample_output.dac.Current_Bit[2] ), .C0(\sample_output.dac.n11221 ), 
    .B0(\sample_output.dac.n10585 ), .A0(\sample_output.dac.n10586 ), 
    .F0(\sample_output.dac.n11224 ), .F1(\sample_output.dac.n15_adj_1092 ));
  sample_output_dac_SLICE_487 \sample_output.dac.SLICE_487 ( 
    .D1(\sample_output.dac.n10583 ), .C1(\sample_output.dac.n10582 ), 
    .B1(\sample_output.dac.Current_Bit[1] ), 
    .A1(\sample_output.dac.Current_Bit[2] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .B0(\sample_output.dac.r_Data_To_Send[13] ), 
    .A0(\sample_output.dac.r_Data_To_Send[12] ), 
    .F0(\sample_output.dac.n10582 ), .F1(\sample_output.dac.n11221 ));
  sample_output_dac_SLICE_488 \sample_output.dac.SLICE_488 ( 
    .D1(\sample_output.dac.r_Data_To_Send[2] ), 
    .C1(\sample_output.dac.n11227 ), 
    .B1(\sample_output.dac.r_Data_To_Send[3] ), 
    .A1(\sample_output.dac.Current_Bit[2] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.r_Data_To_Send[6] ), 
    .B0(\sample_output.dac.Current_Bit[2] ), 
    .A0(\sample_output.dac.r_Data_To_Send[7] ), 
    .F0(\sample_output.dac.n11227 ), .F1(\sample_output.dac.n11230 ));
  sample_output_dac_SLICE_490 \sample_output.dac.SLICE_490 ( .D1(reset_n_c), 
    .C1(\sample_output.dac.n10 ), .B1(Clock_Counter), .A1(n10255), 
    .D0(\SM_DAC_Out[0] ), .C0(\SM_DAC_Out[1] ), .A0(DAC_Send_adj_1196), 
    .F0(\sample_output.dac.n10 ), .F1(\sample_output.dac.n6321 ));
  sample_output_dac_SLICE_491 \sample_output.dac.SLICE_491 ( 
    .D1(\sample_output.dac.n6321 ), .C1(n10255), .B1(\SM_DAC_Out[1] ), 
    .A1(\SM_DAC_Out[0] ), .D0(\SM_DAC_Out[2] ), .B0(\SM_DAC_Out[3] ), 
    .F0(n10255), .F1(\sample_output.dac.n6602 ));
  sample_output_dac_SLICE_493 \sample_output.dac.SLICE_493 ( .D1(n10_adj_1195), 
    .C1(\sample_output.dac.n24 ), .B1(reset_n_c), .A1(Clock_Counter), 
    .D0(\SM_DAC_Out[3] ), .C0(\SM_DAC_Out[2] ), .B0(\SM_DAC_Out[0] ), 
    .A0(\SM_DAC_Out[1] ), .F0(\sample_output.dac.n24 ), .F1(n6888));
  sample_output_dac_SLICE_494 \sample_output.dac.SLICE_494 ( 
    .D0(\sample_output.dac.n11218 ), .C0(\sample_output.dac.n15_adj_1092 ), 
    .B0(\sample_output.dac.Current_Bit[4] ), 
    .A0(\sample_output.dac.Current_Bit[3] ), 
    .F0(\sample_output.dac.o_SPI_Data_N_1070 ));
  SLICE_496 SLICE_496( .D1(n10223), .C1(n6092), .B1(Mult_Ready), 
    .A1(\SM_Top[0] ), .D0(\SM_Top[1] ), .C0(n31), .B0(\SM_Top[0] ), 
    .A0(reset_n_c), .F0(n6092), .F1(n9939));
  SLICE_498 SLICE_498( .D1(n10223), .C1(n9876), .B1(\SM_Top[2] ), 
    .A1(\SM_Top[3] ), .D0(\SM_Top[3] ), .C0(n9939), .B0(n10225), .A0(n6202), 
    .F0(n9876), .F1(n9877));
  SLICE_500 SLICE_500( .D1(\SM_Top[1] ), .C1(n9864), .D0(\SM_Top[1] ), 
    .C0(n303), .B0(\SM_Top[2] ), .A0(\SM_Top[0] ), .F0(n9_adj_1199), 
    .F1(n6387));
  SLICE_501 SLICE_501( .D1(n4), .C1(n5994), .B1(Freq_Too_High), 
    .A1(\Harmonic[5] ), .D0(\Harmonic[7] ), .B0(\Harmonic[6] ), .F0(n5994), 
    .F1(n303));
  SLICE_502 SLICE_502( .D1(\Harmonic[0] ), .C1(n5890), 
    .B1(\SM_Sample_Position[1] ), .A1(\sample_position.n10277 ), 
    .D0(\Harmonic[1] ), .C0(\Harmonic[3] ), .B0(\Harmonic[2] ), .F0(n5890), 
    .F1(\sample_position.n10636 ));
  sample_position_SLICE_504 \sample_position.SLICE_504 ( 
    .D1(\sample_position.n6_adj_1159 ), .C1(\sample_position.n4 ), 
    .B1(\SM_Sample_Position[0] ), .A1(\SM_Sample_Position[2] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .C0(\sample_position.n30 ), .B0(\Harmonic[0] ), 
    .A0(\sample_position.Accumulated_Frequency[15] ), 
    .F0(\sample_position.n4 ), .F1(\sample_position.n6110 ));
  sample_position_SLICE_506 \sample_position.SLICE_506 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[14] ), 
    .C1(\sample_position.n28 ), 
    .B1(\sample_position.Accumulated_Frequency[14] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .C0(\sample_position.n26 ), 
    .B0(\sample_position.Accumulated_Frequency[13] ), 
    .F0(\sample_position.n28 ), .F1(\sample_position.n30 ));
  sample_position_SLICE_508 \sample_position.SLICE_508 ( 
    .D1(\sample_position.Accumulated_Frequency[12] ), 
    .C1(\sample_position.n24 ), 
    .A1(\sample_position.Accumulated_Freq_Offset[12] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[11] ), 
    .C0(\sample_position.n22 ), 
    .B0(\sample_position.Accumulated_Frequency[11] ), 
    .F0(\sample_position.n24 ), .F1(\sample_position.n26 ));
  sample_position_SLICE_510 \sample_position.SLICE_510 ( 
    .D1(\sample_position.Accumulated_Frequency[10] ), 
    .C1(\sample_position.n20 ), 
    .B1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .C0(\sample_position.n18 ), 
    .B0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .A0(\sample_position.Accumulated_Frequency[9] ), 
    .F0(\sample_position.n20 ), .F1(\sample_position.n22 ));
  sample_position_SLICE_512 \sample_position.SLICE_512 ( 
    .D1(\sample_position.Accumulated_Frequency[1] ), 
    .A1(\sample_position.n7_adj_1095 ), .D0(\sample_position.n7_adj_1095 ), 
    .B0(\sample_position.Accumulated_Frequency[13] ), 
    .F0(\sample_position.n8573 ), .F1(\sample_position.n8597 ));
  sample_position_SLICE_513 \sample_position.SLICE_513 ( 
    .C1(\sample_position.n7_adj_1095 ), 
    .A1(\sample_position.Accumulated_Frequency[0] ), 
    .D0(\SM_Sample_Position[2] ), .C0(\SM_Sample_Position[1] ), 
    .B0(\SM_Sample_Position[0] ), .A0(reset_n_c), 
    .F0(\sample_position.n7_adj_1095 ), .F1(\sample_position.n8599 ));
  sample_position_SLICE_514 \sample_position.SLICE_514 ( .D1(n10237), 
    .C1(o_Freq_Too_High_N_368), .B1(reset_n_c), .A1(\SM_Sample_Position[2] ), 
    .D0(\sample_position.Accumulated_Frequency[14] ), 
    .C0(\sample_position.n4_adj_1096 ), 
    .B0(\sample_position.Accumulated_Frequency[15] ), 
    .A0(\sample_position.Accumulated_Frequency[13] ), 
    .F0(o_Freq_Too_High_N_368), .F1(n9630));
  sample_position_SLICE_516 \sample_position.SLICE_516 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[8] ), 
    .C1(\sample_position.n16 ), 
    .A1(\sample_position.Accumulated_Frequency[8] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[7] ), 
    .C0(\sample_position.n14_adj_1097 ), 
    .B0(\sample_position.Accumulated_Frequency[7] ), 
    .F0(\sample_position.n16 ), .F1(\sample_position.n18 ));
  sample_position_SLICE_518 \sample_position.SLICE_518 ( 
    .D1(\sample_position.n6 ), .C1(\sample_position.n9533 ), 
    .B1(\sample_position.Accumulated_Frequency[10] ), 
    .A1(\sample_position.Accumulated_Frequency[12] ), 
    .D0(\sample_position.Accumulated_Frequency[7] ), 
    .C0(\sample_position.n12_adj_1098 ), 
    .B0(\sample_position.Accumulated_Frequency[8] ), 
    .A0(\sample_position.Accumulated_Frequency[6] ), 
    .F0(\sample_position.n9533 ), .F1(\sample_position.n4_adj_1096 ));
  sample_position_SLICE_519 \sample_position.SLICE_519 ( 
    .D1(\sample_position.Accumulated_Frequency[9] ), 
    .C1(\sample_position.n7_adj_1095 ), 
    .C0(\sample_position.Accumulated_Frequency[11] ), 
    .A0(\sample_position.Accumulated_Frequency[9] ), .F0(\sample_position.n6 ), 
    .F1(\sample_position.n8581 ));
  sample_position_SLICE_520 \sample_position.SLICE_520 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .C1(\sample_position.n12 ), 
    .B1(\sample_position.Accumulated_Frequency[6] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[5] ), 
    .C0(\sample_position.n10 ), 
    .B0(\sample_position.Accumulated_Frequency[5] ), 
    .F0(\sample_position.n12 ), .F1(\sample_position.n14_adj_1097 ));
  sample_position_SLICE_523 \sample_position.SLICE_523 ( 
    .D1(\sample_position.Accumulated_Frequency[2] ), .C1(\sample_position.n8 ), 
    .B1(\sample_position.Accumulated_Frequency[5] ), 
    .A1(\sample_position.Accumulated_Frequency[0] ), 
    .D0(\sample_position.Accumulated_Frequency[1] ), 
    .C0(\sample_position.Accumulated_Frequency[3] ), 
    .A0(\sample_position.Accumulated_Frequency[4] ), .F0(\sample_position.n8 ), 
    .F1(\sample_position.n12_adj_1098 ));
  sample_position_SLICE_524 \sample_position.SLICE_524 ( .D1(Next_Sample), 
    .C1(\sample_position.n5985 ), .B1(\SM_Sample_Position[1] ), 
    .A1(\SM_Sample_Position[2] ), .D0(\SM_Sample_Position[0] ), .A0(reset_n_c), 
    .F0(\sample_position.n5985 ), .F1(\sample_position.n6330 ));
  sample_position_SLICE_526 \sample_position.SLICE_526 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[4] ), 
    .C1(\sample_position.n8_adj_1106 ), 
    .A1(\sample_position.Accumulated_Frequency[4] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .C0(\sample_position.n6_adj_1116 ), 
    .A0(\sample_position.Accumulated_Frequency[3] ), 
    .F0(\sample_position.n8_adj_1106 ), .F1(\sample_position.n10 ));
  sample_position_SLICE_528 \sample_position.SLICE_528 ( 
    .D1(\SM_Sample_Position[2] ), .C1(\sample_position.n4_adj_1117 ), 
    .B1(\SM_Sample_Position[1] ), .A1(reset_n_c), .D0(\SM_Sample_Position[0] ), 
    .B0(Next_Sample), .F0(\sample_position.n4_adj_1117 ), 
    .F1(\sample_position.n9842 ));
  sample_position_SLICE_530 \sample_position.SLICE_530 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[2] ), 
    .C1(\sample_position.n4_adj_1118 ), 
    .B1(\sample_position.Accumulated_Frequency[2] ), 
    .D0(\sample_position.Accumulated_Frequency[0] ), 
    .C0(\sample_position.Accumulated_Freq_Offset[0] ), 
    .B0(\sample_position.Accumulated_Frequency[1] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[1] ), 
    .F0(\sample_position.n4_adj_1118 ), .F1(\sample_position.n6_adj_1116 ));
  sample_position_SLICE_532 \sample_position.SLICE_532 ( .D1(reset_n_c), 
    .C1(\sample_position.n2_adj_1133 ), .B1(\SM_Sample_Position[2] ), 
    .A1(\SM_Sample_Position[0] ), .D0(Next_Sample), 
    .C0(\SM_Sample_Position[1] ), .F0(\sample_position.n2_adj_1133 ), 
    .F1(\sample_position.n6125 ));
  sample_output_SLICE_534 \sample_output.SLICE_534 ( .D1(reset_n_c), 
    .C1(n6_adj_1197), .B1(\SM_Sample_Output[2] ), .A1(n5), .D0(DAC_Send), 
    .B0(DAC_Ready), .F0(n6_adj_1197), .F1(n2981));
  sample_output_SLICE_536 \sample_output.SLICE_536 ( .D1(DAC_Ready), 
    .C1(\sample_output.n4 ), .B1(\SM_Sample_Output[1] ), 
    .A1(\SM_Sample_Output[0] ), .C0(reset_n_c), .A0(\SM_Sample_Output[2] ), 
    .F0(\sample_output.n4 ), .F1(n6071));
  sample_output_SLICE_537 \sample_output.SLICE_537 ( .D0(n2767), .C0(n6071), 
    .F0(\sample_output.n6550 ));
  sample_output_SLICE_538 \sample_output.SLICE_538 ( .D1(DAC_Ready), 
    .C1(n17_2), .B1(n24), .A1(reset_n_c), .D0(\SM_Sample_Output[1] ), 
    .C0(\SM_Sample_Output[2] ), .B0(\SM_Sample_Output[0] ), .F0(n17_2), 
    .F1(n6910));
  sample_output_dac_SLICE_540 \sample_output.dac.SLICE_540 ( 
    .DI1(\SM_DAC_Out[1].sig_079.FeedThruLUT ), .B1(\SM_DAC_Out[1] ), 
    .D0(\SM_DAC_Out[3] ), .C0(\SM_DAC_Out[1] ), .B0(\SM_DAC_Out[2] ), 
    .A0(\SM_DAC_Out[0] ), .CE(n2078), .LSR(\sample_output.dac.n7584 ), 
    .CLK(Main_Clock), .Q1(\SM_DAC_Out[2] ), .F0(\sample_output.dac.n22 ), 
    .F1(\SM_DAC_Out[1].sig_079.FeedThruLUT ));
  sample_output_dac_SLICE_541 \sample_output.dac.SLICE_541 ( 
    .D1(Clock_Counter), .C1(\sample_output.dac.n10275 ), 
    .B1(\sample_output.dac.n22 ), .A1(\sample_output.dac.n10261 ), 
    .C0(\sample_output.dac.Current_Bit[1] ), 
    .B0(\sample_output.dac.Current_Bit[2] ), 
    .A0(\sample_output.dac.Current_Bit[4] ), .F0(\sample_output.dac.n10275 ), 
    .F1(o_DAC_SCK_c));
  sample_output_dac_SLICE_542 \sample_output.dac.SLICE_542 ( 
    .D1(DAC_Send_adj_1196), .C1(\sample_output.dac.n10249 ), 
    .B1(\SM_DAC_Out[0] ), .A1(\sample_output.dac.n5907 ), .C0(\SM_DAC_Out[1] ), 
    .A0(\SM_DAC_Out[2] ), .F0(\sample_output.dac.n10249 ), 
    .F1(\sample_output.dac.n2946 ));
  sample_output_dac_SLICE_544 \sample_output.dac.SLICE_544 ( 
    .D1(\SM_DAC_Out[2] ), .C1(\sample_output.dac.n5907 ), .B1(\SM_DAC_Out[1] ), 
    .A1(\SM_DAC_Out[0] ), .D0(\SM_DAC_Out[3] ), .C0(reset_n_c), 
    .B0(Clock_Counter), .F0(\sample_output.dac.n5907 ), .F1(n2085));
  sample_output_dac_SLICE_546 \sample_output.dac.SLICE_546 ( .D1(n10255), 
    .C1(\sample_output.dac.n5496 ), .B1(reset_n_c), .A1(Clock_Counter), 
    .D0(\SM_DAC_Out[1] ), .C0(n2118), .B0(\SM_DAC_Out[0] ), 
    .A0(DAC_Send_adj_1196), .F0(\sample_output.dac.n5496 ), .F1(n2101));
  sample_output_dac_SLICE_547 \sample_output.dac.SLICE_547 ( .D1(n2101), 
    .A1(n2078), .C0(n2101), .B0(n2078), .F0(\sample_output.dac.n6538 ), 
    .F1(\sample_output.dac.n7584 ));
  sample_output_dac_SLICE_549 \sample_output.dac.SLICE_549 ( 
    .D1(\sample_output.dac.Current_Bit[3] ), .C1(\sample_output.dac.n6 ), 
    .B1(\sample_output.dac.Current_Bit[4] ), 
    .A1(\sample_output.dac.Current_Bit[1] ), 
    .D0(\sample_output.dac.Current_Bit[2] ), 
    .A0(\sample_output.dac.Current_Bit[0] ), .F0(\sample_output.dac.n6 ), 
    .F1(n2118));
  sample_output_dac_SLICE_550 \sample_output.dac.SLICE_550 ( 
    .DI1(\sample_output.n9836 ), .C1(\SM_Sample_Output[2] ), 
    .A1(\SM_Sample_Output[0] ), .C0(Clock_Counter), .B0(\SM_DAC_Out[0] ), 
    .A0(DAC_Send_adj_1196), .CE(n13_adj_1216), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(DAC_Send_adj_1196), .F0(n10593), 
    .F1(\sample_output.n9836 ));
  SLICE_551 SLICE_551( .D1(n10593), .C1(n7786), .B1(n10255), 
    .A1(\SM_DAC_Out[1] ), .C0(\SM_DAC_Out[0] ), .A0(n2118), .F0(n7786), 
    .F1(n9_adj_1193));
  sample_output_dac_SLICE_552 \sample_output.dac.SLICE_552 ( 
    .D1(\sample_output.dac.n15 ), .C1(\sample_output.dac.n5 ), .B1(reset_n_c), 
    .A1(\sample_output.dac.n2852 ), .D0(Clock_Counter), .C0(n2635), 
    .B0(\sample_output.dac.n24 ), .A0(\SM_DAC_Out[2] ), 
    .F0(\sample_output.dac.n5 ), .F1(\sample_output.dac.n6348 ));
  SLICE_555 SLICE_555( .D1(reset_n_c), .C1(n5492), .B1(n10255), 
    .A1(Clock_Counter), .D0(\SM_DAC_Out[0] ), .C0(DAC_Send_adj_1196), 
    .B0(\SM_DAC_Out[1] ), .A0(n2118), .F0(n5492), .F1(n2078));
  SLICE_556 SLICE_556( .D1(reset_n_c), .C1(n42_adj_1206), .B1(n4_adj_1208), 
    .A1(n38), .D0(n31), .C0(\SM_Top[1] ), .B0(Mult_Ready), .F0(n42_adj_1206), 
    .F1(n21_adj_1207));
  SLICE_557 SLICE_557( .C1(\SM_Top[3] ), .B1(\SM_Top[1] ), .A1(\SM_Top[0] ), 
    .D0(\SM_Top[0] ), .B0(\SM_Top[3] ), .F0(n4_adj_1208), .F1(n10259));
  SLICE_559 SLICE_559( .D1(n10285), .C1(n4_adj_1204), .B1(\Sample_Timer[5] ), 
    .A1(\Sample_Timer[9] ), .C0(n5892), .A0(\Sample_Timer[1] ), 
    .F0(n4_adj_1204), .F1(n31));
  SLICE_560 SLICE_560( .D1(\SM_Top[3] ), .C1(n7754), .B1(reset_n_c), 
    .A1(\SM_Top[2] ), .D0(n31), .B0(\SM_Top[0] ), .A0(\SM_Top[1] ), .F0(n7754), 
    .F1(n6597));
  SLICE_562 SLICE_562( .D1(\SM_Top[1] ), .C1(n10231), .B1(\SM_Top[3] ), 
    .A1(\SM_Top[2] ), .D0(\SM_Top[0] ), .B0(Sample_Ready), .F0(n10231), 
    .F1(n38));
  SLICE_564 SLICE_564( .D1(reset_n_c), .C1(n1_2), .B1(n10247), 
    .A1(\SM_Top[0] ), .C0(\Harmonic[0] ), .B0(Sample_Ready), .A0(\SM_Top[2] ), 
    .F0(n1_2), .F1(n9800));
  SLICE_566 SLICE_566( .D1(\SM_Top[1] ), .C1(n9864), .B1(Sample_Ready), 
    .D0(\SM_Top[3] ), .C0(reset_n_c), .B0(\SM_Top[2] ), .A0(\SM_Top[0] ), 
    .F0(n9864), .F1(n6202));
  SLICE_568 SLICE_568( .D1(n10247), .C1(\SM_Top[0] ), .B1(n9938), 
    .A1(reset_n_c), .D0(\SM_Top[3] ), .B0(\SM_Top[1] ), .F0(n10247), 
    .F1(n6152));
  SLICE_570 SLICE_570( .D1(reset_n_c), .C1(n10237), 
    .B1(\SM_Sample_Position[2] ), .A1(Next_Sample), 
    .D0(\SM_Sample_Position[1] ), .B0(\SM_Sample_Position[0] ), .F0(n10237), 
    .F1(\sample_position.n6288 ));
  SLICE_572 SLICE_572( .D1(\SM_Top[3] ), .C1(n10223), .B1(\SM_Top[2] ), 
    .A1(n6202), .C0(\SM_Top[1] ), .A0(reset_n_c), .F0(n10223), .F1(n6204));
  SLICE_574 SLICE_574( .D1(n10245), .C1(n10235), .B1(reset_n_c), 
    .A1(\SM_Top[0] ), .D0(n31), .B0(\SM_Top[3] ), .F0(n10235), .F1(n9911));
  SLICE_575 SLICE_575( .D1(\SM_Top[3] ), .C1(n10245), .B1(\SM_Top[0] ), 
    .A1(reset_n_c), .C0(\SM_Top[2] ), .A0(\SM_Top[1] ), .F0(n10245), 
    .F1(n9910));
  SLICE_576 SLICE_576( .D1(reset_n_c), .C1(n9_adj_1201), .B1(\SM_Top[3] ), 
    .A1(\SM_Top[2] ), .D0(n31), .C0(\SM_Top[0] ), .A0(\SM_Top[1] ), 
    .F0(n9_adj_1201), .F1(n6833));
  SLICE_578 SLICE_578( .D1(reset_n_c), .C1(n16_adj_1205), .B1(n10259), 
    .A1(\SM_Top[2] ), .D0(n31), .C0(\SM_Top[1] ), .B0(\SM_Top[3] ), 
    .A0(\SM_Top[0] ), .F0(n16_adj_1205), .F1(n9656));
  SLICE_580 SLICE_580( .DI1(n9730), .D1(reset_n_c), .C1(\SM_Top[0] ), 
    .B1(n6152), .A1(\Adder_Start[0] ), .D0(n10235), .C0(n10245), 
    .B0(\SM_Top[0] ), .A0(reset_n_c), .CLK(Main_Clock), .Q1(\Adder_Start[0] ), 
    .F0(n10291), .F1(n9730));
  SLICE_582 SLICE_582( .C1(n15), .A1(reset_n_c), .D0(\SM_Top[0] ), 
    .C0(\SM_Top[2] ), .B0(\SM_Top[1] ), .A0(\SM_Top[3] ), .F0(n15), .F1(n6353));
  SLICE_584 SLICE_584( .C1(n15_adj_1162), .B1(reset_n_c), 
    .D0(\SM_Sample_Output[0] ), .C0(\SM_Sample_Output[1] ), 
    .B0(\SM_Sample_Output[2] ), .A0(DAC_Ready), .F0(n15_adj_1162), 
    .F1(n13_adj_1216));
  SLICE_587 SLICE_587( .D1(\Sample_Timer[11] ), .C1(n15_adj_1189), 
    .B1(n14_adj_1190), .A1(\Sample_Timer[14] ), .D0(\Sample_Timer[10] ), 
    .C0(\Sample_Timer[12] ), .B0(\Sample_Timer[4] ), .A0(\Sample_Timer[13] ), 
    .F0(n15_adj_1189), .F1(n5892));
  SLICE_588 SLICE_588( .D1(\Sample_Timer[1] ), .C1(n9_adj_1200), .B1(n5892), 
    .A1(n14_adj_1202), .C0(\Sample_Timer[6] ), .A0(\Sample_Timer[8] ), 
    .F0(n9_adj_1200), .F1(debug_c));
  SLICE_589 SLICE_589( .D1(\Sample_Timer[8] ), .C1(\Sample_Timer[7] ), 
    .B1(\Sample_Timer[3] ), .A1(\Sample_Timer[6] ), .D0(\Sample_Timer[5] ), 
    .C0(\Sample_Timer[3] ), .B0(\Sample_Timer[7] ), .A0(\Sample_Timer[9] ), 
    .F0(n14_adj_1202), .F1(n10285));
  mult_SLICE_590 \mult.SLICE_590 ( .D1(\mult.n10 ), .C1(\mult.n14 ), 
    .B1(\Comb_Interval[0] ), .A1(\Comb_Interval[6] ), .D0(\Comb_Interval[1] ), 
    .C0(\Comb_Interval[3] ), .B0(\Comb_Interval[5] ), .A0(\Comb_Interval[7] ), 
    .F0(\mult.n14 ), .F1(\mult.n15 ));
  mult_SLICE_591 \mult.SLICE_591 ( .D1(\mult.Comb_Counter[4] ), 
    .C1(\mult.Comb_Counter[2] ), .B1(\Comb_Interval[2] ), 
    .A1(\Comb_Interval[4] ), .B0(\Comb_Interval[4] ), .A0(\Comb_Interval[2] ), 
    .F0(\mult.n10 ), .F1(\mult.n10_adj_1087 ));
  mult_SLICE_592 \mult.SLICE_592 ( .D1(\mult.n10_adj_1087 ), .C1(\mult.n9 ), 
    .B1(\mult.n12 ), .A1(\mult.n11 ), .D0(\Comb_Interval[0] ), 
    .C0(\mult.Comb_Counter[6] ), .B0(\mult.Comb_Counter[0] ), 
    .A0(\Comb_Interval[6] ), .F0(\mult.n9 ), .F1(\mult.n9555 ));
  mult_SLICE_593 \mult.SLICE_593 ( .DI1(\adc.Data_State.sig_173.FeedThruLUT ), 
    .C1(\adc.Data_State ), .D0(\Comb_Interval[1] ), .C0(\Comb_Interval[7] ), 
    .B0(\mult.Comb_Counter[7] ), .A0(\mult.Comb_Counter[1] ), .CE(\adc.n6038 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\ADC_Data[2][6] ), .F0(\mult.n12 ), 
    .F1(\adc.Data_State.sig_173.FeedThruLUT ));
  adc_SLICE_594 \adc.SLICE_594 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n8 ), 
    .B1(\adc.n5932 ), .A1(\adc.n12 ), .C0(\adc.Receive_Bit[1] ), 
    .B0(\adc.Receive_Bit[2] ), .F0(\adc.n8 ), .F1(\adc.n6047 ));
  adc_SLICE_596 \adc.SLICE_596 ( .D1(\adc.n8 ), .C1(\adc.n5932 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.n12_adj_1078 ), 
    .D0(\adc.n12_adj_1078 ), .C0(\adc.Receive_Bit[0] ), .B0(\adc.n5932 ), 
    .A0(\adc.n8 ), .F0(\adc.n6016 ), .F1(\adc.n6000 ));
  adc_SLICE_597 \adc.SLICE_597 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n5932 ), 
    .B1(\adc.Receive_Bit[1] ), .A1(\adc.Receive_Bit[2] ), .C0(CS_Stable), 
    .A0(SM_ADC_In), .F0(\adc.n5932 ), .F1(\adc.n6026 ));
  adc_SLICE_598 \adc.SLICE_598 ( .C0(\adc.n6026 ), .B0(\adc.n12_adj_1079 ), 
    .F0(\adc.n6030 ));
  adc_SLICE_599 \adc.SLICE_599 ( .D1(\adc.n9 ), .C1(\adc.n12_adj_1079 ), 
    .B1(CS_Stable), .A1(SM_ADC_In), .D0(\adc.Receive_Bit[3] ), 
    .C0(\adc.Receive_Byte[1]_2 ), .B0(\Receive_Byte[0] ), 
    .A0(\adc.Receive_Byte[2]_2 ), .F0(\adc.n12_adj_1079 ), .F1(\adc.n5927 ));
  adc_SLICE_600 \adc.SLICE_600 ( .D1(\adc.n5932 ), .C1(\adc.n8_adj_1080 ), 
    .B1(\adc.n12 ), .A1(\adc.Receive_Bit[0] ), .C0(\adc.Receive_Bit[2] ), 
    .A0(\adc.Receive_Bit[1] ), .F0(\adc.n8_adj_1080 ), .F1(\adc.n6048 ));
  adc_SLICE_602 \adc.SLICE_602 ( .D1(\adc.Receive_Byte[2]_2 ), .C1(\adc.n10 ), 
    .B1(\adc.Receive_Byte[1]_2 ), .A1(\adc.n6026 ), .D0(\adc.Receive_Bit[3] ), 
    .B0(\Receive_Byte[0] ), .F0(\adc.n10 ), .F1(\adc.n9550 ));
  adc_SLICE_604 \adc.SLICE_604 ( .D1(\adc.n5932 ), .C1(\adc.n12_adj_1078 ), 
    .B1(\adc.n8_adj_1080 ), .A1(\adc.Receive_Bit[0] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n8_adj_1080 ), .B0(\adc.n12_adj_1078 ), 
    .A0(\adc.n5932 ), .F0(\adc.n6015 ), .F1(\adc.n6014 ));
  adc_SLICE_605 \adc.SLICE_605 ( .DI1(n6794), .D1(\Receive_Byte[0] ), 
    .C1(n6588), .A1(n6299), .D0(\adc.Receive_Bit[3] ), 
    .C0(\adc.Receive_Byte[2]_2 ), .B0(\adc.Receive_Byte[1]_2 ), 
    .A0(\Receive_Byte[0] ), .CLK(\adc.Clock_Stable ), .Q1(\Receive_Byte[0] ), 
    .F0(\adc.n12_adj_1078 ), .F1(n6794));
  adc_SLICE_606 \adc.SLICE_606 ( .C1(\adc.n12_adj_1081 ), .A1(\adc.n6026 ), 
    .D0(\adc.Receive_Bit[3] ), .C0(\Receive_Byte[0] ), 
    .B0(\adc.Receive_Byte[1]_2 ), .A0(\adc.Receive_Byte[2]_2 ), 
    .F0(\adc.n12_adj_1081 ), .F1(\adc.n6028 ));
  adc_SLICE_608 \adc.SLICE_608 ( .D1(\adc.CS_State_N_586 ), 
    .C1(\adc.CS_Stable_N_596 ), .B1(\adc.Clock_State ), .A1(i_ADC_Clock_c), 
    .C0(\adc.Data_State ), .A0(i_ADC_Data_c), .F0(\adc.CS_Stable_N_596 ), 
    .F1(\adc.n6598 ));
  adc_SLICE_610 \adc.SLICE_610 ( .D1(\adc.n7597 ), .C1(\adc.n12_adj_1082 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.n5932 ), .D0(\adc.n5932 ), 
    .C0(\adc.n7597 ), .B0(\adc.n12_adj_1082 ), .A0(\adc.Receive_Bit[0] ), 
    .F0(\adc.n6024 ), .F1(\adc.n6025 ));
  adc_SLICE_611 \adc.SLICE_611 ( .D1(\adc.n12_adj_1078 ), .C1(\adc.n7597 ), 
    .B1(\adc.n5932 ), .A1(\adc.Receive_Bit[0] ), .D0(\adc.Receive_Bit[2] ), 
    .A0(\adc.Receive_Bit[1] ), .F0(\adc.n7597 ), .F1(\adc.n6018 ));
  adc_SLICE_612 \adc.SLICE_612 ( .DI1(\adc.n377[1] ), 
    .C1(\adc.Receive_Byte[1]_2 ), .A1(\Receive_Byte[0] ), 
    .D0(\adc.Receive_Byte[1]_2 ), .C0(\adc.Receive_Bit[3] ), 
    .B0(\adc.Receive_Byte[2]_2 ), .A0(\Receive_Byte[0] ), .CE(n6299), 
    .LSR(n6588), .CLK(\adc.Clock_Stable ), .Q1(\adc.Receive_Byte[1]_2 ), 
    .F0(\adc.n12_adj_1082 ), .F1(\adc.n377[1] ));
  adc_SLICE_613 \adc.SLICE_613 ( .D1(\adc.n5932 ), .C1(\adc.n8 ), 
    .B1(\adc.n12_adj_1082 ), .A1(\adc.Receive_Bit[0] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n5932 ), .B0(\adc.n8 ), 
    .A0(\adc.n12_adj_1082 ), .F0(\adc.n6001 ), .F1(\adc.n6023 ));
  adc_SLICE_614 \adc.SLICE_614 ( .D1(SM_ADC_In), .C1(\adc.n9 ), 
    .B1(\adc.n12_adj_1078 ), .A1(CS_Stable), .D0(\adc.Receive_Bit[1] ), 
    .B0(\adc.Receive_Bit[0] ), .A0(\adc.Receive_Bit[2] ), .F0(\adc.n9 ), 
    .F1(\adc.n4663 ));
  adc_SLICE_616 \adc.SLICE_616 ( .C1(\adc.n12 ), .A1(\adc.n6026 ), 
    .D0(\Receive_Byte[0] ), .C0(\adc.Receive_Byte[2]_2 ), 
    .B0(\adc.Receive_Bit[3] ), .A0(\adc.Receive_Byte[1]_2 ), .F0(\adc.n12 ), 
    .F1(\adc.n6031 ));
  adc_SLICE_618 \adc.SLICE_618 ( .DI1(\adc.n370[3] ), 
    .D1(\adc.Receive_Bit[1] ), .C1(\adc.Receive_Bit[2] ), 
    .B1(\adc.Receive_Bit[3] ), .A1(\adc.Receive_Bit[0] ), .D0(\adc.n6026 ), 
    .C0(\Receive_Byte[0] ), .B0(\adc.Receive_Bit[3] ), .A0(\adc.n11 ), 
    .CE(\adc.n2963 ), .LSR(\adc.n6674 ), .CLK(\adc.Clock_Stable ), 
    .Q1(\adc.Receive_Bit[3] ), .F0(\adc.n9549 ), .F1(\adc.n370[3] ));
  adc_SLICE_619 \adc.SLICE_619 ( .DI1(\adc.n377[3] ), 
    .D1(\adc.Receive_Byte[3]_2 ), .C1(\adc.Receive_Byte[1]_2 ), 
    .B1(\Receive_Byte[0] ), .A1(\adc.Receive_Byte[2]_2 ), 
    .D0(\adc.Receive_Byte[2]_2 ), .B0(\adc.Receive_Byte[1]_2 ), .CE(n6299), 
    .LSR(n6588), .CLK(\adc.Clock_Stable ), .Q1(\adc.Receive_Byte[3]_2 ), 
    .F0(\adc.n11 ), .F1(\adc.n377[3] ));
  adc_SLICE_621 \adc.SLICE_621 ( .D1(\adc.n5932 ), .C1(\adc.n8_adj_1083 ), 
    .B1(\adc.n12 ), .A1(\adc.Receive_Bit[0] ), .D0(\adc.Receive_Bit[2] ), 
    .A0(\adc.Receive_Bit[1] ), .F0(\adc.n8_adj_1083 ), .F1(\adc.n6050 ));
  adc_SLICE_622 \adc.SLICE_622 ( .D1(\adc.n12_adj_1084 ), 
    .C1(\adc.Receive_Bit[0] ), .B1(\adc.n5932 ), .A1(\adc.n8_adj_1083 ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n12_adj_1081 ), .B0(\adc.n8_adj_1083 ), 
    .A0(\adc.n5932 ), .F0(\adc.n6038 ), .F1(\adc.n6056 ));
  adc_SLICE_624 \adc.SLICE_624 ( .D1(\adc.n7 ), 
    .C1(\adc.o_Data_Received_N_577 ), .B1(SM_ADC_In), .A1(CS_Stable), 
    .D0(\adc.Receive_Bit[2] ), .C0(\adc.Receive_Bit[1] ), 
    .B0(\adc.Receive_Bit[0] ), .A0(\adc.Receive_Bit[3] ), 
    .F0(\adc.o_Data_Received_N_577 ), .F1(n6588));
  adc_SLICE_626 \adc.SLICE_626 ( .C1(\adc.n12_adj_1084 ), .A1(\adc.n6026 ), 
    .D0(\adc.Receive_Byte[1]_2 ), .C0(\adc.Receive_Bit[3] ), 
    .B0(\adc.Receive_Byte[2]_2 ), .A0(\Receive_Byte[0] ), 
    .F0(\adc.n12_adj_1084 ), .F1(\adc.n6032 ));
  adc_SLICE_627 \adc.SLICE_627 ( .D1(\adc.n12_adj_1081 ), .C1(\adc.n7597 ), 
    .B1(\adc.n5932 ), .A1(\adc.Receive_Bit[0] ), .D0(\adc.n7597 ), 
    .C0(\adc.n12_adj_1084 ), .B0(\adc.Receive_Bit[0] ), .A0(\adc.n5932 ), 
    .F0(\adc.n6052 ), .F1(\adc.n6034 ));
  adc_SLICE_628 \adc.SLICE_628 ( .D1(CS_Stable), .C1(\adc.n7 ), 
    .B1(\adc.o_Data_Received_N_577 ), .A1(SM_ADC_In), 
    .D0(\adc.Receive_Byte[1]_2 ), .C0(\adc.Receive_Byte[2]_2 ), 
    .B0(\adc.Receive_Byte[3]_2 ), .A0(\Receive_Byte[0] ), .F0(\adc.n7 ), 
    .F1(\adc.n6674 ));
  adc_SLICE_630 \adc.SLICE_630 ( .DI1(\adc.n377[2] ), 
    .C1(\adc.Receive_Byte[2]_2 ), .B1(\Receive_Byte[0] ), 
    .A1(\adc.Receive_Byte[1]_2 ), .D0(\adc.Receive_Byte[1]_2 ), 
    .C0(\adc.Receive_Bit[3] ), .B0(\adc.Receive_Byte[2]_2 ), 
    .A0(\Receive_Byte[0] ), .CE(n6299), .LSR(n6588), .CLK(\adc.Clock_Stable ), 
    .Q1(\adc.Receive_Byte[2]_2 ), .F0(\adc.n12_adj_1085 ), .F1(\adc.n377[2] ));
  adc_SLICE_631 \adc.SLICE_631 ( .D1(\adc.n12 ), .C1(\adc.n8 ), 
    .B1(\adc.n5932 ), .A1(\adc.Receive_Bit[0] ), .D0(\adc.Receive_Bit[0] ), 
    .C0(\adc.n12_adj_1085 ), .B0(\adc.n8 ), .A0(\adc.n5932 ), .F0(\adc.n5999 ), 
    .F1(\adc.n6003 ));
  adc_SLICE_632 \adc.SLICE_632 ( .C1(\adc.n10265 ), .A1(reset_n_c), 
    .D0(\adc.Count_Stable[1] ), .C0(\adc.n6598 ), .B0(\adc.Count_Stable[2] ), 
    .A0(\adc.Count_Stable[0] ), .F0(\adc.n10265 ), .F1(\adc.n10229 ));
  SLICE_634 SLICE_634( .DI1(n6788), .D1(n2078), .C1(\SM_DAC_Out[3] ), 
    .B1(n2085), .A1(n2101), .D0(\SM_DAC_Out[3] ), .C0(\SM_DAC_Out[1] ), 
    .B0(\SM_DAC_Out[0] ), .A0(\SM_DAC_Out[2] ), .CLK(Main_Clock), 
    .Q1(\SM_DAC_Out[3] ), .F0(n10_adj_1195), .F1(n6788));
  sample_position_SLICE_636 \sample_position.SLICE_636 ( 
    .D1(\SM_Sample_Position[0] ), .C1(\SM_Sample_Position[2] ), .B1(reset_n_c), 
    .A1(\SM_Sample_Position[1] ), .D0(\SM_Sample_Position[1] ), .C0(reset_n_c), 
    .B0(\SM_Sample_Position[2] ), .A0(\SM_Sample_Position[0] ), 
    .F0(\sample_position.n6569 ), .F1(\sample_position.n6587 ));
  SLICE_638 SLICE_638( .D1(\SM_Sample_Position[0] ), .C1(reset_n_c), 
    .B1(\SM_Sample_Position[1] ), .A1(\SM_Sample_Position[2] ), 
    .D0(\SM_Sample_Position[2] ), .C0(\SM_Sample_Position[0] ), .B0(reset_n_c), 
    .A0(\SM_Sample_Position[1] ), .F0(n7_adj_1210), .F1(n6824));
  mult_SLICE_640 \mult.SLICE_640 ( .D1(\mult.SM_Scale_Mult[1] ), 
    .C1(Reset_Mult_Scaler), .B1(Start_Mult_Scaler), .A1(\SM_Scale_Mult[0] ), 
    .D0(Reset_Mult_Scaler), .C0(Start_Mult_Scaler), .B0(\SM_Scale_Mult[0] ), 
    .A0(\mult.SM_Scale_Mult[1] ), .F0(\mult.n6258 ), .F1(\mult.n6121 ));
  adc_SLICE_642 \adc.SLICE_642 ( .D1(\adc.n12_adj_1081 ), 
    .C1(\adc.Receive_Bit[0] ), .B1(\adc.n5932 ), .A1(\adc.n8_adj_1080 ), 
    .D0(\adc.n8_adj_1080 ), .C0(\adc.n5932 ), .B0(\adc.Receive_Bit[0] ), 
    .A0(\adc.n12_adj_1081 ), .F0(\adc.n6037 ), .F1(\adc.n6036 ));
  adc_SLICE_644 \adc.SLICE_644 ( .D1(\adc.n5932 ), .C1(\adc.n8 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.n12_adj_1081 ), .D0(\adc.n8 ), 
    .C0(\adc.n5932 ), .B0(\adc.n12_adj_1081 ), .A0(\adc.Receive_Bit[0] ), 
    .F0(\adc.n6035 ), .F1(\adc.n6002 ));
  adc_SLICE_646 \adc.SLICE_646 ( .D1(\adc.n12_adj_1079 ), 
    .C1(\adc.n8_adj_1080 ), .B1(\adc.Receive_Bit[0] ), .A1(\adc.n5932 ), 
    .D0(\adc.n5932 ), .C0(\adc.Receive_Bit[0] ), .B0(\adc.n8_adj_1080 ), 
    .A0(\adc.n12_adj_1079 ), .F0(\adc.n6043 ), .F1(\adc.n6042 ));
  adc_SLICE_648 \adc.SLICE_648 ( .D1(\adc.n12_adj_1082 ), 
    .C1(\adc.n8_adj_1080 ), .B1(\adc.n5932 ), .A1(\adc.Receive_Bit[0] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n5932 ), .B0(\adc.n8_adj_1080 ), 
    .A0(\adc.n12_adj_1082 ), .F0(\adc.n6022 ), .F1(\adc.n6021 ));
  adc_SLICE_650 \adc.SLICE_650 ( .D1(\adc.Receive_Bit[0] ), .C1(\adc.n5932 ), 
    .B1(\adc.n12_adj_1079 ), .A1(\adc.n8 ), .D0(\adc.n8 ), 
    .C0(\adc.Receive_Bit[0] ), .B0(\adc.n5932 ), .A0(\adc.n12_adj_1079 ), 
    .F0(\adc.n6041 ), .F1(\adc.n5998 ));
  adc_SLICE_653 \adc.SLICE_653 ( .D1(\adc.n8_adj_1083 ), 
    .C1(\adc.Receive_Bit[0] ), .B1(\adc.n5932 ), .A1(\adc.n12_adj_1078 ), 
    .D0(\adc.n12_adj_1078 ), .C0(\adc.Receive_Bit[0] ), .B0(\adc.n7597 ), 
    .A0(\adc.n5932 ), .F0(\adc.n6017 ), .F1(\adc.n6013 ));
  adc_SLICE_654 \adc.SLICE_654 ( .D1(\adc.Receive_Bit[0] ), 
    .C1(\adc.n8_adj_1080 ), .B1(\adc.n5932 ), .A1(\adc.n12_adj_1085 ), 
    .D0(\adc.n12_adj_1085 ), .C0(\adc.Receive_Bit[0] ), .B0(\adc.n8_adj_1080 ), 
    .A0(\adc.n5932 ), .F0(\adc.n6010 ), .F1(\adc.n6009 ));
  adc_SLICE_656 \adc.SLICE_656 ( .D1(\adc.n5932 ), .C1(\adc.n12_adj_1085 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.n7597 ), .D0(\adc.n12_adj_1085 ), 
    .C0(\adc.Receive_Bit[0] ), .B0(\adc.n7597 ), .A0(\adc.n5932 ), 
    .F0(\adc.n6007 ), .F1(\adc.n6008 ));
  adc_SLICE_658 \adc.SLICE_658 ( .D1(\adc.n5932 ), .C1(\adc.n12_adj_1084 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.n8_adj_1080 ), .D0(\adc.n8_adj_1080 ), 
    .C0(\adc.Receive_Bit[0] ), .B0(\adc.n12_adj_1084 ), .A0(\adc.n5932 ), 
    .F0(\adc.n6055 ), .F1(\adc.n6054 ));
  adc_SLICE_660 \adc.SLICE_660 ( .D1(\adc.n12_adj_1084 ), 
    .C1(\adc.Receive_Bit[0] ), .B1(\adc.n5932 ), .A1(\adc.n8 ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n5932 ), .B0(\adc.n8 ), 
    .A0(\adc.n12_adj_1084 ), .F0(\adc.n6004 ), .F1(\adc.n6053 ));
  sample_position_SLICE_662 \sample_position.SLICE_662 ( 
    .D1(\SM_Sample_Position[0] ), .B1(\SM_Sample_Position[1] ), .A1(reset_n_c), 
    .D0(reset_n_c), .C0(\SM_Sample_Position[0] ), .A0(\SM_Sample_Position[1] ), 
    .F0(\sample_position.n6257 ), .F1(\sample_position.n5888 ));
  SLICE_663 SLICE_663( .DI1(\SM_Sample_Position[0].sig_042.FeedThruLUT ), 
    .C1(\SM_Sample_Position[0] ), .D0(\SM_Sample_Position[1] ), 
    .C0(\SM_Sample_Position[2] ), .B0(\SM_Sample_Position[0] ), .A0(reset_n_c), 
    .CE(\sample_position.n6288 ), .LSR(\sample_position.n9842 ), 
    .CLK(Main_Clock), .Q1(\SM_Sample_Position[2] ), .F0(n6849), 
    .F1(\SM_Sample_Position[0].sig_042.FeedThruLUT ));
  SLICE_666 SLICE_666( .DI1(\SM_Top_3__N_121[0] ), .D1(\SM_Top[2] ), 
    .C1(n9_adj_1171), .B1(\SM_Top[1] ), .A1(\SM_Top[3] ), .D0(Comb_Muted), 
    .C0(\SM_Top[0] ), .B0(n303), .CE(n9877), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(\SM_Top[0] ), .F0(n9_adj_1171), 
    .F1(\SM_Top_3__N_121[0] ));
  SLICE_667 SLICE_667( .DI1(\mult.SM_Scale_Mult[1].sig_142.FeedThruLUT ), 
    .D1(\mult.SM_Scale_Mult[1] ), .D0(n303), .C0(Comb_Muted), .A0(\SM_Top[0] ), 
    .CE(\mult.n6121 ), .LSR(Reset_Mult_Scaler), .CLK(Main_Clock), 
    .Q1(Comb_Muted), .F0(n9), .F1(\mult.SM_Scale_Mult[1].sig_142.FeedThruLUT ));
  SLICE_669 SLICE_669( .DI1(\SM_Top_3__N_121[3] ), .D1(\SM_Top[1] ), 
    .C1(\SM_Top[0] ), .B1(Comb_Muted), .A1(\SM_Top[3] ), .D0(\SM_Top[0] ), 
    .C0(\SM_Top[1] ), .B0(\SM_Top[3] ), .CE(n21_adj_1207), .LSR(reset_n_N_191), 
    .CLK(Main_Clock), .Q1(\SM_Top[3] ), .F0(n9_adj_1191), 
    .F1(\SM_Top_3__N_121[3] ));
  adc_SLICE_671 \adc.SLICE_671 ( .D1(\adc.n8_adj_1080 ), .C1(\adc.n12 ), 
    .B1(\adc.n5932 ), .A1(\adc.Receive_Bit[0] ), .D0(\adc.n7597 ), 
    .C0(\adc.Receive_Bit[0] ), .B0(\adc.n12 ), .A0(\adc.n5932 ), 
    .F0(\adc.n6046 ), .F1(\adc.n6049 ));
  adc_SLICE_675 \adc.SLICE_675 ( .D1(\adc.n12_adj_1079 ), .C1(\adc.n5932 ), 
    .B1(\adc.Receive_Bit[0] ), .A1(\adc.n8_adj_1083 ), .D0(\adc.n5932 ), 
    .C0(\adc.n12_adj_1079 ), .B0(\adc.Receive_Bit[0] ), .A0(\adc.n7597 ), 
    .F0(\adc.n6040 ), .F1(\adc.n6044 ));
  adc_SLICE_678 \adc.SLICE_678 ( .D1(\adc.Receive_Bit[0] ), 
    .C1(\adc.n8_adj_1083 ), .B1(\adc.n12_adj_1085 ), .A1(\adc.n5932 ), 
    .D0(\adc.n12_adj_1082 ), .C0(\adc.n5932 ), .B0(\adc.n8_adj_1083 ), 
    .A0(\adc.Receive_Bit[0] ), .F0(\adc.n6020 ), .F1(\adc.n6011 ));
  adc_SLICE_680 \adc.SLICE_680 ( .D1(CS_Stable), .D0(SM_ADC_In), .C0(\adc.n9 ), 
    .B0(\adc.n12_adj_1082 ), .A0(CS_Stable), .F0(\adc.n5925 ), 
    .F1(\adc.n2963 ));
  adc_SLICE_681 \adc.SLICE_681 ( .D1(\adc.n9 ), .C1(\adc.n12_adj_1085 ), 
    .B1(SM_ADC_In), .A1(CS_Stable), .D0(\adc.n9 ), .C0(SM_ADC_In), 
    .B0(CS_Stable), .A0(\adc.n12_adj_1084 ), .F0(\adc.n5924 ), 
    .F1(\adc.n5926 ));
  adc_SLICE_685 \adc.SLICE_685 ( .D1(\adc.n12_adj_1081 ), .C1(CS_Stable), 
    .B1(\adc.n9 ), .A1(SM_ADC_In), .D0(\adc.n12 ), .C0(CS_Stable), 
    .B0(SM_ADC_In), .A0(\adc.n9 ), .F0(\adc.n5928 ), .F1(\adc.n5923 ));
  SLICE_688 SLICE_688( .D0(\Sample_Timer[2] ), .C0(\Sample_Timer[15] ), 
    .B0(\Sample_Timer[0] ), .F0(n14_adj_1190));
  sample_output_SLICE_690 \sample_output.SLICE_690 ( 
    .DI1(\sample_output.n9816 ), .D1(\SM_Sample_Output[1] ), 
    .A1(\SM_Sample_Output[0] ), .D0(DAC_Ready), .C0(\SM_Sample_Output[1] ), 
    .B0(\SM_Sample_Output[0] ), .A0(\SM_Sample_Output[2] ), .CE(n6910), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(\SM_Sample_Output[2] ), 
    .F0(n2767), .F1(\sample_output.n9816 ));
  sample_output_SLICE_691 \sample_output.SLICE_691 ( 
    .DI1(\SM_Sample_Output[0].sig_047.FeedThruLUT ), 
    .C1(\SM_Sample_Output[0] ), .C0(\SM_Sample_Output[1] ), 
    .B0(\SM_Sample_Output[0] ), .CE(n6071), .LSR(\sample_output.n6550 ), 
    .CLK(Main_Clock), .Q1(\sample_output.Output_Data[16] ), .F0(n5), 
    .F1(\SM_Sample_Output[0].sig_047.FeedThruLUT ));
  SLICE_693 SLICE_693( .D1(\Harmonic[7] ), .C1(\Harmonic[6] ), 
    .B1(\Harmonic[4] ), .A1(\Harmonic[5] ), .D0(\Harmonic[1] ), 
    .C0(\Harmonic[4] ), .B0(\Harmonic[2] ), .A0(\Harmonic[3] ), .F0(n4), 
    .F1(\sample_position.n10277 ));
  adc_SLICE_694 \adc.SLICE_694 ( .D0(\adc.CS_State ), .B0(\adc.i_ADC_CS_c ), 
    .F0(\adc.CS_State_N_586 ));
  adc_SLICE_695 \adc.SLICE_695 ( .D1(\SM_DAC_Out[2] ), .C1(reset_n_c), 
    .B1(\sample_output.dac.n9882 ), .A1(DAC_Send_adj_1196), .B0(reset_n_c), 
    .A0(\adc.n6598 ), .F0(\adc.n6737 ), .F1(\sample_output.dac.n6165 ));
  sample_output_dac_SLICE_696 \sample_output.dac.SLICE_696 ( 
    .C0(\sample_output.dac.n24 ), .A0(Clock_Counter), .F0(n9915));
  sample_output_dac_SLICE_697 \sample_output.dac.SLICE_697 ( .DI1(\n2085$n0 ), 
    .D1(\SM_DAC_Out[0] ), .C1(\SM_DAC_Out[1] ), .B1(\sample_output.dac.n5907 ), 
    .A1(\SM_DAC_Out[2] ), .D0(\SM_DAC_Out[2] ), .C0(\SM_DAC_Out[0] ), 
    .B0(\SM_DAC_Out[1] ), .A0(\SM_DAC_Out[3] ), .CE(n2078), 
    .LSR(\sample_output.dac.n6538 ), .CLK(Main_Clock), .Q1(\SM_DAC_Out[0] ), 
    .F0(\sample_output.dac.n2852 ), .F1(\n2085$n0 ));
  SLICE_698 SLICE_698( .F0(VCC_net));
  SLICE_699 SLICE_699( .DI1(\SM_Top_3__N_121[2] ), .D1(n9_adj_1199), 
    .C1(n6_adj_1198), .B1(\SM_Top[3] ), .A1(\SM_Top[0] ), .D0(Comb_Muted), 
    .C0(Mult_Ready), .B0(\SM_Top[2] ), .A0(\SM_Top[1] ), .CE(n6204), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(\SM_Top[2] ), .F0(n6_adj_1198), 
    .F1(\SM_Top_3__N_121[2] ));
  sample_position_SLICE_700 \sample_position.SLICE_700 ( .D1(Next_Sample), 
    .B1(\Freq_Scale[4] ), .D0(Next_Sample), .A0(\Freq_Scale[0] ), 
    .F0(\sample_position.n2221[0] ), .F1(\sample_position.n2221[4] ));
  sample_position_SLICE_701 \sample_position.SLICE_701 ( 
    .B1(\sample_position.Accumulated_Freq_Offset[6] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[3] ), 
    .F0(\sample_position.n1[3] ), .F1(\sample_position.n1[6] ));
  sample_position_SLICE_702 \sample_position.SLICE_702 ( 
    .A1(\sample_position.Accumulated_Freq_Offset[11] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[4] ), 
    .F0(\sample_position.n1[4] ), .F1(\sample_position.n1[11] ));
  sample_position_SLICE_703 \sample_position.SLICE_703 ( 
    .B0(\sample_position.Accumulated_Freq_Offset[15] ), 
    .F0(\sample_position.n1[15] ));
  sample_position_SLICE_704 \sample_position.SLICE_704 ( 
    .D1(\sample_position.Accumulated_Offset[9] ), .C1(\SM_Sample_Position[2] ), 
    .B1(\Frequency[9] ), .D0(\SM_Sample_Position[2] ), .C0(\Frequency[13] ), 
    .B0(\sample_position.Accumulated_Offset[13] ), 
    .F0(\sample_position.n8572 ), .F1(\sample_position.n8580 ));
  sample_position_SLICE_705 \sample_position.SLICE_705 ( .D1(\Frequency[8] ), 
    .C1(\sample_position.Accumulated_Offset[8] ), .A1(\SM_Sample_Position[2] ), 
    .D0(\SM_Sample_Position[2] ), 
    .B0(\sample_position.Accumulated_Offset[14] ), .A0(\Frequency[14] ), 
    .F0(\sample_position.n8570 ), .F1(\sample_position.n8582 ));
  sample_position_SLICE_706 \sample_position.SLICE_706 ( 
    .C1(\sample_position.Accumulated_Frequency[3] ), 
    .B1(\sample_position.n7_adj_1095 ), 
    .B0(\sample_position.Accumulated_Frequency[14] ), 
    .A0(\sample_position.n7_adj_1095 ), .F0(\sample_position.n8571 ), 
    .F1(\sample_position.n8593 ));
  sample_position_SLICE_707 \sample_position.SLICE_707 ( 
    .C1(\sample_position.Accumulated_Offset[15] ), .B1(\Frequency[15] ), 
    .A1(\SM_Sample_Position[2] ), .D0(\Frequency[11] ), 
    .B0(\SM_Sample_Position[2] ), 
    .A0(\sample_position.Accumulated_Offset[11] ), 
    .F0(\sample_position.n8576 ), .F1(\sample_position.n8568 ));
  sample_position_SLICE_708 \sample_position.SLICE_708 ( 
    .D1(\sample_position.n7_adj_1095 ), 
    .A1(\sample_position.Accumulated_Frequency[7] ), 
    .D0(\sample_position.Accumulated_Frequency[11] ), 
    .A0(\sample_position.n7_adj_1095 ), .F0(\sample_position.n8577 ), 
    .F1(\sample_position.n8585 ));
  sample_position_SLICE_709 \sample_position.SLICE_709 ( 
    .D0(\SM_Sample_Position[2] ), .B0(\Frequency[12] ), 
    .A0(\sample_position.Accumulated_Offset[12] ), 
    .F0(\sample_position.n8574 ));
  sample_position_SLICE_710 \sample_position.SLICE_710 ( 
    .D1(\sample_position.n7_adj_1095 ), 
    .B1(\sample_position.Accumulated_Frequency[10] ), 
    .C0(\sample_position.n7_adj_1095 ), 
    .A0(\sample_position.Accumulated_Frequency[12] ), 
    .F0(\sample_position.n8575 ), .F1(\sample_position.n8579 ));
  sample_position_SLICE_713 \sample_position.SLICE_713 ( 
    .C1(\SM_Sample_Position[2] ), .B1(\sample_position.Accumulated_Offset[1] ), 
    .A1(\Frequency[1] ), .D0(\SM_Sample_Position[2] ), .C0(\Frequency[10] ), 
    .A0(\sample_position.Accumulated_Offset[10] ), 
    .F0(\sample_position.n8578 ), .F1(\sample_position.n8596 ));
  sample_position_SLICE_715 \sample_position.SLICE_715 ( .D1(\Frequency[3] ), 
    .C1(\SM_Sample_Position[2] ), .B1(\sample_position.Accumulated_Offset[3] ), 
    .D0(\SM_Sample_Position[2] ), .B0(\sample_position.Accumulated_Offset[7] ), 
    .A0(\Frequency[7] ), .F0(\sample_position.n8584 ), 
    .F1(\sample_position.n8592 ));
  sample_position_SLICE_718 \sample_position.SLICE_718 ( 
    .C1(\sample_position.n7_adj_1095 ), 
    .B1(\sample_position.Accumulated_Frequency[2] ), 
    .D0(\sample_position.n7_adj_1095 ), 
    .B0(\sample_position.Accumulated_Frequency[8] ), 
    .F0(\sample_position.n8583 ), .F1(\sample_position.n8595 ));
  sample_position_SLICE_720 \sample_position.SLICE_720 ( .D1(\Frequency[2] ), 
    .C1(\SM_Sample_Position[2] ), .A1(\sample_position.Accumulated_Offset[2] ), 
    .D0(\SM_Sample_Position[2] ), .C0(\Frequency[5] ), 
    .A0(\sample_position.Accumulated_Offset[5] ), .F0(\sample_position.n8588 ), 
    .F1(\sample_position.n8594 ));
  sample_position_SLICE_721 \sample_position.SLICE_721 ( 
    .D1(\sample_position.Accumulated_Frequency[15] ), 
    .B1(\sample_position.n7_adj_1095 ), 
    .C0(\sample_position.Accumulated_Frequency[5] ), 
    .A0(\sample_position.n7_adj_1095 ), .F0(\sample_position.n8589 ), 
    .F1(\sample_position.n8569 ));
  sample_position_SLICE_722 \sample_position.SLICE_722 ( 
    .C1(\SM_Sample_Position[2] ), .B1(\sample_position.Accumulated_Offset[0] ), 
    .A1(\Frequency[0] ), .D0(\SM_Sample_Position[2] ), 
    .B0(\sample_position.Accumulated_Offset[6] ), .A0(\Frequency[6] ), 
    .F0(\sample_position.n8586 ), .F1(\sample_position.n8598 ));
  sample_position_SLICE_723 \sample_position.SLICE_723 ( 
    .D1(\sample_position.n7_adj_1095 ), 
    .C1(\sample_position.Accumulated_Frequency[4] ), 
    .C0(\sample_position.Accumulated_Frequency[6] ), 
    .A0(\sample_position.n7_adj_1095 ), .F0(\sample_position.n8587 ), 
    .F1(\sample_position.n8591 ));
  sample_position_SLICE_725 \sample_position.SLICE_725 ( .D1(Next_Sample), 
    .A1(\Freq_Scale[1] ), .D0(Next_Sample), .A0(\Freq_Scale[5] ), 
    .F0(\sample_position.n2221[5] ), .F1(\sample_position.n2221[1] ));
  sample_position_SLICE_726 \sample_position.SLICE_726 ( .D1(Next_Sample), 
    .B1(\Freq_Scale[3] ), .D0(Next_Sample), .B0(\Freq_Scale[6] ), 
    .F0(\sample_position.n2221[6] ), .F1(\sample_position.n2221[3] ));
  sample_position_SLICE_730 \sample_position.SLICE_730 ( .B1(Next_Sample), 
    .A1(\Freq_Scale[14] ), .D0(Next_Sample), .A0(\Freq_Scale[2] ), 
    .F0(\sample_position.n2221[2] ), .F1(\sample_position.n2221[14] ));
  sample_position_SLICE_733 \sample_position.SLICE_733 ( 
    .DI1(\SM_Sample_Position[2].sig_031.FeedThruLUT ), 
    .A1(\SM_Sample_Position[2] ), .D0(\Frequency[4] ), 
    .B0(\SM_Sample_Position[2] ), .A0(\sample_position.Accumulated_Offset[4] ), 
    .CE(n9630), .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(Freq_Too_High), 
    .F0(\sample_position.n8590 ), 
    .F1(\SM_Sample_Position[2].sig_031.FeedThruLUT ));
  sample_position_SLICE_735 \sample_position.SLICE_735 ( .D1(Next_Sample), 
    .A1(\Freq_Scale[13] ), .D0(\Freq_Scale[15] ), .A0(Next_Sample), 
    .F0(\sample_position.n2221[15] ), .F1(\sample_position.n2221[13] ));
  sample_position_SLICE_736 \sample_position.SLICE_736 ( 
    .A1(\sample_position.Accumulated_Freq_Offset[5] ), 
    .A0(\sample_position.Accumulated_Freq_Offset[13] ), 
    .F0(\sample_position.n1[13] ), .F1(\sample_position.n1[5] ));
  sample_position_SLICE_737 \sample_position.SLICE_737 ( 
    .D1(\sample_position.Accumulated_Freq_Offset[10] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[14] ), 
    .F0(\sample_position.n1[14] ), .F1(\sample_position.n1[10] ));
  sample_position_SLICE_741 \sample_position.SLICE_741 ( 
    .B0(\sample_position.Accumulated_Freq_Offset[12] ), 
    .F0(\sample_position.n1[12] ));
  sample_position_SLICE_746 \sample_position.SLICE_746 ( 
    .A1(\sample_position.Accumulated_Freq_Offset[7] ), 
    .D0(\sample_position.Accumulated_Freq_Offset[9] ), 
    .F0(\sample_position.n1[9] ), .F1(\sample_position.n1[7] ));
  sample_position_SLICE_748 \sample_position.SLICE_748 ( 
    .DI1(\adc.Data_State.sig_191.FeedThruLUT ), .D1(\adc.Data_State ), 
    .A0(\sample_position.Accumulated_Freq_Offset[1] ), .CE(\adc.n6013 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\ADC_Data[0][14] ), 
    .F0(\sample_position.n1[1] ), .F1(\adc.Data_State.sig_191.FeedThruLUT ));
  sample_position_SLICE_751 \sample_position.SLICE_751 ( 
    .D0(\sample_position.Accumulated_Freq_Offset[2] ), 
    .F0(\sample_position.n1[2] ));
  sample_position_SLICE_753 \sample_position.SLICE_753 ( 
    .DI1(\adc.Data_State.sig_187.FeedThruLUT ), .D1(\adc.Data_State ), 
    .D0(\sample_position.Accumulated_Freq_Offset[8] ), .CE(\adc.n6025 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\ADC_Data[0][0] ), 
    .F0(\sample_position.n1[8] ), .F1(\adc.Data_State.sig_187.FeedThruLUT ));
  sample_position_SLICE_756 \sample_position.SLICE_756 ( 
    .DI1(\sample_position.n87_adj_1160[0].sig_206.FeedThruLUT ), 
    .B1(\sample_position.n87_adj_1160[0] ), 
    .B0(\sample_position.Accumulated_Freq_Offset[0] ), 
    .CE(\sample_position.n5888 ), .LSR(\sample_position.n7_adj_1095 ), 
    .CLK(Main_Clock), .Q1(\sample_position.Accumulated_Freq_Offset[0] ), 
    .F0(\sample_position.n1[0] ), 
    .F1(\sample_position.n87_adj_1160[0].sig_206.FeedThruLUT ));
  sample_position_SLICE_758 \sample_position.SLICE_758 ( .D1(\Freq_Scale[12] ), 
    .B1(Next_Sample), .C0(\Freq_Scale[11] ), .A0(Next_Sample), 
    .F0(\sample_position.n2221[11] ), .F1(\sample_position.n2221[12] ));
  sample_position_SLICE_760 \sample_position.SLICE_760 ( .D1(Next_Sample), 
    .C1(\Freq_Scale[8] ), .C0(\Freq_Scale[9] ), .A0(Next_Sample), 
    .F0(\sample_position.n2221[9] ), .F1(\sample_position.n2221[8] ));
  sample_position_SLICE_761 \sample_position.SLICE_761 ( .C1(\Freq_Scale[7] ), 
    .B1(Next_Sample), .C0(Next_Sample), .B0(\Freq_Scale[10] ), 
    .F0(\sample_position.n2221[10] ), .F1(\sample_position.n2221[7] ));
  sample_position_SLICE_766 \sample_position.SLICE_766 ( 
    .D1(\SM_Adder_adj_1218[0] ), .B1(reset_n_c), .D0(\SM_Sample_Position[1] ), 
    .C0(reset_n_c), .F0(\sample_position.n6_adj_1159 ), .F1(n2976));

    sample_position_sp_ram_lscc_ram_dq_inst_inst0_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_SLICE_767
     
    \sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.SLICE_767 
    ( .DI1(\sample_position.n3 ), .D1(\SM_Sample_Position[0] ), 
    .C1(\SM_Sample_Position[1] ), .A0(\sample_position.Sample_Pos_WE ), 
    .CE(n7_adj_1210), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(\sample_position.Sample_Pos_WE ), 
    .F0(\sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.wr_en_i_N_372 )
    , .F1(\sample_position.n3 ));
  sample_output_dac_SLICE_770 \sample_output.dac.SLICE_770 ( .B1(reset_n_c), 
    .C0(\SM_Adder[0] ), .A0(reset_n_c), .F0(n2971), .F1(reset_n_N_191));
  sample_output_dac_SLICE_771 \sample_output.dac.SLICE_771 ( 
    .DI1(\sample_output.dac.n25[4] ), .D1(\sample_output.dac.Current_Bit[2] ), 
    .C1(\sample_output.dac.n8637 ), .B1(\sample_output.dac.Current_Bit[4] ), 
    .A1(\sample_output.dac.Current_Bit[3] ), 
    .C0(\sample_output.dac.Current_Bit[1] ), 
    .A0(\sample_output.dac.Current_Bit[0] ), .CE(\sample_output.dac.n6321 ), 
    .LSR(\sample_output.dac.n6602 ), .CLK(Main_Clock), 
    .Q1(\sample_output.dac.Current_Bit[4] ), .F0(\sample_output.dac.n8637 ), 
    .F1(\sample_output.dac.n25[4] ));
  sample_output_dac_SLICE_773 \sample_output.dac.SLICE_773 ( 
    .D1(\sample_output.dac.Current_Bit[0] ), 
    .B1(\sample_output.dac.r_Data_To_Send[15] ), 
    .A1(\sample_output.dac.r_Data_To_Send[14] ), 
    .C0(\sample_output.dac.Current_Bit[0] ), 
    .A0(\sample_output.dac.Current_Bit[3] ), .F0(\sample_output.dac.n10261 ), 
    .F1(\sample_output.dac.n10583 ));
  sample_output_dac_SLICE_774 \sample_output.dac.SLICE_774 ( 
    .D1(\sample_output.dac.Current_Bit[0] ), 
    .B1(\sample_output.dac.r_Data_To_Send[23] ), 
    .A1(\sample_output.dac.r_Data_To_Send[22] ), 
    .C0(\sample_output.dac.r_Data_To_Send[19] ), 
    .B0(\sample_output.dac.r_Data_To_Send[18] ), 
    .A0(\sample_output.dac.Current_Bit[0] ), .F0(\sample_output.dac.n10580 ), 
    .F1(\sample_output.dac.n10589 ));
  sample_output_dac_SLICE_779 \sample_output.dac.SLICE_779 ( 
    .C1(\sample_output.dac.Current_Bit[0] ), 
    .B1(\sample_output.dac.r_Data_To_Send[8] ), 
    .A1(\sample_output.dac.r_Data_To_Send[9] ), 
    .D0(\sample_output.dac.Current_Bit[0] ), 
    .C0(\sample_output.dac.r_Data_To_Send[11] ), 
    .A0(\sample_output.dac.r_Data_To_Send[10] ), 
    .F0(\sample_output.dac.n10586 ), .F1(\sample_output.dac.n10585 ));
  sample_output_dac_SLICE_784 \sample_output.dac.SLICE_784 ( 
    .DI1(\sample_output.dac.o_Ready_N_1072 ), .D1(\SM_DAC_Out[2] ), 
    .C1(\sample_output.dac.n5490 ), .B1(n2635), .A1(n9915), 
    .D0(\SM_DAC_Out[0] ), .B0(DAC_Send_adj_1196), 
    .CE(\sample_output.dac.n6165 ), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(DAC_Ready), .F0(\sample_output.dac.n5490 ), 
    .F1(\sample_output.dac.o_Ready_N_1072 ));
  SLICE_788 SLICE_788( .DI1(\SM_Top_3__N_121[1] ), .D1(n9), .C1(n7_adj_1163), 
    .B1(\SM_Top[3] ), .A1(\SM_Top[1] ), .D0(\SM_Top[0] ), .B0(\SM_Top[2] ), 
    .A0(\SM_Top[1] ), .CE(n9876), .LSR(reset_n_N_191), .CLK(Main_Clock), 
    .Q1(\SM_Top[1] ), .F0(n7_adj_1163), .F1(\SM_Top_3__N_121[1] ));
  SLICE_789 SLICE_789( .DI1(n9832), .D1(\SM_Scale_Mult[0] ), .C1(Mult_Ready), 
    .B1(Start_Mult_Scaler), .A1(o_Mult_Ready_N_783), .D0(Reset_Mult_Scaler), 
    .C0(\SM_Scale_Mult[0] ), .CLK(Main_Clock), .Q1(Mult_Ready), .F0(n6875), 
    .F1(n9832));
  SLICE_790 SLICE_790( .C1(\SM_Top[2] ), .B1(reset_n_c), .B0(\SM_Top[2] ), 
    .A0(reset_n_c), .F0(n10225), .F1(n4_adj_1192));
  SLICE_793 SLICE_793( .DI1(n6_adj_1170), .D1(\Adder_Start[0] ), 
    .C1(reset_n_c), .B1(\SM_Adder[0] ), .D0(reset_n_c), .C0(\Adder_Start[0] ), 
    .B0(Adder_Clear), .A0(\SM_Adder[0] ), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q1(\SM_Adder[0] ), .F0(n2942), .F1(n6_adj_1170));
  SLICE_794 SLICE_794( .DI1(\SM_Sample_Position[1].sig_043.FeedThruLUT ), 
    .C1(\SM_Sample_Position[1] ), .C0(\SM_Top[2] ), .B0(\Harmonic[0] ), 
    .A0(Sample_Ready), .CE(\sample_position.n6125 ), 
    .LSR(\sample_position.n9784 ), .CLK(Main_Clock), .Q1(Sample_Ready), 
    .F0(n9938), .F1(\SM_Sample_Position[1].sig_043.FeedThruLUT ));
  genadder_1__adder_SLICE_797 \genadder[1].adder.SLICE_797 ( 
    .DI1(\genadder[1].adder.n8[0] ), .D1(reset_n_c), 
    .C1(\SM_Adder_adj_1218[0] ), .A1(\Adder_Start[1] ), .D0(\Adder_Start[1] ), 
    .C0(Adder_Clear), .B0(\SM_Adder_adj_1218[0] ), .A0(reset_n_c), 
    .LSR(Adder_Clear), .CLK(Main_Clock), .Q1(\SM_Adder_adj_1218[0] ), 
    .F0(n2944), .F1(\genadder[1].adder.n8[0] ));
  mult_SLICE_798 \mult.SLICE_798 ( .DI1(\SM_Top[3].sig_104.FeedThruLUT ), 
    .B1(\SM_Top[3] ), .C0(\mult.SM_Scale_Mult[1] ), .A0(Reset_Mult_Scaler), 
    .CE(n9911), .CLK(Main_Clock), .Q1(Reset_Mult_Scaler), 
    .F0(o_Mult_Ready_N_783), .F1(\SM_Top[3].sig_104.FeedThruLUT ));
  mult_SLICE_800 \mult.SLICE_800 ( .DI1(\ADC_Data[1][8].sig_024.FeedThruLUT ), 
    .D1(\ADC_Data[1][8] ), .A0(\Harmonic_Scale[8] ), .CLK(ADC_Data_Received), 
    .Q1(\Harmonic_Scale[8] ), .F0(\mult.n1[8] ), 
    .F1(\ADC_Data[1][8].sig_024.FeedThruLUT ));
  mult_SLICE_801 \mult.SLICE_801 ( .B0(\Harmonic_Scale[6] ), .F0(\mult.n1[6] ));
  mult_SLICE_803 \mult.SLICE_803 ( .D0(\Comb_Interval[3] ), 
    .C0(\mult.Comb_Counter[5] ), .B0(\Comb_Interval[5] ), 
    .A0(\mult.Comb_Counter[3] ), .F0(\mult.n11 ));
  mult_SLICE_805 \mult.SLICE_805 ( .DI1(n6785), .D1(\SM_Top[3] ), 
    .C1(Start_Mult_Scaler), .B1(n4_adj_1192), .A1(n9_adj_1191), 
    .D0(Reset_Mult_Scaler), .C0(Start_Mult_Scaler), .B0(\SM_Scale_Mult[0] ), 
    .A0(\mult.SM_Scale_Mult[1] ), .CLK(Main_Clock), .Q1(Start_Mult_Scaler), 
    .F0(\mult.n6380 ), .F1(n6785));
  mult_SLICE_806 \mult.SLICE_806 ( .C0(\Harmonic_Scale[7] ), .F0(\mult.n1[7] ));
  mult_SLICE_807 \mult.SLICE_807 ( .DI1(\adc.Data_State.sig_177.FeedThruLUT ), 
    .B1(\adc.Data_State ), .B0(\Harmonic_Scale[4] ), .CE(\adc.n6002 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\ADC_Data[2][2] ), .F0(\mult.n1[4] ), 
    .F1(\adc.Data_State.sig_177.FeedThruLUT ));
  mult_SLICE_808 \mult.SLICE_808 ( .D1(\Harmonic_Scale[1] ), 
    .D0(\Harmonic_Scale[5] ), .F0(\mult.n1[5] ), .F1(\mult.n1[1] ));
  mult_SLICE_809 \mult.SLICE_809 ( .B0(\Harmonic_Scale[2] ), .F0(\mult.n1[2] ));
  mult_SLICE_810 \mult.SLICE_810 ( .D1(\Harmonic_Scale[0] ), 
    .C0(\Harmonic_Scale[3] ), .F0(\mult.n1[3] ), .F1(\mult.n1[0] ));
  adc_SLICE_813 \adc.SLICE_813 ( .DI1(\i_ADC_Clock_c.sig_161.FeedThruLUT ), 
    .A1(i_ADC_Clock_c), .D0(i_ADC_Clock_c), .B0(reset_n_c), 
    .A0(\adc.Clock_State ), .CE(\adc.n3663 ), .CLK(Main_Clock), 
    .Q1(\adc.Clock_State ), .F0(\adc.n3663 ), 
    .F1(\i_ADC_Clock_c.sig_161.FeedThruLUT ));
  adc_SLICE_814 \adc.SLICE_814 ( .DI1(n6753), .D1(ADC_Data_Received), 
    .C1(n7720), .B1(CS_Stable), .A1(SM_ADC_In), .D0(\adc.n7 ), 
    .B0(\adc.o_Data_Received_N_577 ), .CLK(\adc.Clock_Stable ), 
    .Q1(ADC_Data_Received), .F0(n7720), .F1(n6753));
  adc_SLICE_815 \adc.SLICE_815 ( .DI1(\adc.i_ADC_CS_c.sig_164.FeedThruLUT ), 
    .C1(\adc.i_ADC_CS_c ), .D0(\adc.CS_State ), .C0(reset_n_c), 
    .B0(\adc.i_ADC_CS_c ), .CE(\adc.n3659 ), .CLK(Main_Clock), 
    .Q1(\adc.CS_State ), .F0(\adc.n3659 ), 
    .F1(\adc.i_ADC_CS_c.sig_164.FeedThruLUT ));
  adc_SLICE_816 \adc.SLICE_816 ( .DI1(\i_ADC_Data_c.sig_163.FeedThruLUT ), 
    .C1(i_ADC_Data_c), .D0(i_ADC_Data_c), .C0(reset_n_c), 
    .A0(\adc.Data_State ), .CE(\adc.n3661 ), .CLK(Main_Clock), 
    .Q1(\adc.Data_State ), .F0(\adc.n3661 ), 
    .F1(\i_ADC_Data_c.sig_163.FeedThruLUT ));
  adc_SLICE_818 \adc.SLICE_818 ( .DI1(\adc.i_ADC_CS_c.sig_194.FeedThruLUT ), 
    .D1(\adc.i_ADC_CS_c ), .D0(SM_ADC_In), .C0(CS_Stable), .CE(\adc.n10229 ), 
    .LSR(reset_n_N_191), .CLK(Main_Clock), .Q1(CS_Stable), .F0(\adc.n7552 ), 
    .F1(\adc.i_ADC_CS_c.sig_194.FeedThruLUT ));
  adc_SLICE_820 \adc.SLICE_820 ( .DI1(\genadder[0].adder.n6633 ), 
    .B1(\genadder[0].adder.n167[18] ), .A1(reset_n_c), .D0(\adc.n10265 ), 
    .B0(reset_n_c), .CE(n2971), .LSR(Adder_Clear), .CLK(Main_Clock), 
    .Q1(\genadder[0].adder.Adder_Total[0][18] ), .F0(\adc.n9895 ), 
    .F1(\genadder[0].adder.n6633 ));
  adc_SLICE_822 \adc.SLICE_822 ( .DI1(\adc.n1 ), .D1(\adc.Receive_Bit[0] ), 
    .D0(\adc.Receive_Bit[0] ), .C0(\adc.n12_adj_1085 ), .B0(\adc.n5932 ), 
    .A0(\adc.n8 ), .CE(\adc.n2963 ), .LSR(\adc.n7552 ), 
    .CLK(\adc.Clock_Stable ), .Q1(\adc.Receive_Bit[0] ), .F0(\adc.n6006 ), 
    .F1(\adc.n1 ));
  adc_SLICE_823 \adc.SLICE_823 ( .DI1(\adc.n2 ), .D1(\adc.n7 ), 
    .C1(\adc.o_Data_Received_N_577 ), .A1(SM_ADC_In), .D0(SM_ADC_In), 
    .C0(CS_Stable), .B0(\adc.o_Data_Received_N_577 ), .LSR(CS_Stable), 
    .CLK(\adc.Clock_Stable ), .Q1(SM_ADC_In), .F0(n6299), .F1(\adc.n2 ));
  sample_position_SLICE_825 \sample_position.SLICE_825 ( 
    .DI1(\SM_Top[3].sig_105.FeedThruLUT ), .C1(\SM_Top[3] ), .D0(Next_Sample), 
    .C0(\SM_Sample_Position[2] ), .B0(reset_n_c), .A0(n10237), .CE(n9656), 
    .CLK(Main_Clock), .Q1(Next_Sample), .F0(\sample_position.n9784 ), 
    .F1(\SM_Top[3].sig_105.FeedThruLUT ));

    sample_position_sp_ram_lscc_ram_dq_inst_inst0_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR7(\Harmonic[7] ), .RADDR6(\Harmonic[6] ), .RADDR5(\Harmonic[5] ), 
    .RADDR4(\Harmonic[4] ), .RADDR3(\Harmonic[3] ), .RADDR2(\Harmonic[2] ), 
    .RADDR1(\Harmonic[1] ), .RADDR0(\Harmonic[0] ), .WADDR7(\Harmonic[7] ), 
    .WADDR6(\Harmonic[6] ), .WADDR5(\Harmonic[5] ), .WADDR4(\Harmonic[4] ), 
    .WADDR3(\Harmonic[3] ), .WADDR2(\Harmonic[2] ), .WADDR1(\Harmonic[1] ), 
    .WADDR0(\Harmonic[0] ), .WDATA15(\sample_position.Sample_Position[15] ), 
    .WDATA14(\sample_position.Sample_Position[14] ), 
    .WDATA13(\sample_position.Sample_Position[13] ), 
    .WDATA12(\sample_position.Sample_Position[12] ), 
    .WDATA11(\sample_position.Sample_Position[11] ), 
    .WDATA10(\sample_position.Sample_Position[10] ), 
    .WDATA9(\sample_position.Sample_Position[9] ), 
    .WDATA8(\sample_position.Sample_Position[8] ), 
    .WDATA7(\sample_position.Sample_Position[7] ), 
    .WDATA6(\sample_position.Sample_Position[6] ), 
    .WDATA5(\sample_position.Sample_Position[5] ), 
    .WDATA4(\sample_position.Sample_Position[4] ), 
    .WDATA3(\sample_position.Sample_Position[3] ), 
    .WDATA2(\sample_position.Sample_Position[2] ), 
    .WDATA1(\sample_position.Sample_Position[1] ), 
    .WDATA0(\sample_position.Sample_Position[0] ), .RCLKE(VCC_net), 
    .RCLK(Main_Clock), 
    .RE(\sample_position.sp_ram.lscc_ram_dq_inst.inst0.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.wr_en_i_N_372 )
    , .WCLKE(VCC_net), .WCLK(Main_Clock), .WE(\sample_position.Sample_Pos_WE ), 
    .RDATA15(\sample_position.Sample_Pos_Read[15] ), 
    .RDATA14(\sample_position.Sample_Pos_Read[14] ), 
    .RDATA13(\sample_position.Sample_Pos_Read[13] ), 
    .RDATA12(\sample_position.Sample_Pos_Read[12] ), 
    .RDATA11(\sample_position.Sample_Pos_Read[11] ), 
    .RDATA10(\sample_position.Sample_Pos_Read[10] ), 
    .RDATA9(\sample_position.Sample_Pos_Read[9] ), 
    .RDATA8(\sample_position.Sample_Pos_Read[8] ), 
    .RDATA7(\sample_position.Sample_Pos_Read[7] ), 
    .RDATA6(\sample_position.Sample_Pos_Read[6] ), 
    .RDATA5(\sample_position.Sample_Pos_Read[5] ), 
    .RDATA4(\sample_position.Sample_Pos_Read[4] ), 
    .RDATA3(\sample_position.Sample_Pos_Read[3] ), 
    .RDATA2(\sample_position.Sample_Pos_Read[2] ), 
    .RDATA1(\sample_position.Sample_Pos_Read[1] ), 
    .RDATA0(\sample_position.Sample_Pos_Read[0] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_7__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[7].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[15] ), .RDATA3(\Sample_Value[14] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_6__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[6].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[13] ), .RDATA3(\Sample_Value[12] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_5__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[5].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[11] ), .RDATA3(\Sample_Value[10] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_4__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[4].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[9] ), .RDATA3(\Sample_Value[8] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_3__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[3].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[7] ), .RDATA3(\Sample_Value[6] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_2__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[2].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[5] ), .RDATA3(\Sample_Value[4] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_1__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[1].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[3] ), .RDATA3(\Sample_Value[2] ));

    sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_iCE40UP_sp4k
     
    \sample_position.sin_lut.lscc_rom_inst.u_rom.PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0.iCE40UP.sp4k 
    ( .RADDR10(\sample_position.LUT_Pos[10] ), 
    .RADDR9(\sample_position.LUT_Pos[9] ), 
    .RADDR8(\sample_position.LUT_Pos[8] ), 
    .RADDR7(\sample_position.LUT_Pos[7] ), 
    .RADDR6(\sample_position.LUT_Pos[6] ), 
    .RADDR5(\sample_position.LUT_Pos[5] ), 
    .RADDR4(\sample_position.LUT_Pos[4] ), 
    .RADDR3(\sample_position.LUT_Pos[3] ), 
    .RADDR2(\sample_position.LUT_Pos[2] ), 
    .RADDR1(\sample_position.LUT_Pos[1] ), 
    .RADDR0(\sample_position.LUT_Pos[0] ), 
    .WADDR10(\sample_position.LUT_Pos[10] ), 
    .WADDR9(\sample_position.LUT_Pos[9] ), 
    .WADDR8(\sample_position.LUT_Pos[8] ), 
    .WADDR7(\sample_position.LUT_Pos[7] ), 
    .WADDR6(\sample_position.LUT_Pos[6] ), 
    .WADDR5(\sample_position.LUT_Pos[5] ), 
    .WADDR4(\sample_position.LUT_Pos[4] ), 
    .WADDR3(\sample_position.LUT_Pos[3] ), 
    .WADDR2(\sample_position.LUT_Pos[2] ), 
    .WADDR1(\sample_position.LUT_Pos[1] ), 
    .WADDR0(\sample_position.LUT_Pos[0] ), .RCLKE(VCC_net), .RCLK(Main_Clock), 
    .RE(VCC_net), .WCLKE(VCC_net), .WCLK(Main_Clock), 
    .RDATA11(\Sample_Value[1] ), .RDATA3(\Sample_Value[0] ));
  pll_48_lscc_pll_inst_u_PLL_B \pll_48.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(i_Clock_c), .FEEDBACK(\pll_48.lscc_pll_inst.feedback_w ), 
    .RESET_N(reset_n_c), .INTFBOUT(\pll_48.lscc_pll_inst.feedback_w ), 
    .OUTCORE(Main_Clock));
  reset_n reset_n_I( .PADDI(reset_n_c), .reset_n(reset_n));
  genadder_0__adder_mult_3 \genadder[0].adder.mult_3 ( .A15(\Adder_Mult[8] ), 
    .A14(\Adder_Mult[8] ), .A13(\Adder_Mult[8] ), .A12(\Adder_Mult[8] ), 
    .A11(\Adder_Mult[8] ), .A10(\Adder_Mult[8] ), .A9(\Adder_Mult[8] ), 
    .A8(\Adder_Mult[8] ), .A7(\Adder_Mult[7] ), .A6(\Adder_Mult[6] ), 
    .A5(\Adder_Mult[5] ), .A4(\Adder_Mult[4] ), .A3(\Adder_Mult[3] ), 
    .A2(\Adder_Mult[2] ), .A1(\Adder_Mult[1] ), .A0(\Adder_Mult[0] ), 
    .B15(\Sample_Value[15] ), .B14(\Sample_Value[14] ), 
    .B13(\Sample_Value[13] ), .B12(\Sample_Value[12] ), 
    .B11(\Sample_Value[11] ), .B10(\Sample_Value[10] ), .B9(\Sample_Value[9] ), 
    .B8(\Sample_Value[8] ), .B7(\Sample_Value[7] ), .B6(\Sample_Value[6] ), 
    .B5(\Sample_Value[5] ), .B4(\Sample_Value[4] ), .B3(\Sample_Value[3] ), 
    .B2(\Sample_Value[2] ), .B1(\Sample_Value[1] ), .B0(\Sample_Value[0] ), 
    .O24(n3), .O23(n4_adj_1164), .O22(n5_adj_1165), .O21(n6), 
    .O20(n7_adj_1166), .O19(n8_2), .O18(n9_adj_1167), .O17(n10), .O16(n11), 
    .O15(n12), .O14(n13), .O13(n14), .O12(n15_adj_1168), .O11(n16), 
    .O10(n17_adj_1169), .O9(n18));
  i_ADC_CS i_ADC_CS_I( .PADDI(\adc.i_ADC_CS_c ), .i_ADC_CS(i_ADC_CS));
  o_DAC_SCK o_DAC_SCK_I( .PADDO(o_DAC_SCK_c), .o_DAC_SCK(o_DAC_SCK));
  o_DAC_MOSI o_DAC_MOSI_I( .PADDO(o_DAC_MOSI_c), .o_DAC_MOSI(o_DAC_MOSI));
  test test_I( .PADDO(test_c), .test(test));
  debug debug_I( .PADDO(debug_c), .debug(debug));
  i_ADC_Clock i_ADC_Clock_I( .PADDI(i_ADC_Clock_c), .i_ADC_Clock(i_ADC_Clock));
  i_ADC_Data i_ADC_Data_I( .PADDI(i_ADC_Data_c), .i_ADC_Data(i_ADC_Data));
  i_Clock i_Clock_I( .PADDI(i_Clock_c), .i_Clock(i_Clock));
  o_DAC_CS o_DAC_CS_I( .PADDO(o_DAC_CS_c), .o_DAC_CS(o_DAC_CS));
endmodule

module sample_position_SLICE_0 ( input DI0, D1, D0, C0, B0, CE, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_17 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i15 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module sample_position_SLICE_1 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_15 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i13 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i14 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_2 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_13 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i11 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i12 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_3 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_4 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i13 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_5 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_11 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i9 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i10 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_6 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_7 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_9 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i7 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i8 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_8 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_9 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_10 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_7 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i5 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i6 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_11 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_12 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_5 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i3 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i4 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_13 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_14 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Sample_Position__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Sample_Position__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_15 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_3_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_position/Sample_Position__i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module sample_position_SLICE_16 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i15 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_17 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i13 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i14 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_18 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_3 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i1 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Frequency_855__i2 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_19 ( input DI1, D1, C1, B1, CE, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly;

  fa2 \sample_position/Accumulated_Frequency_855_add_4_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_position/Accumulated_Frequency_855__i0 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_20 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i11 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i12 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_21 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i9 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i10 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_22 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_position/add_535_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i7 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i8 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_23 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/add_535_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_24 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/add_535_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_25 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/add_535_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_26 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \sample_position/add_535_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_27 ( input D1, D0, C0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_17 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_28 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_15 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_29 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_13 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_30 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_11 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_31 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_9 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_32 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_7 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_33 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_5 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_34 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_3 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_35 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \sample_position/unary_minus_6_add_3_add_5_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_SLICE_36 ( input DI1, DI0, D1, C1, B1, D0, B0, CE, LSR, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1647_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_R__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_37 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1660_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_38 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1660_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_L__i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_39 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1660_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_L__i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_40 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1660_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_L__i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_41 ( input DI1, DI0, D1, C1, B1, D0, B0, CE, LSR, 
    CLK, CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1660_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_L__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_L__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_42 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1660_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_output/r_Sample_L__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_43 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1647_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_output/r_Sample_R__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_44 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1647_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_R__i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_45 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1647_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_46 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1647_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_R__i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_SLICE_47 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \sample_output/add_1647_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/r_Sample_R__i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \sample_output/r_Sample_R__i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_48 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_17( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i15( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_49 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_15( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i13( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i14( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_50 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_13( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i11( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i12( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_51 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i9( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i10( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_52 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_53 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_54 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 add_21_add_5_3( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_55 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 add_21_add_5_5( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_56 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 add_21_add_5_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_57 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 add_21_add_5_9( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_58 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_59 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sample_Timer_851__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_60 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 Sample_Timer_851_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Sample_Timer_851__i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_61 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 add_21_add_5_7( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_62 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_8_add_5_19 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_63 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_8_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_64 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_8_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_65 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_8_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_66 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_8_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_67 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_8_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_68 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_8_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_69 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_8_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_70 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[1].adder/add_8_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_1__adder_SLICE_71 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \genadder[1].adder/add_8_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_72 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_8_add_5_19 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_73 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_8_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_74 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_8_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_75 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_8_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_76 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_8_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_77 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_8_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_78 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_8_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_79 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_8_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_80 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \genadder[0].adder/add_8_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module genadder_0__adder_SLICE_81 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \genadder[0].adder/add_8_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_82 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1301_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_83 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1301_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_84 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1301_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_85 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mult/add_1301_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_86 ( input D1, C1, B1, D0, C0, B0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mult/add_1301_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_87 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mult/add_12_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_88 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \mult/add_12_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_89 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \mult/add_12_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_90 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \mult/add_12_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_91 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mult/add_12_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_92 ( input DI0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 test_I_99_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 test_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_93 ( input DI1, DI0, B1, A1, C0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40001 i5443_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 i5444_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Harmonic__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  ffsre2 Harmonic__i0( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_94 ( input DI1, DI0, B1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_94_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_94_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Harmonic_Scale_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_95 ( input DI1, DI0, B1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_95_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_95_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_97 ( input DI1, DI0, D1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_97_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_97_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_99 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 SLICE_99_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_99_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_101 ( input DI1, DI0, A1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 SLICE_101_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_101_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Frequency_i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_103 ( input DI1, DI0, C1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 SLICE_103_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_103_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i9( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input DI1, DI0, D1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_105_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_105_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i11( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i10( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_107 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 SLICE_107_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_107_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Frequency_i13( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i12( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_109 ( input DI1, DI0, B1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_109_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_109_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Frequency_i15( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Frequency_i14( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_112 ( input DI1, DI0, B1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_112_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_112_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Harmonic_Scale_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_114 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 SLICE_114_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_114_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Harmonic_Scale_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_116 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 SLICE_116_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_116_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Harmonic_Scale_i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Harmonic_Scale_i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_119 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 SLICE_119_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_119_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_121 ( input DI1, DI0, B1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_121_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_121_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_123 ( input DI1, DI0, B1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_123_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_123_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module sample_position_SLICE_124 ( input DI1, DI0, D1, B0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \sample_position.SLICE_124_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \sample_position.SLICE_124_K0 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_125 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40011 \sample_position/mux_23_Mux_1_i7_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \sample_position/i30_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_position/SM_Sample_Position__i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_position/SM_Sample_Position__i0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xF30C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xF20F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_128 ( input DI1, DI0, C1, B1, A1, D0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40013 \sample_position/mux_8_i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \sample_position/mux_8_i2_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xACAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xAACC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_129 ( input DI1, DI0, D1, C1, A1, D0, C0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40015 \sample_position/mux_8_i4_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \sample_position/mux_8_i3_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_131 ( input DI1, DI0, C1, B1, A1, D0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40017 \sample_position/mux_8_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \sample_position/mux_8_i5_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xEE44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_133 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40019 \sample_position/mux_8_i8_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \sample_position/mux_8_i7_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_134 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40010 \sample_position.SLICE_134_K0 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_position/LUT_Pos__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_135 ( input DI1, DI0, D1, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \sample_position.SLICE_135_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \sample_position.SLICE_135_K0 ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_137 ( input DI1, DI0, C1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 \sample_position.SLICE_137_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \sample_position.SLICE_137_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_139 ( input DI1, DI0, C1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 \sample_position.SLICE_139_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \sample_position.SLICE_139_K0 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_141 ( input DI1, DI0, B1, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 \sample_position.SLICE_141_K1 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \sample_position.SLICE_141_K0 ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_position/LUT_Pos__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/LUT_Pos__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_145 ( input DI1, DI0, C1, B1, A1, D0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40020 \sample_position/mux_8_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \sample_position/mux_8_i9_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xD8D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xDD88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_147 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40022 \sample_position/mux_8_i12_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \sample_position/mux_8_i11_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i11 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i10 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_149 ( input DI1, DI0, C1, B1, A1, D0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40020 \sample_position/mux_8_i14_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \sample_position/mux_8_i13_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i13 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i12 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_152 ( input DI1, DI0, C1, B1, A1, D0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40020 \sample_position/mux_8_i16_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \sample_position/mux_8_i15_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/Accumulated_Offset_i0_i15 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Offset_i0_i14 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_155 ( input DI1, DI0, D1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \sample_position.SLICE_155_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \sample_position.SLICE_155_K0 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i2 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i1 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_157 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \sample_position.SLICE_157_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \sample_position.SLICE_157_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i4 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i3 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_159 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \sample_position.SLICE_159_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \sample_position.SLICE_159_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i6 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i5 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_164 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 SLICE_164_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_164_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Comb_Interval_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_165 ( input DI1, DI0, B1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_165_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_165_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module sample_output_SLICE_167 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40025 \sample_output/mux_1332_i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40026 \sample_output/mux_1332_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xB888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xD888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_168 ( input DI1, DI0, D1, B1, D0, C0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40027 \sample_output/i15_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \sample_output/i5233_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \sample_output/SM_Sample_Output__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/SM_Sample_Output__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x00FD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_169 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40025 \sample_output/mux_1332_i15_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40029 \sample_output/mux_1332_i16_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data__i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xCAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_171 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40030 \sample_output/mux_1332_i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40031 \sample_output/mux_1332_i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i13 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xD888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xB888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_173 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40032 \sample_output/mux_1332_i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40033 \sample_output/mux_1332_i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xF808") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xF088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_175 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40030 \sample_output/mux_1332_i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40034 \sample_output/mux_1332_i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xAAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_177 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40030 \sample_output/mux_1332_i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40031 \sample_output/mux_1332_i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_179 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40030 \sample_output/mux_1332_i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40035 \sample_output/mux_1332_i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xE2C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_181 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40036 \sample_output/mux_1332_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40037 \sample_output/mux_1332_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xF808") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xF088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_185 ( input DI1, DI0, B1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 SLICE_185_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_185_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_R__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_R__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_187 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 SLICE_187_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_187_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_R__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_R__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_189 ( input DI1, DI0, C1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_189_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_189_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_R__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_R__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_193 ( input DI1, DI0, A1, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 SLICE_193_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_193_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_L__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_L__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_195 ( input DI1, DI0, A1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 SLICE_195_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_195_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \sample_output/r_Sample_L__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_L__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_197 ( input DI1, DI0, C1, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40009 SLICE_197_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_197_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/r_Sample_L__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/r_Sample_L__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_199 ( input DI0, D0, C0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40038 i4417_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_200 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40039 \sample_output/i4413_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40040 \sample_output/i4414_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/Output_Data__i21 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/Output_Data__i20 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFCB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xEEE4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_202 ( input DI1, DI0, A1, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40007 \sample_output.SLICE_202_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \sample_output.SLICE_202_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_dac_SLICE_203 ( input DI1, DI0, D1, B1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40041 \sample_output/dac/i6299_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \sample_output/dac/i6297_1_lut ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_output/dac/Current_Bit_854__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/dac/Current_Bit_854__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_205 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_205_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_205_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_207 ( input DI1, DI0, C1, C0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 \sample_output.SLICE_207_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \sample_output.SLICE_207_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_209 ( input DI1, DI0, B1, D0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \sample_output.SLICE_209_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \sample_output.SLICE_209_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_211 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 \sample_output.SLICE_211_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \sample_output.SLICE_211_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_213 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 \sample_output.SLICE_213_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \sample_output.SLICE_213_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_215 ( input DI1, DI0, C1, A0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 \sample_output.SLICE_215_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \sample_output.SLICE_215_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_217 ( input DI1, DI0, B1, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \sample_output.SLICE_217_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \sample_output.SLICE_217_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i19 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_219 ( input DI1, DI0, B1, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \sample_output.SLICE_219_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \sample_output.SLICE_219_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i21 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i20 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_SLICE_221 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 \sample_output.SLICE_221_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \sample_output.SLICE_221_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i23 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \sample_output/dac/r_Data_To_Send_i23_i22 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_output_dac_SLICE_227 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40043 \sample_output/dac/i6313_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40044 \sample_output/dac/i6306_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/dac/Current_Bit_854__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \sample_output/dac/Current_Bit_854__i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x78F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x5AF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_231 ( input DI1, DI0, D1, A1, D0, C0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 i4424_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 i1_4_lut_adj_504( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/Clock_Counter_c ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \sample_output/dac/SM_DAC_Out_i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xD0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_233 ( input DI0, B0, CE, LSR, CLK, output Q0, 
    F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40010 \sample_output.dac.i5264_2_lut$r1 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20047 \sample_output/dac/o_SPI_CS ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20047 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_236 ( input DI1, DI0, C1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 SLICE_236_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_236_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_237 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 SLICE_237_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_237_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i14( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i15( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_238 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40004 SLICE_238_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 DAC_Send_c( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_239 ( input DI1, DI0, C1, B1, D0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40048 i5401_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i5350_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Harmonic__i6( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  ffsre2 Harmonic__i7( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_241 ( input DI1, DI0, D1, B1, C0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40050 i5435_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 i5428_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Harmonic__i4( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  ffsre2 Harmonic__i5( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_243 ( input DI1, DI0, B1, A1, C0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40001 i5439_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i5436_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Harmonic__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  ffsre2 Harmonic__i3( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_247 ( input DI1, DI0, A1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 SLICE_247_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_247_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Freq_Scale_i12( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i13( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_249 ( input DI1, DI0, D1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_249_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_249_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i10( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i11( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_251 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_251_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_251_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 Freq_Scale_i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i9( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_253 ( input DI1, DI0, B1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_253_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_253_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_255 ( input DI1, DI0, B1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_255_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_255_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_257 ( input DI1, DI0, B1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 SLICE_257_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_257_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_259 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 SLICE_259_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_259_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Freq_Scale_i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Freq_Scale_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_260 ( input DI0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40004 SLICE_260_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Scale_Initial_i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_261 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 SLICE_261_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_261_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Scale_Initial_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Scale_Initial_i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_266 ( input DI1, DI0, C1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 SLICE_266_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_266_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 Comb_Interval_i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 Comb_Interval_i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_272 ( input DI0, C0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40052 i1_2_lut_adj_478( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Adder_Start__i1( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_273 ( input DI1, DI0, B1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 SLICE_273_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_273_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_275 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 SLICE_275_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_275_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_277 ( input DI1, DI0, A1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40007 SLICE_277_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_277_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i8 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_279 ( input DI1, DI0, A1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40007 SLICE_279_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_279_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i10 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_281 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_281_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_281_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i12 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_283 ( input DI1, DI0, A1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40007 SLICE_283_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_283_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i14 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i13 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_285 ( input DI1, DI0, B1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 SLICE_285_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_285_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i16 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i15 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_287 ( input DI1, DI0, C1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 SLICE_287_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_287_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i18 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i17 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_289 ( input DI1, DI0, A1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40007 SLICE_289_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_289_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i36 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i35 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_291 ( input DI1, DI0, B1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 SLICE_291_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_291_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i38 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i37 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_293 ( input DI1, DI0, A1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40007 SLICE_293_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 SLICE_293_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i40 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i39 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_295 ( input DI1, DI0, A1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40007 SLICE_295_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_295_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i42 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i41 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_297 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_297_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 SLICE_297_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i44 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i43 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_299 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_299_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_299_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i46 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i45 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_301 ( input DI1, DI0, C1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 SLICE_301_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_301_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i48 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i47 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_303 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_303_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_303_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \r_Adder_Total[0]__i50 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \r_Adder_Total[0]__i49 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_307 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40006 SLICE_307_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Adder_Clear_c( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_310 ( input DI1, DI0, C1, A1, B0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \genadder[1].adder/i5367_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \genadder[1].adder/i5368_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre20055 \genadder[1].adder/o_Accumulator__i16 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[1].adder/o_Accumulator__i17 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20055 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module genadder_1__adder_SLICE_313 ( input DI1, DI0, C1, B1, C0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40056 \genadder[1].adder/i5365_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \genadder[1].adder/i5366_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20055 \genadder[1].adder/o_Accumulator__i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[1].adder/o_Accumulator__i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_315 ( input DI1, DI0, D1, B1, C0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40050 \genadder[1].adder/i5363_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \genadder[1].adder/i5364_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20055 \genadder[1].adder/o_Accumulator__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[1].adder/o_Accumulator__i13 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_317 ( input DI1, DI0, C1, B1, B0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40056 \genadder[1].adder/i5361_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 \genadder[1].adder/i5362_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre20055 \genadder[1].adder/o_Accumulator__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[1].adder/o_Accumulator__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_319 ( input DI1, DI0, C1, B1, C0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40048 \genadder[1].adder/i5359_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \genadder[1].adder/i5360_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20055 \genadder[1].adder/o_Accumulator__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[1].adder/o_Accumulator__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_320 ( input DI1, DI0, C1, B1, B0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40048 \genadder[1].adder/i5351_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \genadder[1].adder/i5255_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre20055 \genadder[1].adder/o_Accumulator__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[1].adder/o_Accumulator__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_322 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40050 \genadder[1].adder/i5357_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \genadder[1].adder/i5358_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[1].adder/o_Accumulator__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[1].adder/o_Accumulator__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_324 ( input DI1, DI0, D1, A1, C0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40059 \genadder[1].adder/i5355_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 \genadder[1].adder/i5356_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20055 \genadder[1].adder/o_Accumulator__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[1].adder/o_Accumulator__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_326 ( input DI1, DI0, C1, A1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40061 \genadder[1].adder/i5353_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \genadder[1].adder/i5354_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[1].adder/o_Accumulator__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[1].adder/o_Accumulator__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_329 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i4416_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i4439_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i2 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_330 ( input DI1, DI0, D1, B1, A1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 i4437_3_lut( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 i4438_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_332 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i4435_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i4436_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_334 ( input DI1, DI0, D1, C1, B1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40022 i4433_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 i4434_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_336 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 i4431_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 i4432_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_338 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i4429_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 i4430_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_340 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i4427_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 i4428_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_342 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 i4425_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 i4426_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[1].adder/Working_Total__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[1].adder/Working_Total__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module genadder_1__adder_SLICE_345 ( input DI0, C0, A0, CE, LSR, CLK, output 
    Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40068 \genadder[1].adder/i5369_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20055 \genadder[1].adder/o_Accumulator__i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_348 ( input DI1, DI0, C1, B1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40048 \genadder[0].adder/i5295_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \genadder[0].adder/i5292_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[0].adder/o_Accumulator__i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_0__adder_SLICE_349 ( input DI1, DI0, C1, B1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40048 \genadder[0].adder/i5290_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \genadder[0].adder/i5291_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[0].adder/o_Accumulator__i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_0__adder_SLICE_350 ( input DI1, DI0, D1, A1, C0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40069 \genadder[0].adder/i5325_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \genadder[0].adder/i5222_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[0].adder/o_Accumulator__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_351 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 i4415_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 i4454_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i2 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_353 ( input DI1, DI0, C1, A1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \genadder[0].adder/i5323_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \genadder[0].adder/i5324_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[0].adder/o_Accumulator__i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_0__adder_SLICE_355 ( input DI1, DI0, D1, A1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40059 \genadder[0].adder/i5321_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \genadder[0].adder/i5322_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[0].adder/o_Accumulator__i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_357 ( input DI1, DI0, D1, B1, D0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40072 \genadder[0].adder/i5319_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40073 \genadder[0].adder/i5320_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[0].adder/o_Accumulator__i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_359 ( input DI1, DI0, C1, B1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40048 \genadder[0].adder/i5317_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \genadder[0].adder/i5318_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[0].adder/o_Accumulator__i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_361 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40074 i4452_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i4453_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_0__adder_SLICE_362 ( input DI1, DI0, C1, A1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \genadder[0].adder/i5310_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \genadder[0].adder/i5316_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[0].adder/o_Accumulator__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module genadder_0__adder_SLICE_365 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40075 \genadder[0].adder/i5301_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \genadder[0].adder/i5307_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20055 \genadder[0].adder/o_Accumulator__i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_367 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 i4450_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 i4451_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_369 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i4448_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 i4449_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_371 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i4446_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 i4447_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_373 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 i4444_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 i4445_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_375 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i4442_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 i4443_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_377 ( input DI1, DI0, D1, B1, A1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40076 i4440_3_lut( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 i4441_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \genadder[0].adder/Working_Total__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \genadder[0].adder/Working_Total__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xEE44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_383 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40077 \mult/o_Mult_8__I_0_i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40026 \mult/o_Mult_8__I_0_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xAAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_384 ( input DI1, DI0, C1, B1, C0, A0, CE, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40078 \mult/i5410_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \mult/i5442_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mult/Comb_Counter__i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/Comb_Counter__i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_385 ( input DI1, DI0, D1, C1, A1, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40080 \mult/mux_18_Mux_0_i1_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \mult/i5277_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \mult/SM_Scale_Mult__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/SM_Scale_Mult__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x0FAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xBBBB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_387 ( input DI1, DI0, C1, B1, C0, B0, CE, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40082 \mult/i5412_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \mult/i5411_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mult/Comb_Counter__i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/Comb_Counter__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_389 ( input DI1, DI0, B1, A1, D0, B0, CE, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40084 \mult/i5414_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \mult/i5413_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \mult/Comb_Counter__i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/Comb_Counter__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_391 ( input DI1, DI0, B1, A1, D0, C0, CE, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40084 \mult/i5447_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 \mult/i5415_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \mult/Comb_Counter__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \mult/Comb_Counter__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_393 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40087 \mult/o_Mult_8__I_0_i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40088 \mult/o_Mult_8__I_0_i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xE4A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_395 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40089 \mult/o_Mult_8__I_0_i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40088 \mult/o_Mult_8__I_0_i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xAAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_397 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40090 \mult/o_Mult_8__I_0_i8_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40091 \mult/o_Mult_8__I_0_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xEC20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xCAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_399 ( input DI0, D0, C0, B0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40026 \mult/o_Mult_8__I_0_i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \mult/o_Mult_i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_407 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_407_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i72 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_408 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_408_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i71 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_409 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_409_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i70 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_410 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_410_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i69 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_411 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_411_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i68 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_412 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_412_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i67 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_413 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_413_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i66 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_414 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_414_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i65 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_415 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_415_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i64 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_416 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_416_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i63 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_417 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_417_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i62 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_418 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_418_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i61 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_419 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_419_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i60 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_420 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_420_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i59 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_421 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_421_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i58 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_422 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_422_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i57 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_423 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_423_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i56 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_425 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_425_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i55 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_427 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_427_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i54 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_430 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 SLICE_430_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/Clock_Stable_c ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_431 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_431_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i53 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_432 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_432_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i52 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_433 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_433_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i51 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_434 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_434_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i50 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_435 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_435_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i49 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_436 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_436_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i41 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_437 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_437_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i40 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_438 ( input DI1, DI0, B1, C0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40092 \adc/i6275_1_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \adc/i6277_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \adc/Count_Stable_853__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \adc/Count_Stable_853__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0x5A5A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_439 ( input DI0, C0, B0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40094 \adc/i6284_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/Count_Stable_853__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0x6C6C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_441 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_441_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i38 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_442 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_442_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i37 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_443 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_443_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i36 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_445 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_445_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i34 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_446 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_446_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i33 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_447 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_447_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i25 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_448 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_448_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i24 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_449 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_449_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i23 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_450 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_450_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i22 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_451 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_451_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i21 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_453 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_453_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i20 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_454 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_454_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i19 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_456 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_456_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i18 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_457 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_457_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i17 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_459 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_459_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i16 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_462 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_462_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i14 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_463 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_463_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i13 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_464 ( input DI1, DI0, D1, C1, A1, D0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40095 \adc/i990_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \adc/i983_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \adc/Receive_Bit_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \adc/Receive_Bit_i0_i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x5AF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x55AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_468 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_468_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_469 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_469_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_470 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_470_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_471 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \adc.SLICE_471_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_472 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_472_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_473 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_473_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_474 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_474_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_475 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40006 \adc.SLICE_475_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_476 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40004 \adc.SLICE_476_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_477 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_477_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module adc_SLICE_478 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \adc.SLICE_478_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/r_Bytes_In[0]__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_480 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40097 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 i1_4_lut_adj_489( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0x3130") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xB0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_482 ( input D1, C1, B1, A1, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40099 \sample_output/dac/Current_Bit[1]_bdd_4_lut_114 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40100 \sample_output/dac/i7665_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xD8AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_483 ( input D1, C1, B1, A1, D0, C0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40101 \sample_output/dac/n11215_bdd_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40102 \sample_output/dac/i7656_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xDC98") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_484 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40103 \sample_output/dac/i1_3_lut_4_lut_adj_461 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40104 \sample_output/dac/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0x73FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x0102") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_485 ( input DI1, D1, B1, A1, C0, B0, A0, CE, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40105 \sample_output/dac/i2_3_lut_adj_465 ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 \sample_output/dac/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \sample_output/dac/o_SPI_Data ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x0088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xDFDF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_486 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40107 \sample_output/dac/Current_Bit_4__I_0_i15_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40108 \sample_output/dac/n11221_bdd_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xE4A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_487 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40109 \sample_output/dac/Current_Bit[1]_bdd_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40110 \sample_output/dac/i7659_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xEC64") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_488 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40111 \sample_output/dac/n11227_bdd_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40112 \sample_output/dac/Current_Bit[0]_bdd_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xE5E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xBBC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_490 ( input D1, C1, B1, A1, D0, C0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40113 \sample_output/dac/i2_3_lut_4_lut_adj_458 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40114 \sample_output/dac/i21_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0x0AF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_491 ( input D1, C1, B1, A1, D0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40115 \sample_output/dac/i4272_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40116 \sample_output/dac/i7426_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xFB00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_493 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40117 i1_3_lut_adj_503( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40118 \sample_output/dac/i1_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0xB333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0x0116") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_494 ( input D0, C0, B0, A0, output F0 );

  lut40119 \sample_output/dac/Current_Bit_4__I_0_i31_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0x7430") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_496 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40120 i2_4_lut_adj_485( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40121 i3_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xE0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0xFFDF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_498 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40122 i1_2_lut_4_lut_adj_482( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40123 i1_4_lut_adj_484( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xE0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0x20AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_500 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40124 i8154_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 i1_4_lut_adj_475( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xECCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_501 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40126 i1_4_lut_adj_487( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40127 i1_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_502 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40128 \sample_position/i7765_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40129 i2_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_504 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40130 \sample_position/i3_4_lut_adj_473 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40131 \sample_position/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0x5100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0xECFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_506 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40132 \sample_position/LessThan_5_i30_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40133 \sample_position/LessThan_5_i28_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_508 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40134 \sample_position/LessThan_5_i26_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40133 \sample_position/LessThan_5_i24_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_510 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40135 \sample_position/LessThan_5_i22_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40136 \sample_position/LessThan_5_i20_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0xB2B2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_512 ( input D1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40137 \sample_position/i6579_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \sample_position/i6544_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_513 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40138 \sample_position/i6568_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40139 \sample_position/i8194_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_514 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40140 i1_4_lut_adj_477( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40141 \sample_position/i945_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0x33F7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0xFECC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_516 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40142 \sample_position/LessThan_5_i18_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40133 \sample_position/LessThan_5_i16_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_518 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40143 \sample_position/i1_4_lut_adj_470 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40144 \sample_position/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0xEAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_519 ( input D1, C1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40145 \sample_position/i6565_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \sample_position/i2_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_520 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40132 \sample_position/LessThan_5_i14_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40133 \sample_position/LessThan_5_i12_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_523 ( input D1, C1, B1, A1, D0, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40146 \sample_position/i950_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40147 \sample_position/i3_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_524 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40148 \sample_position/i8031_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40149 \sample_position/i1_2_lut_2_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0x0705") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0xFF55") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_526 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40142 \sample_position/LessThan_5_i10_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40150 \sample_position/LessThan_5_i8_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_528 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40151 \sample_position/i1_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40085 \sample_position/i1_2_lut_adj_472 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0x7577") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_530 ( input D1, C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40132 \sample_position/LessThan_5_i6_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40152 \sample_position/LessThan_5_i4_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0x4D44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_532 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40153 \sample_position.i1_4_lut_adj_471 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40154 \sample_position/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0x51FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_534 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40155 i888_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \sample_output/i4_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0x10FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_536 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40156 \sample_output/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40157 \sample_output/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0xA020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_537 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40071 \sample_output/i4220_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_SLICE_538 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40158 i1_4_lut_4_lut_adj_480( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40159 \sample_output/i1_4_lut_4_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0xDDFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0x0330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_540 ( input DI1, B1, D0, C0, B0, A0, CE, LSR, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \sample_output.dac.SLICE_540_K1 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \sample_output/dac/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/dac/SM_DAC_Out_i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  LUT4 #("0x0102") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_541 ( input D1, C1, B1, A1, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40161 \sample_output/dac/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40162 \sample_output/dac/i7445_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  LUT4 #("0xCDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40162 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_542 ( input D1, C1, B1, A1, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40163 \sample_output/dac/i2_3_lut_4_lut_adj_460 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40164 \sample_output/dac/i7420_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40164 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_544 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40165 \sample_output/dac/i8125_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40166 \sample_output/dac/i1_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40165 ( input A, B, C, D, output Z );

  LUT4 #("0xEFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40166 ( input A, B, C, D, output Z );

  LUT4 #("0x00C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_546 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40167 \sample_output/dac/i2_3_lut_4_lut_adj_459 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40168 \sample_output/dac/i3171_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40167 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40168 ( input A, B, C, D, output Z );

  LUT4 #("0x3088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_547 ( input D1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40045 \sample_output/dac/i8085_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \sample_output/dac/i4208_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_dac_SLICE_549 ( input D1, C1, B1, A1, D0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40169 \sample_output/dac/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40073 \sample_output/dac/i1_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40169 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_550 ( input DI1, C1, A1, C0, B0, A0, CE, LSR, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40138 \sample_output/i1_2_lut_adj_469 ( .A(A1), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40170 \sample_output/dac/i7757_3_lut_4_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre2 \sample_output/DAC_Send_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_551 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40171 i1_4_lut_adj_505( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40172 \sample_output/dac/i5458_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  LUT4 #("0x1302") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40172 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_552 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40173 \sample_output.dac.i1_4_lut_adj_462 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40174 \sample_output/dac/i1_4_lut_adj_463 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  LUT4 #("0x7333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40174 ( input A, B, C, D, output Z );

  LUT4 #("0xC800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_555 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 i511_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i3167_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  LUT4 #("0x8AFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40176 ( input A, B, C, D, output Z );

  LUT4 #("0x0344") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_556 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40177 i8160_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i45_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40177 ( input A, B, C, D, output Z );

  LUT4 #("0x51FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40178 ( input A, B, C, D, output Z );

  LUT4 #("0xC0CF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_557 ( input C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40179 i7430_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40180 i1_2_lut_adj_481( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40180 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_559 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40181 i2_4_lut_adj_499( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40164 i1_2_lut_adj_500( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_560 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40182 i1_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40183 i5426_2_lut_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  LUT4 #("0x3733") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40183 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_562 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40184 i43_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40127 i7402_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  LUT4 #("0x998A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_564 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40185 i1_4_lut_adj_479( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40186 i1_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  LUT4 #("0x32FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40186 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_566 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40187 i2_3_lut_adj_486( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40188 i2_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40187 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40188 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_568 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40189 i1_4_lut_adj_496( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40127 i7418_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40189 ( input A, B, C, D, output Z );

  LUT4 #("0x54FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_570 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40190 \sample_position.i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40116 i7408_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  LUT4 #("0x3BFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_572 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40191 i1_2_lut_4_lut_adj_483( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 i7394_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  LUT4 #("0xAA8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_574 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40192 i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 i7406_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_575 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40193 i2_3_lut_4_lut_adj_491( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40164 i7416_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_576 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40194 i1_4_lut_4_lut_adj_488( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40195 i22_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  LUT4 #("0x40FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40195 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_578 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40196 i1_4_lut_adj_490( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40197 i32_4_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  LUT4 #("0x7200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40197 ( input A, B, C, D, output Z );

  LUT4 #("0x8387") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_580 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output Q1, 
    F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40198 i1_4_lut_adj_495( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40199 i8152_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 Adder_Start__i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  LUT4 #("0x2E00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40199 ( input A, B, C, D, output Z );

  LUT4 #("0x5557") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_582 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 i1_2_lut_adj_494( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40200 i28_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  LUT4 #("0x4201") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_584 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40201 i8171_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40202 i2_4_lut_adj_498( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  LUT4 #("0x3F3F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40202 ( input A, B, C, D, output Z );

  LUT4 #("0xDCE8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_587 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40203 i8_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40204 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40203 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40204 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_588 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40205 i8149_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40164 i1_2_lut_adj_501( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_589 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40206 i7455_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40207 i6_4_lut_adj_502( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40206 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40207 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_590 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40208 \mult/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40209 \mult/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40209 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_591 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40210 \mult/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40211 \mult/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40210 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40211 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_592 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40212 \mult/i7_4_lut_adj_456 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40213 \mult/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40212 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40213 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_593 ( input DI1, C1, D0, C0, B0, A0, CE, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40009 \mult.SLICE_593_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40214 \mult/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/r_Bytes_In[0]__i39 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_594 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40215 \adc/i8106_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40216 \adc/equal_785_i8_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40215 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40216 ( input A, B, C, D, output Z );

  LUT4 #("0xF3F3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_596 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40217 \adc/i7990_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40218 \adc/i7993_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40217 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40218 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_597 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40219 \adc/i1_2_lut_3_lut_4_lut_adj_454 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40220 \adc/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40219 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40220 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_598 ( input C0, B0, output F0 );
  wire   GNDI;

  lut40221 \adc/i8070_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40221 ( input A, B, C, D, output Z );

  LUT4 #("0x0303") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_599 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40222 \adc/i8094_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40223 \adc/equal_781_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40222 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40223 ( input A, B, C, D, output Z );

  LUT4 #("0xBFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_600 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40224 \adc/i8109_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40225 \adc/equal_790_i8_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40224 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40225 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_602 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40226 \adc/i8067_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40116 \adc/equal_820_i10_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40226 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_604 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40227 \adc/i7999_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40228 \adc/i7996_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40227 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40228 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_605 ( input DI1, D1, C1, A1, D0, C0, B0, A0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40229 i4464_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40230 \adc/equal_824_i12_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \adc/Receive_Byte_i0_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40229 ( input A, B, C, D, output Z );

  LUT4 #("0x050A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40230 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_606 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40231 \adc/i8043_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40232 \adc/equal_787_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40231 ( input A, B, C, D, output Z );

  LUT4 #("0x0505") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40232 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_608 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40233 \adc/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 \adc/i_SPI_Data_I_0_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40233 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_610 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40234 \adc/i8012_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40235 \adc/i7960_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40234 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40235 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_611 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40236 \adc/i7984_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40237 \adc/i5269_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40237 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_612 ( input DI1, C1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40238 \adc/i1012_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40239 \adc/equal_789_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \adc/Receive_Byte_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  LUT4 #("0x5A5A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40239 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_613 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40240 \adc/i7966_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40241 \adc/i7963_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40240 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40241 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_614 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40242 \adc/i8005_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40243 \adc/equal_809_i9_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40242 ( input A, B, C, D, output Z );

  LUT4 #("0x0155") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40243 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_616 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40231 \adc/i8097_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40244 \adc/equal_816_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_618 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40245 \adc/i997_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40246 \adc/i8040_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/Receive_Bit_i0_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40245 ( input A, B, C, D, output Z );

  LUT4 #("0x6CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40246 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_619 ( input DI1, D1, C1, B1, A1, D0, B0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40247 \adc/i1026_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40127 \adc/equal_788_i11_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/Receive_Byte_i0_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40247 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_621 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40224 \adc/i8115_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40248 \adc/equal_809_i8_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_622 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40249 \adc/i8143_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40250 \adc/i8061_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40249 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40250 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_624 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40251 \adc.i4259_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40252 \adc/i3_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40251 ( input A, B, C, D, output Z );

  LUT4 #("0x1151") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40252 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_626 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40231 \adc/i8121_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40253 \adc/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40253 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_627 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40254 \adc/i8046_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40255 \adc/i8128_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40254 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40255 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_628 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40256 \adc/i8163_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40257 \adc/i2_3_lut_4_lut_adj_453 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40256 ( input A, B, C, D, output Z );

  LUT4 #("0x00D5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40257 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_630 ( input DI1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40258 \adc/i1019_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40259 \adc/equal_788_i12_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \adc/Receive_Byte_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40258 ( input A, B, C, D, output Z );

  LUT4 #("0x7878") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40259 ( input A, B, C, D, output Z );

  LUT4 #("0xFFDF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_631 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40260 \adc/i8103_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40261 \adc/i8015_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40260 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40261 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_632 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40262 \adc/i8157_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40263 \adc/i7436_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40262 ( input A, B, C, D, output Z );

  LUT4 #("0x5F5F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40263 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_634 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output Q1, 
    F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40264 i4458_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40265 i23_3_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_output/dac/SM_DAC_Out_i3 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40264 ( input A, B, C, D, output Z );

  LUT4 #("0x11F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40265 ( input A, B, C, D, output Z );

  LUT4 #("0xAABA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_636 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40266 \sample_position.i4276_2_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40267 \sample_position/i4251_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40266 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40267 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_638 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40268 i8166_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40269 i8197_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40268 ( input A, B, C, D, output Z );

  LUT4 #("0x0F4F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40269 ( input A, B, C, D, output Z );

  LUT4 #("0x337F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_640 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40270 \mult/i1_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40271 \mult/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40270 ( input A, B, C, D, output Z );

  LUT4 #("0xFAF4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40271 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_642 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40272 \adc/i8055_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40218 \adc/i8058_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40272 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_644 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40273 \adc/i8049_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40274 \adc/i8052_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40273 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40274 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_646 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40275 \adc/i8082_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40276 \adc/i8088_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40275 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40276 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_648 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40277 \adc/i7972_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40278 \adc/i7969_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40277 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40278 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_650 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40279 \adc/i8076_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40280 \adc/i8079_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40279 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40280 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_653 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40281 \adc/i8002_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40282 \adc/i7987_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40281 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40282 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_654 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40283 \adc/i8025_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40284 \adc/i8028_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40283 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40284 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_656 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40285 \adc/i8007_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40286 \adc/i8010_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40285 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40286 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_658 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40287 \adc/i8137_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40288 \adc/i8140_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40287 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40288 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_660 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40289 \adc/i8134_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40241 \adc/i8131_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40289 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_662 ( input D1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40290 \sample_position/i7976_2_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40291 \sample_position/i1_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40290 ( input A, B, C, D, output Z );

  LUT4 #("0x0022") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40291 ( input A, B, C, D, output Z );

  LUT4 #("0x0500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_663 ( input DI1, C1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40009 SLICE_663_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40292 i4519_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \sample_position/SM_Sample_Position__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40292 ( input A, B, C, D, output Z );

  LUT4 #("0x555D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_666 ( input DI1, D1, C1, B1, A1, D0, C0, B0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40293 mux_35_Mux_0_i15_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40294 mux_35_Mux_0_i9_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 SM_Top__i0( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40293 ( input A, B, C, D, output Z );

  LUT4 #("0xD580") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40294 ( input A, B, C, D, output Z );

  LUT4 #("0x3F30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_667 ( input DI1, D1, D0, C0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40005 SLICE_667_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 mux_35_Mux_1_i9_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \mult/o_Comb_Muted ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_669 ( input DI1, D1, C1, B1, A1, D0, C0, B0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40295 i4133_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40296 i20_4_lut_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 SM_Top__i3( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40295 ( input A, B, C, D, output Z );

  LUT4 #("0x58F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40296 ( input A, B, C, D, output Z );

  LUT4 #("0x03C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_671 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40297 \adc/i8112_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40298 \adc/i8100_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40297 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40298 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_675 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40299 \adc/i8091_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40300 \adc/i8073_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40299 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40300 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_678 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40301 \adc/i8034_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40302 \adc/i7979_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40301 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40302 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_680 ( input D1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40303 \adc/i879_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40304 \adc/i7982_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40303 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40304 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_681 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40305 \adc/i8037_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40235 \adc/i8146_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40305 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_685 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40306 \adc/i8064_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40307 \adc/i8118_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40306 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40307 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_688 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40308 i5_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40308 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_690 ( input DI1, D1, A1, D0, C0, B0, A0, CE, LSR, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40069 \sample_output/i1_2_lut_adj_468 ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40309 \sample_output/i708_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/SM_Sample_Output__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40309 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_SLICE_691 ( input DI1, C1, C0, B0, CE, LSR, CLK, output 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40009 \sample_output.SLICE_691_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40310 \sample_output/SM_Sample_Output_3__I_0_58_i5_2_lut ( .A(GNDI), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \sample_output/Output_Data__i16 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40310 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_693 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40311 \sample_position/i7447_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40312 i1_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40311 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40312 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_694 ( input D0, B0, output F0 );
  wire   GNDI;

  lut40313 \adc/i_SPI_CS_I_0_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40313 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_695 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40314 \sample_output.dac.i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40057 \adc/i4407_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40314 ( input A, B, C, D, output Z );

  LUT4 #("0xAFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_696 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40002 \sample_output/dac/i1_2_lut_adj_467 ( .A(A0), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_dac_SLICE_697 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CE, LSR, CLK, output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40315 \sample_output.dac.SLICE_697_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40316 \sample_output.dac.i767_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \sample_output/dac/SM_DAC_Out_i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40315 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40316 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_698 ( output F0 );
  wire   GNDI;

  lut40317 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40317 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_699 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40318 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40319 i1_4_lut_adj_476( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 SM_Top__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40318 ( input A, B, C, D, output Z );

  LUT4 #("0xDD51") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40319 ( input A, B, C, D, output Z );

  LUT4 #("0x08A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_700 ( input D1, B1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40072 \sample_position/i5249_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 \sample_position/i5221_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_701 ( input B1, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \sample_position/unary_minus_6_inv_0_i7_1_lut ( .A(GNDI), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \sample_position/unary_minus_6_inv_0_i4_1_lut ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_702 ( input A1, B0, output F0, F1 );
  wire   GNDI;

  lut40320 \sample_position/unary_minus_6_inv_0_i12_1_lut ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40321 \sample_position/unary_minus_6_inv_0_i5_1_lut ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40320 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40321 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_703 ( input B0, output F0 );
  wire   GNDI;

  lut40321 \sample_position/unary_minus_6_inv_0_i16_1_lut ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_704 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40022 \sample_position/i6567_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \sample_position/i6549_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_705 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40322 \sample_position/i6564_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40110 \sample_position/i6554_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40322 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_706 ( input C1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 \sample_position/i6540_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40323 \sample_position/i6550_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40323 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_707 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40017 \sample_position/i6573_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40324 \sample_position/i6576_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40324 ( input A, B, C, D, output Z );

  LUT4 #("0xBB88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_708 ( input D1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \sample_position/i6558_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40325 \sample_position/i6574_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40325 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_709 ( input D0, B0, A0, output F0 );
  wire   GNDI;

  lut40014 \sample_position/i6585_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_710 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40326 \sample_position/i6569_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \sample_position/i6583_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40326 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_713 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40327 \sample_position/i6581_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40328 \sample_position/i6571_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40327 ( input A, B, C, D, output Z );

  LUT4 #("0xCACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40328 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_715 ( input D1, C1, B1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40329 \sample_position/i6542_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40110 \sample_position/i6560_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40329 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_718 ( input C1, B1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40082 \sample_position/i6582_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \sample_position/i6561_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_720 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40019 \sample_position/i6587_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40328 \sample_position/i6552_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_721 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40330 \sample_position/i6562_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40157 \sample_position/i6547_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40330 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_722 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40327 \sample_position/i6578_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40110 \sample_position/i6557_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_723 ( input D1, C1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40331 \sample_position/i6543_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40157 \sample_position/i6555_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40331 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_725 ( input D1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 \sample_position/i5254_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 \sample_position/i5246_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_726 ( input D1, B1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40072 \sample_position/i5250_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \sample_position/i5245_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_730 ( input B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40001 \sample_position/i5235_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 \sample_position/i5252_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_733 ( input DI1, A1, D0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40007 \sample_position.SLICE_733_K1 ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40324 \sample_position/i6546_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \sample_position/o_Freq_Too_High ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_735 ( input D1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 \sample_position/i5236_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40073 \sample_position/i5231_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_736 ( input A1, A0, output F0, F1 );
  wire   GNDI;

  lut40320 \sample_position/unary_minus_6_inv_0_i6_1_lut ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \sample_position/unary_minus_6_inv_0_i14_1_lut ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_737 ( input D1, B0, output F0, F1 );
  wire   GNDI;

  lut40303 \sample_position/unary_minus_6_inv_0_i11_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40321 \sample_position/unary_minus_6_inv_0_i15_1_lut ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_741 ( input B0, output F0 );
  wire   GNDI;

  lut40321 \sample_position/unary_minus_6_inv_0_i13_1_lut ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_746 ( input A1, D0, output F0, F1 );
  wire   GNDI;

  lut40320 \sample_position/unary_minus_6_inv_0_i8_1_lut ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40332 \sample_position/unary_minus_6_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40332 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_748 ( input DI1, D1, A0, CE, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40005 \sample_position.SLICE_748_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \sample_position/unary_minus_6_inv_0_i2_1_lut ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \adc/r_Bytes_In[0]__i15 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_751 ( input D0, output F0 );
  wire   GNDI;

  lut40332 \sample_position/unary_minus_6_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_753 ( input DI1, D1, D0, CE, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40005 \sample_position.SLICE_753_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40332 \sample_position/unary_minus_6_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \adc/r_Bytes_In[0]__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module sample_position_SLICE_756 ( input DI1, B1, B0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \sample_position.SLICE_756_K1 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40321 \sample_position/unary_minus_6_inv_0_i1_1_lut ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_position/Accumulated_Freq_Offset_i0_i0 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_position_SLICE_758 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 \sample_position/i5237_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \sample_position/i5238_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_760 ( input D1, C1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40333 \sample_position/i5243_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \sample_position/i5242_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40333 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_761 ( input C1, B1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40056 \sample_position/i5244_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \sample_position/i5239_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_position_SLICE_766 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40334 \sample_output/dac/i1_2_lut_2_lut ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \sample_position/i2_2_lut_adj_474 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40334 ( input A, B, C, D, output Z );

  LUT4 #("0xFF33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  sample_position_sp_ram_lscc_ram_dq_inst_inst0_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_SLICE_767
   ( input DI1, D1, C1, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40145 \sample_position/i5333_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 
    \sample_position/sp_ram/lscc_ram_dq_inst/inst0/PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0/wr_en_i_I_0_1_lut 
    ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \sample_position/Sample_Pos_WE_c ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module sample_output_dac_SLICE_770 ( input B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \sample_output/dac/i8_1_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40225 \sample_output/dac/i1_2_lut_2_lut_adj_457 ( .A(A0), .B(GNDI), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_dac_SLICE_771 ( input DI1, D1, C1, B1, A1, C0, A0, CE, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40335 \sample_output/dac/i6320_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40002 \sample_output/dac/i6302_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \sample_output/dac/Current_Bit_854__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40335 ( input A, B, C, D, output Z );

  LUT4 #("0x6CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_773 ( input D1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40336 \sample_output/dac/i7660_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40164 \sample_output/dac/i7432_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40336 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_output_dac_SLICE_774 ( input D1, B1, A1, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40336 \sample_output/dac/i7666_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \sample_output/dac/i7657_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_dac_SLICE_779 ( input C1, B1, A1, D0, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40013 \sample_output/dac/i7662_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \sample_output/dac/i7663_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sample_output_dac_SLICE_784 ( input DI1, D1, C1, B1, A1, D0, B0, CE, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40337 \sample_output/dac/i1_4_lut_adj_466 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40338 \sample_output/dac/i1_2_lut_adj_464 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20047 \sample_output/dac/o_Ready ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40337 ( input A, B, C, D, output Z );

  LUT4 #("0x80A2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40338 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_788 ( input DI1, D1, C1, B1, A1, D0, B0, A0, CE, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40339 mux_35_Mux_1_i15_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40340 mux_35_Mux_1_i7_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 SM_Top__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40339 ( input A, B, C, D, output Z );

  LUT4 #("0xB830") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40340 ( input A, B, C, D, output Z );

  LUT4 #("0x77AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_789 ( input DI1, D1, C1, B1, A1, D0, C0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40341 i1_4_lut_adj_493( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40342 i4545_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \mult/o_Mult_Ready ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40341 ( input A, B, C, D, output Z );

  LUT4 #("0xFABA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40342 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_790 ( input C1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40343 i1_2_lut_adj_492( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i7396_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40343 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_793 ( input DI1, D1, C1, B1, D0, C0, B0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40344 i1_2_lut_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40345 i1_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20055 \genadder[0].adder/SM_Adder__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40344 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40345 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_794 ( input DI1, C1, C0, B0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40009 SLICE_794_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40346 i2_3_lut_adj_497( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \sample_position/o_Sample_Ready ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40346 ( input A, B, C, D, output Z );

  LUT4 #("0x2020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module genadder_1__adder_SLICE_797 ( input DI1, D1, C1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40347 \genadder[1].adder/i1_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40348 \genadder[1].adder/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20055 \genadder[1].adder/SM_Adder__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40347 ( input A, B, C, D, output Z );

  LUT4 #("0x0A00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40348 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_798 ( input DI1, B1, C0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40003 \mult.SLICE_798_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40172 \mult/i1399_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 Reset_Mult_Scaler_c( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module mult_SLICE_800 ( input DI1, D1, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40005 \mult.SLICE_800_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \mult/sub_4_inv_0_i9_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 Harmonic_Scale_i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module mult_SLICE_801 ( input B0, output F0 );
  wire   GNDI;

  lut40321 \mult/sub_4_inv_0_i7_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_803 ( input D0, C0, B0, A0, output F0 );

  lut40349 \mult/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40349 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_805 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40350 i4455_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40351 \mult/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 Start_Mult_Scaler_c( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40350 ( input A, B, C, D, output Z );

  LUT4 #("0x70F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40351 ( input A, B, C, D, output Z );

  LUT4 #("0xFF10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_SLICE_806 ( input C0, output F0 );
  wire   GNDI;

  lut40042 \mult/sub_4_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_807 ( input DI1, B1, B0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40003 \mult.SLICE_807_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40321 \mult/sub_4_inv_0_i5_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \adc/r_Bytes_In[0]__i35 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module mult_SLICE_808 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40303 \mult/sub_4_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40332 \mult/sub_4_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_809 ( input B0, output F0 );
  wire   GNDI;

  lut40321 \mult/sub_4_inv_0_i3_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_SLICE_810 ( input D1, C0, output F0, F1 );
  wire   GNDI;

  lut40303 \mult/sub_4_inv_0_i1_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \mult/sub_4_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module adc_SLICE_813 ( input DI1, A1, D0, B0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40007 \adc.SLICE_813_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40352 \adc/i1361_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \adc/Clock_State_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40352 ( input A, B, C, D, output Z );

  LUT4 #("0x4488") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_814 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40353 i4423_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40354 \adc/i5392_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \adc/o_Data_Received ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40353 ( input A, B, C, D, output Z );

  LUT4 #("0xEE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40354 ( input A, B, C, D, output Z );

  LUT4 #("0xFF33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_815 ( input DI1, C1, D0, C0, B0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40009 \adc.SLICE_815_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40355 \adc/i1357_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/CS_State_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40355 ( input A, B, C, D, output Z );

  LUT4 #("0x30C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_816 ( input DI1, C1, D0, C0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40009 \adc.SLICE_816_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40356 \adc/i1359_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \adc/Data_State_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40356 ( input A, B, C, D, output Z );

  LUT4 #("0x50A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_818 ( input DI1, D1, D0, C0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40005 \adc.SLICE_818_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40357 \adc/i8022_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20047 \adc/CS_Stable_c ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40357 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_820 ( input DI1, B1, A1, D0, B0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40358 \genadder[0].adder/i5289_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \adc/i1_2_lut_adj_455 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20055 \genadder[0].adder/o_Accumulator__i18 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40358 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_822 ( input DI1, D1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40303 \adc/i5479_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40359 \adc/i8018_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20047 \adc/Receive_Bit_i0_i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40359 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module adc_SLICE_823 ( input DI1, D1, C1, A1, D0, C0, B0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40360 \adc/i8168_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40361 \adc/i1_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20055 \adc/SM_ADC_In_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40360 ( input A, B, C, D, output Z );

  LUT4 #("0xFF5F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40361 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sample_position_SLICE_825 ( input DI1, C1, D0, C0, B0, A0, CE, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40009 \sample_position.SLICE_825_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40362 \sample_position.i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 Next_Sample_c( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40362 ( input A, B, C, D, output Z );

  LUT4 #("0x7333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  sample_position_sp_ram_lscc_ram_dq_inst_inst0_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, 
    WADDR7, WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, WDATA15, 
    WDATA14, WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, 
    WDATA6, WDATA5, WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, 
    WCLKE, WCLK, WE, output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, 
    RDATA10, RDATA9, RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, 
    RDATA1, RDATA0 );
  wire   GNDI, RADDR7_dly, RCLK_dly, RADDR6_dly, RADDR5_dly, RADDR4_dly, 
         RADDR3_dly, RADDR2_dly, RADDR1_dly, RADDR0_dly, WADDR7_dly, WCLK_dly, 
         WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, WADDR2_dly, 
         WADDR1_dly, WADDR0_dly, WDATA15_dly, WDATA14_dly, WDATA13_dly, 
         WDATA12_dly, WDATA11_dly, WDATA10_dly, WDATA9_dly, WDATA8_dly, 
         WDATA7_dly, WDATA6_dly, WDATA5_dly, WDATA4_dly, WDATA3_dly, 
         WDATA2_dly, WDATA1_dly, WDATA0_dly, RCLKE_dly, RE_dly, WCLKE_dly, 
         WE_dly;

  EBR_B_B 
    \sample_position/sp_ram/lscc_ram_dq_inst/inst0/PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(GNDI), .RADDR9(GNDI), .RADDR8(GNDI), .RADDR7(RADDR7_dly), 
    .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), .RADDR4(RADDR4_dly), 
    .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), .RADDR1(RADDR1_dly), 
    .RADDR0(RADDR0_dly), .WADDR10(GNDI), .WADDR9(GNDI), .WADDR8(GNDI), 
    .WADDR7(WADDR7_dly), .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), 
    .WADDR4(WADDR4_dly), .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), 
    .WADDR1(WADDR1_dly), .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), 
    .MASK_N13(GNDI), .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), 
    .MASK_N9(GNDI), .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), 
    .MASK_N5(GNDI), .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), 
    .MASK_N1(GNDI), .MASK_N0(GNDI), .WDATA15(WDATA15_dly), 
    .WDATA14(WDATA14_dly), .WDATA13(WDATA13_dly), .WDATA12(WDATA12_dly), 
    .WDATA11(WDATA11_dly), .WDATA10(WDATA10_dly), .WDATA9(WDATA9_dly), 
    .WDATA8(WDATA8_dly), .WDATA7(WDATA7_dly), .WDATA6(WDATA6_dly), 
    .WDATA5(WDATA5_dly), .WDATA4(WDATA4_dly), .WDATA3(WDATA3_dly), 
    .WDATA2(WDATA2_dly), .WDATA1(WDATA1_dly), .WDATA0(WDATA0_dly), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(WE_dly), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA15) = (0:0:0,0:0:0);
    (RCLK => RDATA14) = (0:0:0,0:0:0);
    (RCLK => RDATA13) = (0:0:0,0:0:0);
    (RCLK => RDATA12) = (0:0:0,0:0:0);
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA10) = (0:0:0,0:0:0);
    (RCLK => RDATA9) = (0:0:0,0:0:0);
    (RCLK => RDATA8) = (0:0:0,0:0:0);
    (RCLK => RDATA7) = (0:0:0,0:0:0);
    (RCLK => RDATA6) = (0:0:0,0:0:0);
    (RCLK => RDATA5) = (0:0:0,0:0:0);
    (RCLK => RDATA4) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    (RCLK => RDATA2) = (0:0:0,0:0:0);
    (RCLK => RDATA1) = (0:0:0,0:0:0);
    (RCLK => RDATA0) = (0:0:0,0:0:0);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold 
      (posedge WCLK, WDATA15, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA15_dly);
    $setuphold 
      (posedge WCLK, WDATA14, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA14_dly);
    $setuphold 
      (posedge WCLK, WDATA13, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA13_dly);
    $setuphold 
      (posedge WCLK, WDATA12, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA12_dly);
    $setuphold 
      (posedge WCLK, WDATA11, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA11_dly);
    $setuphold 
      (posedge WCLK, WDATA10, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA10_dly);
    $setuphold (posedge WCLK, WDATA9, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA9_dly);
    $setuphold (posedge WCLK, WDATA8, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA8_dly);
    $setuphold (posedge WCLK, WDATA7, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA7_dly);
    $setuphold (posedge WCLK, WDATA6, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA6_dly);
    $setuphold (posedge WCLK, WDATA5, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA5_dly);
    $setuphold (posedge WCLK, WDATA4, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA4_dly);
    $setuphold (posedge WCLK, WDATA3, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA3_dly);
    $setuphold (posedge WCLK, WDATA2, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA2_dly);
    $setuphold (posedge WCLK, WDATA1, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA1_dly);
    $setuphold (posedge WCLK, WDATA0, 0:0:0, 0:0:0,,,, WCLK_dly, WDATA0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $setuphold (posedge WCLK, WE, 0:0:0, 0:0:0,,,, WCLK_dly, WE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B_B ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, 
    RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, 
    WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "16";
  defparam INST10.DATA_WIDTH_W = "16";

    defparam INST10.INIT_0 = "0x8C28451EB28F58F59AE12333466655C267AE0000A00000003000000020000000";

    defparam INST10.INIT_1 = "0xD5C210A38EB83999F70A2F5CD28F98F53EB881EB50A313D7CE146C28A999E51E";

    defparam INST10.INIT_2 = "0x4AE1614727AECC28551EB70AFB853AE17F5CAA3DE0A3099925C2447AB1EB2C28";

    defparam INST10.INIT_3 = "0x847A566627AE428F4F5C1666347A0147A8F51A3DAEB815C26CCC50A3F0A3CB85";

    defparam INST10.INIT_4 = "0xD28F8CCC947A65C25AE1CF5C97AE20000147B8F519997333F47A0A3D4000A51E";

    defparam INST10.INIT_5 = "0x999929997851128F0147847AB8F5EA3D4F5C1D702851FAE1B47A1B859E14C5C2";

    defparam INST10.INIT_6 = "0x95C2951E1F5CCCCCD147BB85B47AC851E3D77E1436663666CEB88C285CCCB666";

    defparam INST10.INIT_7 = "0xE14795C273336EB828F57AE1AE1426668851B47A347AC6660AE1A666B0A3851E";

    defparam INST10.INIT_8 = "0x528FE8F52E14151EF147047AA7AE53D7EC28E51E4A3D7000FE14C666C33371EB";

    defparam INST10.INIT_9 = "0xE70AB5C260001EB8D8F5E7AE1851F851F1EBE7AEB5C28666BC28FAE130A371EB";

    defparam INST10.INIT_A = "0xDA3D9000FD704EB85AE161EBB851D0A3E3D71EB813332C288AE1A5C24CCC0C28";

    defparam INST10.INIT_B = "0xFCCCFA3D5000A28FCD700A3D00A3E000C1EB9C28A1EB69998E14751E3AE163D7";

    defparam INST10.INIT_C = "0xCE14128FF7AED28F70A3670A728FB8519F5C3E14B99915C2F999D70AE333C147";

    defparam INST10.INIT_D = "0xD147CD70B9994333C70ABEB8970A09999147C5C2147A7EB8247AE5C2D9990C28";

    defparam INST10.INIT_E = "0xC0A3151E48F5F28FA47A370A0A3D628FA851EA3D5AE1CCCC98F5DB85B999D51E";

    defparam INST10.INIT_F = "0x851E07AE0F5C9333D28FEA3D90A3751EB333D000D8F54AE1E000D51E4EB853D7";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_7__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0363 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[7].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0363 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EE00E";

    defparam INST10.INIT_1 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_2 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_3 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_4 = "0xF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_5 = "0xF096F096F096F096F096F096F096F096F096F096F01EF01EF01EF01EF01EF01E";

    defparam INST10.INIT_6 = "0xF096F096F096F096F096F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_7 = "0xF096F096F096F096F096F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_8 = "0xF096F096F096F096F096F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_9 = "0xF096F096F096F096F096F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_A = "0xF087F087F087F087F087F096F096F096F096F096F096F096F096F096F096F096";

    defparam INST10.INIT_B = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";

    defparam INST10.INIT_C = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";

    defparam INST10.INIT_D = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";

    defparam INST10.INIT_E = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";

    defparam INST10.INIT_F = "0xF087F087F087F087F087F087F087F087F087F087F087F087F087F087F087F087";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_6__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0364 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[6].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0364 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0xB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EB41EA40E";

    defparam INST10.INIT_1 = "0x963C963C963C963C963C963C963C963C963C963C963CB41EB41EB41EB41EB41E";

    defparam INST10.INIT_2 = "0x96A596A596A596A596A596A596A596B496B496B496B496B4963C963C963C963C";

    defparam INST10.INIT_3 = "0x96A596A596A596A596A596A596A596A596A596A596A596A596A596A596A596A5";

    defparam INST10.INIT_4 = "0x96A596A596A596A596A596A596A596A596A596A596A596A596A596A596A596A5";

    defparam INST10.INIT_5 = "0x0F1E0F1E0F1E0F1E0F3C0F3C0F3C0F3C0F3C0F3C87B487B487B496A596A596A5";

    defparam INST10.INIT_6 = "0x0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E";

    defparam INST10.INIT_7 = "0x0F0F0F0F0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E0F1E";

    defparam INST10.INIT_8 = "0x0F870F870F870F870F870F870F870F870F870F870F870F870F870F0F0F0F0F0F";

    defparam INST10.INIT_9 = "0x0F870F870F870F870F870F870F870F870F870F870F870F870F870F870F870F87";

    defparam INST10.INIT_A = "0x965A965A1ED21ED21ED20FC30FC30FC30FC30FC30FC30F870F870F870F870F87";

    defparam INST10.INIT_B = "0x965A965A965A965A965A965A965A965A965A965A965A965A965A965A965A965A";

    defparam INST10.INIT_C = "0x965A965A965A965A965A965A965A965A965A965A965A965A965A965A965A965A";

    defparam INST10.INIT_D = "0x96C396C396C396D296D296D296D296D2965A965A965A965A965A965A965A965A";

    defparam INST10.INIT_E = "0xD287D287D287D28796C396C396C396C396C396C396C396C396C396C396C396C3";

    defparam INST10.INIT_F = "0xD287D287D287D287D287D287D287D287D287D287D287D287D287D287D287D287";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_5__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0365 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[5].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0365 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x960F960F960F960F960F961E961E1E961E961E961EB41EB41EB41EB41EB40EA4";

    defparam INST10.INIT_1 = "0xA5A5A5B4A5B4A5B4A5B4A5B4A5B4A5B4A5B4A53CA53C960F960F960F960F960F";

    defparam INST10.INIT_2 = "0x3C1E3C1E3C1E3C1E3C1E3C1E3C1E2D0F2D0F2D0F2D0F2D2DA5A5A5A5A5A5A5A5";

    defparam INST10.INIT_3 = "0x873C873C1EA51EA51EA51EA51EA51EA51EA51EA53C873C873C963C963C963C1E";

    defparam INST10.INIT_4 = "0x878787878787878787878787870F870F873C873C873C873C873C873C873C873C";

    defparam INST10.INIT_5 = "0x3C693C693C693C781E5A1E5A1E5A1E5A1E5A1E5A96D296D296D287C387878787";

    defparam INST10.INIT_6 = "0xA578A578A5782DF02DF02DF02DF02DF03CE13CE13CE13CE13CE13CE13CE13C69";

    defparam INST10.INIT_7 = "0xF096F096E187E187E187E187E187E187E10FE10FE10FE10FA54BA55AA578A578";

    defparam INST10.INIT_8 = "0x5AE15AA55A2D780F780F780F780F781E781E781E781E781E781EF096F096F096";

    defparam INST10.INIT_9 = "0xC378C378C378C378C378C378C3784BF04BF04BF04BF04BF05AE15AE15AE15AE1";

    defparam INST10.INIT_A = "0x1E1E1E3C96B496B496B487A587A587A587A587A587A5C3E1C369C369C369C369";

    defparam INST10.INIT_B = "0x1EC31EC31EC31EC31EC31EC31EC31E0F1E0F1E1E1E1E1E1E1E1E1E1E1E1E1E1E";

    defparam INST10.INIT_C = "0xC396C396C396C31EC31E875A875A875A875A875A875A875A875A1EC31EC31EC3";

    defparam INST10.INIT_D = "0x5A5A5A5A5A5A4B4B4B0F4B0F4B0F4B0FC387C387C387C387C387C387C387C387";

    defparam INST10.INIT_E = "0x960F960F960F960F5AC35AC35AD25AD25AD25AD25AD25AD25AD25AD25A5A5A5A";

    defparam INST10.INIT_F = "0x87D287D287D287D287D287968796879696879687960F960F960F960F960F960F";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_4__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0366 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[4].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0366 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x1EA51EA51EA53C1E3C1E2D0F2D2DA5A5A5B4A5B4960F960F960F961E1EB40EA4";

    defparam INST10.INIT_1 = "0x963C872D0FA52D962D962D1E3C0F3C2D3C2DB4B4B4B48787870F870F871E873C";

    defparam INST10.INIT_2 = "0x87F087F09669B44BB45A3CD23CD22DA52D2D2D3C2D3C0F1E968796879696963C";

    defparam INST10.INIT_3 = "0x5A3C781EE187E187E187E11EA578B4693CE13CE11ED21ED20F4B0F4B0F4B87F0";

    defparam INST10.INIT_4 = "0x69D269D278C3786978697878F0F0F0F0C3C3C30FC31EC31E4B965AA55AA55A3C";

    defparam INST10.INIT_5 = "0xB4F0B478B478A5690F870F960F960F1E1E0F1E2D96B596B496B4872DE14BE14B";

    defparam INST10.INIT_6 = "0x4B5A4B5A4B5AD287D2A5D2B4D23CD23CC32D698769872DD22D5A3C4B3C4BB4E1";

    defparam INST10.INIT_7 = "0x9678B45A2DC32DC32DC32D1E2D1E2D1EB4A5B4A5B4B4B43CF07869E14BC34BC3";

    defparam INST10.INIT_8 = "0x2D3C6978F0E1D2C3D2D2D25AD25A4B874B874B874B3C4B3C4B3CD2A596E196F0";

    defparam INST10.INIT_9 = "0xC32DC32D4BA54BB4691E691E3C4BB4C3B4C3B4D2B45AB41E2DA52DA52DA52D3C";

    defparam INST10.INIT_A = "0x782D1E4B96D296D296DA874B870F0F870F960F960F1E5A69D2E1D2E1D2F0D278";

    defparam INST10.INIT_B = "0xA55AA55A2D963C873C873C0F3C3CF0F0F0F0E1E1E169E169E13C69B469B4782D";

    defparam INST10.INIT_C = "0x0F2D0F2D0F2D87B487B4C378C378D2695AE17887781E781E781EE187A5C3A5C3";

    defparam INST10.INIT_D = "0x9696961E961E0F874BC34BC34B4B4B5AC3B4C3B4D2A5D22D96691EF01EF01EF0";

    defparam INST10.INIT_E = "0x1E871E0F1E0F1E1ED2D2D2D2C34BC34BC30F4B874B964B960F5A1E4B96C396C3";

    defparam INST10.INIT_F = "0x87D29687960F960F960F5AD25AD25A5A4B4B4B0FC387C387875A875A875A1EC3";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_3__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0367 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[3].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0367 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x87A53C873C3C8796962D2DA50F1E963C2D973C2D8787873C3C962D2D96870EA4";

    defparam INST10.INIT_1 = "0x5AB4690FF0A5874B0FF0B4D2A5691EC31E78A5D2B4780F0F96A5B41E2DB41E0F";

    defparam INST10.INIT_2 = "0x1EE13C5AA5B41E960F2DB487B43C4BD2D2E1E14B79E05A5AC33C7887692DC396";

    defparam INST10.INIT_3 = "0xA5781E5A8787962D3C96A5B4D24B4BE1F0C3F0784B965A2DC32D69963C7887C3";

    defparam INST10.INIT_4 = "0xC3B4F00F692D87D2965A0F69B487B43C0F1ED2E1C369695AF0B4C31E5A2DA5C3";

    defparam INST10.INIT_5 = "0x0FE196E1B41E2DB4D2C3C34B4BB4F096E12D1E4B86C2873C3C1EA5A5D24B5A5A";

    defparam INST10.INIT_6 = "0x87F1B40F3C3CE1F0D24B4B2DC3B43CD22D69968F1E964B78F04B69A7693CD21E";

    defparam INST10.INIT_7 = "0xE13C1EC387C3873C3C1EE1C378A5783C87D21EE10F2DA51E78F0E1E1D20F1EF0";

    defparam INST10.INIT_8 = "0xB40F7878E1F05A870F4B87781EB4E1C3E15A783CC3871EC31E3C873C78C3690F";

    defparam INST10.INIT_9 = "0x69C3695EF02D2DE18796961F4B69C3B43CD22D4BB42D78F0C3C3D20F1EF887F0";

    defparam INST10.INIT_A = "0xB42D5A5AC3871EC31634872D784BF0962DD23C2DB43C4BD2D28796780F78B487";

    defparam INST10.INIT_B = "0xA54B3C87F0D269A53C69B4780F87D2C3D21E0F6996A51EB4694BF00F3CD2A5A5";

    defparam INST10.INIT_C = "0xC3E169963C4BA54B2D96F0E1F03C2D78B42D5AD2C396964B1E1E87A55AE15A3C";

    defparam INST10.INIT_D = "0x694BE11E3CC3A5A5E970782DB4782DB4D2C3D21E0F4B87965AD2C3A587781E3C";

    defparam INST10.INIT_E = "0x4BD2D287965A0F0FD2E15AB487E1873C5A69D2B40FF01E2DF05A690FA5D23C96";

    defparam INST10.INIT_F = "0x961E4B4BC3961EC31E1EC34B4B9E96C30F874B5A964B1E96C3C3C31E1E5A870F";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_2__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0368 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[2].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0368 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x691EA5E1B469A5693CE10FDE1E1E879686A4962D872D3C872D963C3C2D3CA4A4";

    defparam INST10.INIT_1 = "0x87D29696960F4BE35A69C3A5D2B487781EF00F3C0F2DD2E1E349F8436996781E";

    defparam INST10.INIT_2 = "0xA5DABC16784BE187B6498F611EBC4B78D2B487780EE01E2DC3E1D26B4B971E5A";

    defparam INST10.INIT_3 = "0x5A8F87C7F07969B43C5AA5967AD04B3C87E1960F4BC35A0FA5E1B43C69F0783C";

    defparam INST10.INIT_4 = "0x69C35A2D87AD5AC3692DB4BC69D21E7887B45AD22D78B4B479C22D4B96A5C369";

    defparam INST10.INIT_5 = "0x5A96A5B4F8160F78D2DA2DF0787AE11E1EB4C396A468784BC3A51EA74B4FB4E1";

    defparam INST10.INIT_6 = "0xA46869D296D269F03C5AC3783C78E1D21EF04352B478695A96F049D0781E873C";

    defparam INST10.INIT_7 = "0xB44B5A5AA53C5AB487963CD2C3F0B469694B960F692DB4874B87B4A5A7495A4B";

    defparam INST10.INIT_8 = "0x5E29D25A2D1ED21E694B960F692DD2693CF0C3B41E96A5D25AC3A5A5D22D6969";

    defparam INST10.INIT_9 = "0xE18729B096F069A5D2E12CA487F078B4C3E13CE1C3A569F096B469B45261A52D";

    defparam INST10.INIT_A = "0x2D2F875E3C5AE12D52613C9687D27887E1E54BF0B4B50FE1F1865AD2A5961EC3";

    defparam INST10.INIT_B = "0x965A4B2DE934D2D24BE1A5B41ED287E169B4D2D3694BA53C1E5BA54B693CD278";

    defparam INST10.INIT_C = "0x69F0D2C35A78A50F2D3C960F1E782DC3E5B05A96C3A569D2F0E91E3EA51F3C69";

    defparam INST10.INIT_D = "0x2D9EB46D3C78874B07701EE1B4D22DE187D31F68D629781EE12DD3865AB5E1C3";

    defparam INST10.INIT_E = "0x6996F12C7C29B4780F4B0FC387F01EE1B4D23C5AA5692D7C960F96961EB487A5";

    defparam INST10.INIT_F = "0x4BC3C3C34B96C31E1E4B964B16521E9687870FB7C3785A69D2695A786987E187";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_1__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0369 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[1].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0369 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x3C7C4BC3C3B43C4BB47C03034BF0F0B54A86A7D03CE996BE2D8F87961EA5A4A4";

    defparam INST10.INIT_1 = "0xB5E0787D2DA5C914960FD2960F0F4BB4962DF2D42D4B69F0D00D16164BF1F50A";

    defparam INST10.INIT_2 = "0x34713452C3A5C396D0C1343425472F585A2D5A7A0ECE4B975BC2941DE02CE1F1";

    defparam INST10.INIT_3 = "0x34079292E06A4BA56DB81F6894C1B49E872FAD352D961EA73CBC2D0F0F3C1F4E";

    defparam INST10.INIT_4 = "0xF1CA3CE15243F6183CB44307872D69F00F5AB48FF8651E78A4A4C36B69B60FDA";

    defparam INST10.INIT_5 = "0x3D68F02D7061BC253461F8255859965E5A3ED2782E48E1872DA5C581831A0F78";

    defparam INST10.INIT_6 = "0xC22C5A1E7CB0B4DA1E791EC3B4E13CEBB44B56215BA4D3865BCAD1483D2CB56C";

    defparam INST10.INIT_7 = "0xCB25B43CD2F37C0B0F96E15BC3873C7A1EB4F069F2850F5AAD1687BD494969C7";

    defparam INST10.INIT_8 = "0x29291EDB5B860FA5F41AF06987D2C3E53C1E78AD0F96E30DB4FCD2C33D4A69F0";

    defparam INST10.INIT_9 = "0xCB43B821AD35BC16AD52A648D22DC37DD278873C87E9D2B5E3D0A5873443693E";

    defparam INST10.INIT_A = "0x1C853A184B5A781E4721B4E1A5C796A7A1A9F14AC268D34AE068F04BCB61DA63";

    defparam INST10.INIT_B = "0x69D63C6D525287E1F16AD21F0FA569F01E4B2C0EC3D2F681A42CC378F8350FE1";

    defparam INST10.INIT_C = "0x0FC34B0FC3D3875E4B965BCA1E4FD29792388F616BD12D5A70659494C20E0FB5";

    defparam INST10.INIT_D = "0x7043928BAD342D9E0737A5E5A54B4FA14A2EC2C2B0383C963C5AC2A4C2E88F27";

    defparam INST10.INIT_E = "0x2DF88686B00B69F04B2DF4B2964B2DD20F0FB496960F39824B5AE1EBDA7078F8";

    defparam INST10.INIT_F = "0x875A1E964B1F96D7C3795EB02516F0DA2DF00C0CD2E3C32D3CD22D3CC3E3FA05";
endmodule

module 
  sample_position_sin_lut_lscc_rom_inst_u_rom_PRIM_MODE_xADDR_0__xDATA_0__mem_file_mem0_iCE40UP_sp4k
   ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, WADDR5, 
    WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, RCLKE, RCLK, RE, WCLKE, WCLK, 
    output RDATA11, RDATA3 );
  wire   GNDI, RADDR10_dly, RCLK_dly, RADDR9_dly, RADDR8_dly, RADDR7_dly, 
         RADDR6_dly, RADDR5_dly, RADDR4_dly, RADDR3_dly, RADDR2_dly, 
         RADDR1_dly, RADDR0_dly, WADDR10_dly, WCLK_dly, WADDR9_dly, WADDR8_dly, 
         WADDR7_dly, WADDR6_dly, WADDR5_dly, WADDR4_dly, WADDR3_dly, 
         WADDR2_dly, WADDR1_dly, WADDR0_dly, RCLKE_dly, RE_dly, WCLKE_dly;

  EBR_B0370 
    \sample_position/sin_lut/lscc_rom_inst/u_rom/PRIM_MODE.xADDR[0].xDATA[0].mem_file.mem0/iCE40UP.sp4k 
    ( .RADDR10(RADDR10_dly), .RADDR9(RADDR9_dly), .RADDR8(RADDR8_dly), 
    .RADDR7(RADDR7_dly), .RADDR6(RADDR6_dly), .RADDR5(RADDR5_dly), 
    .RADDR4(RADDR4_dly), .RADDR3(RADDR3_dly), .RADDR2(RADDR2_dly), 
    .RADDR1(RADDR1_dly), .RADDR0(RADDR0_dly), .WADDR10(WADDR10_dly), 
    .WADDR9(WADDR9_dly), .WADDR8(WADDR8_dly), .WADDR7(WADDR7_dly), 
    .WADDR6(WADDR6_dly), .WADDR5(WADDR5_dly), .WADDR4(WADDR4_dly), 
    .WADDR3(WADDR3_dly), .WADDR2(WADDR2_dly), .WADDR1(WADDR1_dly), 
    .WADDR0(WADDR0_dly), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), 
    .RCLKE(RCLKE_dly), .RCLK(RCLK_dly), .RE(RE_dly), .WCLKE(WCLKE_dly), 
    .WCLK(WCLK_dly), .WE(GNDI), .RDATA15(), .RDATA14(), .RDATA13(), .RDATA12(), 
    .RDATA11(RDATA11), .RDATA10(), .RDATA9(), .RDATA8(), .RDATA7(), .RDATA6(), 
    .RDATA5(), .RDATA4(), .RDATA3(RDATA3), .RDATA2(), .RDATA1(), .RDATA0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RCLK => RDATA11) = (0:0:0,0:0:0);
    (RCLK => RDATA3) = (0:0:0,0:0:0);
    $setuphold 
      (posedge RCLK, RADDR10, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR10_dly);
    $setuphold (posedge RCLK, RADDR9, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR9_dly);
    $setuphold (posedge RCLK, RADDR8, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR8_dly);
    $setuphold (posedge RCLK, RADDR7, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR7_dly);
    $setuphold (posedge RCLK, RADDR6, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR6_dly);
    $setuphold (posedge RCLK, RADDR5, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR5_dly);
    $setuphold (posedge RCLK, RADDR4, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR4_dly);
    $setuphold (posedge RCLK, RADDR3, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR3_dly);
    $setuphold (posedge RCLK, RADDR2, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR2_dly);
    $setuphold (posedge RCLK, RADDR1, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR1_dly);
    $setuphold (posedge RCLK, RADDR0, 0:0:0, 0:0:0,,,, RCLK_dly, RADDR0_dly);
    $setuphold 
      (posedge WCLK, WADDR10, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR10_dly);
    $setuphold (posedge WCLK, WADDR9, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR9_dly);
    $setuphold (posedge WCLK, WADDR8, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR8_dly);
    $setuphold (posedge WCLK, WADDR7, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR7_dly);
    $setuphold (posedge WCLK, WADDR6, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR6_dly);
    $setuphold (posedge WCLK, WADDR5, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR5_dly);
    $setuphold (posedge WCLK, WADDR4, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR4_dly);
    $setuphold (posedge WCLK, WADDR3, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR3_dly);
    $setuphold (posedge WCLK, WADDR2, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR2_dly);
    $setuphold (posedge WCLK, WADDR1, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR1_dly);
    $setuphold (posedge WCLK, WADDR0, 0:0:0, 0:0:0,,,, WCLK_dly, WADDR0_dly);
    $setuphold (posedge RCLK, RCLKE, 0:0:0, 0:0:0,,,, RCLK_dly, RCLKE_dly);
    $setuphold (posedge RCLK, RE, 0:0:0, 0:0:0,,,, RCLK_dly, RE_dly);
    $setuphold (posedge WCLK, WCLKE, 0:0:0, 0:0:0,,,, WCLK_dly, WCLKE_dly);
    $width (posedge RCLK, 0:0:0);
    $width (negedge RCLK, 0:0:0);
    $width (posedge WCLK, 0:0:0);
    $width (negedge WCLK, 0:0:0);
  endspecify

endmodule

module EBR_B0370 ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, 
    RADDR4, RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, 
    WADDR6, WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_R = "2";
  defparam INST10.DATA_WIDTH_W = "2";

    defparam INST10.INIT_0 = "0x0BBBCB774BFFD3EE3B883211B4FFCA662ECC49DD2755514477005EBB3CFFAE44";

    defparam INST10.INIT_1 = "0xA4EEA82269FF451187FFAF55AD775FAA7BCC9900BD66D2FF94DD7077EE0082AA";

    defparam INST10.INIT_2 = "0x06667255B6DDF1EED5881766213349DDEB55C1DD20222ECCC6AA48CCA4EE68EE";

    defparam INST10.INIT_3 = "0x716629BB8C44D3EE23116CAA94DD7344CD11660096FF1CDD3566E799EB550AAA";

    defparam INST10.INIT_4 = "0x6066E977707781991EFF6711F0FF8F7778FF47333033F3CCC2EED588C5997077";

    defparam INST10.INIT_5 = "0x6ACC4FBB473377007700743348CC2B999D44D2FF84CC6BDDDF22909929BBF966";

    defparam INST10.INIT_6 = "0xE2CC3EDD9B224377CA66F6997DAA5144CB772133C6AAE8660666C0CCAC66AA00";

    defparam INST10.INIT_7 = "0x3744D2FF84CCA933FD22EC223DEE1CDD8F77BE558D55D6BB716626445C99A933";

    defparam INST10.INIT_8 = "0xA3994622E866B6DD1BAAD7AA1FEE83BBCB777344FB4459CC1233B4FFCE2269FF";

    defparam INST10.INIT_9 = "0x5366303306667166365548CC3DEEA822EB55F69935662CEE9D44C7BB743359CC";

    defparam INST10.INIT_A = "0x49DD9099BF446DBB1233B4FF9B224D992133E2CCEE00EE002ECC2FDD65335500";

    defparam INST10.INIT_B = "0x3A99BA113477FC33C0CC2ECCE1FF1FEEF0FF6E8887FF1899E0EE79EE6066F966";

    defparam INST10.INIT_C = "0x7DAA7E99CA6683BB96FF66003B88EC2292BB63554C88BC77132249DDE866E0EE";

    defparam INST10.INIT_D = "0x5277213336554733404438BB7DAA29BB48CC8E66BA11F877D6BBE4AA06660555";

    defparam INST10.INIT_E = "0x7700E0EE92BBB4FFDB669900ED33AF555BEE5FAA1EFF2A8869FF514452776177";

    defparam INST10.INIT_F = "0xC3FFA7DDEE00A8224EAA29BB47333566D2FFC488CD11BC772DFF3DEE0DDD1455";
endmodule

module pll_48_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE );
  wire   GNDI;

  PLL_B_B \pll_48/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.DIVF = "63";
  defparam INST10.DIVQ = "4";
  defparam INST10.DIVR = "0";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module reset_n ( output PADDI, input reset_n );
  wire   GNDI;

  BB_B_B \sample_output/dac/reset_n_pad.bb_inst ( .T_N(GNDI), .I(GNDI), 
    .O(PADDI), .B(reset_n));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (reset_n => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module genadder_0__adder_mult_3 ( input A15, A14, A13, A12, A11, A10, A9, A8, 
    A7, A6, A5, A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, 
    B6, B5, B4, B3, B2, B1, B0, output O24, O23, O22, O21, O20, O19, O18, O17, 
    O16, O15, O14, O13, O12, O11, O10, O9 );
  wire   GNDI;

  MAC16_B \genadder[0].adder/mult_3 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(GNDI), 
    .D14(GNDI), .D13(GNDI), .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), 
    .D8(GNDI), .D7(GNDI), .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), 
    .D2(GNDI), .D1(GNDI), .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), 
    .DHOLD(GNDI), .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), 
    .ORSTBOT(GNDI), .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), 
    .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), 
    .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), 
    .O26(), .O25(), .O24(O24), .O23(O23), .O22(O22), .O21(O21), .O20(O20), 
    .O19(O19), .O18(O18), .O17(O17), .O16(O16), .O15(O15), .O14(O14), 
    .O13(O13), .O12(O12), .O11(O11), .O10(O10), .O9(O9), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(), .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A15 => O24) = (0:0:0,0:0:0);
    (A15 => O23) = (0:0:0,0:0:0);
    (A15 => O22) = (0:0:0,0:0:0);
    (A15 => O21) = (0:0:0,0:0:0);
    (A15 => O20) = (0:0:0,0:0:0);
    (A15 => O19) = (0:0:0,0:0:0);
    (A15 => O18) = (0:0:0,0:0:0);
    (A15 => O17) = (0:0:0,0:0:0);
    (A15 => O16) = (0:0:0,0:0:0);
    (A15 => O15) = (0:0:0,0:0:0);
    (A14 => O24) = (0:0:0,0:0:0);
    (A14 => O23) = (0:0:0,0:0:0);
    (A14 => O22) = (0:0:0,0:0:0);
    (A14 => O21) = (0:0:0,0:0:0);
    (A14 => O20) = (0:0:0,0:0:0);
    (A14 => O19) = (0:0:0,0:0:0);
    (A14 => O18) = (0:0:0,0:0:0);
    (A14 => O17) = (0:0:0,0:0:0);
    (A14 => O16) = (0:0:0,0:0:0);
    (A14 => O15) = (0:0:0,0:0:0);
    (A14 => O14) = (0:0:0,0:0:0);
    (A13 => O24) = (0:0:0,0:0:0);
    (A13 => O23) = (0:0:0,0:0:0);
    (A13 => O22) = (0:0:0,0:0:0);
    (A13 => O21) = (0:0:0,0:0:0);
    (A13 => O20) = (0:0:0,0:0:0);
    (A13 => O19) = (0:0:0,0:0:0);
    (A13 => O18) = (0:0:0,0:0:0);
    (A13 => O17) = (0:0:0,0:0:0);
    (A13 => O16) = (0:0:0,0:0:0);
    (A13 => O15) = (0:0:0,0:0:0);
    (A13 => O14) = (0:0:0,0:0:0);
    (A13 => O13) = (0:0:0,0:0:0);
    (A12 => O24) = (0:0:0,0:0:0);
    (A12 => O23) = (0:0:0,0:0:0);
    (A12 => O22) = (0:0:0,0:0:0);
    (A12 => O21) = (0:0:0,0:0:0);
    (A12 => O20) = (0:0:0,0:0:0);
    (A12 => O19) = (0:0:0,0:0:0);
    (A12 => O18) = (0:0:0,0:0:0);
    (A12 => O17) = (0:0:0,0:0:0);
    (A12 => O16) = (0:0:0,0:0:0);
    (A12 => O15) = (0:0:0,0:0:0);
    (A12 => O14) = (0:0:0,0:0:0);
    (A12 => O13) = (0:0:0,0:0:0);
    (A12 => O12) = (0:0:0,0:0:0);
    (A11 => O24) = (0:0:0,0:0:0);
    (A11 => O23) = (0:0:0,0:0:0);
    (A11 => O22) = (0:0:0,0:0:0);
    (A11 => O21) = (0:0:0,0:0:0);
    (A11 => O20) = (0:0:0,0:0:0);
    (A11 => O19) = (0:0:0,0:0:0);
    (A11 => O18) = (0:0:0,0:0:0);
    (A11 => O17) = (0:0:0,0:0:0);
    (A11 => O16) = (0:0:0,0:0:0);
    (A11 => O15) = (0:0:0,0:0:0);
    (A11 => O14) = (0:0:0,0:0:0);
    (A11 => O13) = (0:0:0,0:0:0);
    (A11 => O12) = (0:0:0,0:0:0);
    (A11 => O11) = (0:0:0,0:0:0);
    (A10 => O24) = (0:0:0,0:0:0);
    (A10 => O23) = (0:0:0,0:0:0);
    (A10 => O22) = (0:0:0,0:0:0);
    (A10 => O21) = (0:0:0,0:0:0);
    (A10 => O20) = (0:0:0,0:0:0);
    (A10 => O19) = (0:0:0,0:0:0);
    (A10 => O18) = (0:0:0,0:0:0);
    (A10 => O17) = (0:0:0,0:0:0);
    (A10 => O16) = (0:0:0,0:0:0);
    (A10 => O15) = (0:0:0,0:0:0);
    (A10 => O14) = (0:0:0,0:0:0);
    (A10 => O13) = (0:0:0,0:0:0);
    (A10 => O12) = (0:0:0,0:0:0);
    (A10 => O11) = (0:0:0,0:0:0);
    (A10 => O10) = (0:0:0,0:0:0);
    (A9 => O24) = (0:0:0,0:0:0);
    (A9 => O23) = (0:0:0,0:0:0);
    (A9 => O22) = (0:0:0,0:0:0);
    (A9 => O21) = (0:0:0,0:0:0);
    (A9 => O20) = (0:0:0,0:0:0);
    (A9 => O19) = (0:0:0,0:0:0);
    (A9 => O18) = (0:0:0,0:0:0);
    (A9 => O17) = (0:0:0,0:0:0);
    (A9 => O16) = (0:0:0,0:0:0);
    (A9 => O15) = (0:0:0,0:0:0);
    (A9 => O14) = (0:0:0,0:0:0);
    (A9 => O13) = (0:0:0,0:0:0);
    (A9 => O12) = (0:0:0,0:0:0);
    (A9 => O11) = (0:0:0,0:0:0);
    (A9 => O10) = (0:0:0,0:0:0);
    (A9 => O9) = (0:0:0,0:0:0);
    (A8 => O24) = (0:0:0,0:0:0);
    (A8 => O23) = (0:0:0,0:0:0);
    (A8 => O22) = (0:0:0,0:0:0);
    (A8 => O21) = (0:0:0,0:0:0);
    (A8 => O20) = (0:0:0,0:0:0);
    (A8 => O19) = (0:0:0,0:0:0);
    (A8 => O18) = (0:0:0,0:0:0);
    (A8 => O17) = (0:0:0,0:0:0);
    (A8 => O16) = (0:0:0,0:0:0);
    (A8 => O15) = (0:0:0,0:0:0);
    (A8 => O14) = (0:0:0,0:0:0);
    (A8 => O13) = (0:0:0,0:0:0);
    (A8 => O12) = (0:0:0,0:0:0);
    (A8 => O11) = (0:0:0,0:0:0);
    (A8 => O10) = (0:0:0,0:0:0);
    (A8 => O9) = (0:0:0,0:0:0);
    (A7 => O24) = (0:0:0,0:0:0);
    (A7 => O23) = (0:0:0,0:0:0);
    (A7 => O22) = (0:0:0,0:0:0);
    (A7 => O21) = (0:0:0,0:0:0);
    (A7 => O20) = (0:0:0,0:0:0);
    (A7 => O19) = (0:0:0,0:0:0);
    (A7 => O18) = (0:0:0,0:0:0);
    (A7 => O17) = (0:0:0,0:0:0);
    (A7 => O16) = (0:0:0,0:0:0);
    (A7 => O15) = (0:0:0,0:0:0);
    (A7 => O14) = (0:0:0,0:0:0);
    (A7 => O13) = (0:0:0,0:0:0);
    (A7 => O12) = (0:0:0,0:0:0);
    (A7 => O11) = (0:0:0,0:0:0);
    (A7 => O10) = (0:0:0,0:0:0);
    (A7 => O9) = (0:0:0,0:0:0);
    (A6 => O24) = (0:0:0,0:0:0);
    (A6 => O23) = (0:0:0,0:0:0);
    (A6 => O22) = (0:0:0,0:0:0);
    (A6 => O21) = (0:0:0,0:0:0);
    (A6 => O20) = (0:0:0,0:0:0);
    (A6 => O19) = (0:0:0,0:0:0);
    (A6 => O18) = (0:0:0,0:0:0);
    (A6 => O17) = (0:0:0,0:0:0);
    (A6 => O16) = (0:0:0,0:0:0);
    (A6 => O15) = (0:0:0,0:0:0);
    (A6 => O14) = (0:0:0,0:0:0);
    (A6 => O13) = (0:0:0,0:0:0);
    (A6 => O12) = (0:0:0,0:0:0);
    (A6 => O11) = (0:0:0,0:0:0);
    (A6 => O10) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A5 => O24) = (0:0:0,0:0:0);
    (A5 => O23) = (0:0:0,0:0:0);
    (A5 => O22) = (0:0:0,0:0:0);
    (A5 => O21) = (0:0:0,0:0:0);
    (A5 => O20) = (0:0:0,0:0:0);
    (A5 => O19) = (0:0:0,0:0:0);
    (A5 => O18) = (0:0:0,0:0:0);
    (A5 => O17) = (0:0:0,0:0:0);
    (A5 => O16) = (0:0:0,0:0:0);
    (A5 => O15) = (0:0:0,0:0:0);
    (A5 => O14) = (0:0:0,0:0:0);
    (A5 => O13) = (0:0:0,0:0:0);
    (A5 => O12) = (0:0:0,0:0:0);
    (A5 => O11) = (0:0:0,0:0:0);
    (A5 => O10) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A4 => O24) = (0:0:0,0:0:0);
    (A4 => O23) = (0:0:0,0:0:0);
    (A4 => O22) = (0:0:0,0:0:0);
    (A4 => O21) = (0:0:0,0:0:0);
    (A4 => O20) = (0:0:0,0:0:0);
    (A4 => O19) = (0:0:0,0:0:0);
    (A4 => O18) = (0:0:0,0:0:0);
    (A4 => O17) = (0:0:0,0:0:0);
    (A4 => O16) = (0:0:0,0:0:0);
    (A4 => O15) = (0:0:0,0:0:0);
    (A4 => O14) = (0:0:0,0:0:0);
    (A4 => O13) = (0:0:0,0:0:0);
    (A4 => O12) = (0:0:0,0:0:0);
    (A4 => O11) = (0:0:0,0:0:0);
    (A4 => O10) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A3 => O24) = (0:0:0,0:0:0);
    (A3 => O23) = (0:0:0,0:0:0);
    (A3 => O22) = (0:0:0,0:0:0);
    (A3 => O21) = (0:0:0,0:0:0);
    (A3 => O20) = (0:0:0,0:0:0);
    (A3 => O19) = (0:0:0,0:0:0);
    (A3 => O18) = (0:0:0,0:0:0);
    (A3 => O17) = (0:0:0,0:0:0);
    (A3 => O16) = (0:0:0,0:0:0);
    (A3 => O15) = (0:0:0,0:0:0);
    (A3 => O14) = (0:0:0,0:0:0);
    (A3 => O13) = (0:0:0,0:0:0);
    (A3 => O12) = (0:0:0,0:0:0);
    (A3 => O11) = (0:0:0,0:0:0);
    (A3 => O10) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A2 => O24) = (0:0:0,0:0:0);
    (A2 => O23) = (0:0:0,0:0:0);
    (A2 => O22) = (0:0:0,0:0:0);
    (A2 => O21) = (0:0:0,0:0:0);
    (A2 => O20) = (0:0:0,0:0:0);
    (A2 => O19) = (0:0:0,0:0:0);
    (A2 => O18) = (0:0:0,0:0:0);
    (A2 => O17) = (0:0:0,0:0:0);
    (A2 => O16) = (0:0:0,0:0:0);
    (A2 => O15) = (0:0:0,0:0:0);
    (A2 => O14) = (0:0:0,0:0:0);
    (A2 => O13) = (0:0:0,0:0:0);
    (A2 => O12) = (0:0:0,0:0:0);
    (A2 => O11) = (0:0:0,0:0:0);
    (A2 => O10) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A1 => O24) = (0:0:0,0:0:0);
    (A1 => O23) = (0:0:0,0:0:0);
    (A1 => O22) = (0:0:0,0:0:0);
    (A1 => O21) = (0:0:0,0:0:0);
    (A1 => O20) = (0:0:0,0:0:0);
    (A1 => O19) = (0:0:0,0:0:0);
    (A1 => O18) = (0:0:0,0:0:0);
    (A1 => O17) = (0:0:0,0:0:0);
    (A1 => O16) = (0:0:0,0:0:0);
    (A1 => O15) = (0:0:0,0:0:0);
    (A1 => O14) = (0:0:0,0:0:0);
    (A1 => O13) = (0:0:0,0:0:0);
    (A1 => O12) = (0:0:0,0:0:0);
    (A1 => O11) = (0:0:0,0:0:0);
    (A1 => O10) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A0 => O24) = (0:0:0,0:0:0);
    (A0 => O23) = (0:0:0,0:0:0);
    (A0 => O22) = (0:0:0,0:0:0);
    (A0 => O21) = (0:0:0,0:0:0);
    (A0 => O20) = (0:0:0,0:0:0);
    (A0 => O19) = (0:0:0,0:0:0);
    (A0 => O18) = (0:0:0,0:0:0);
    (A0 => O17) = (0:0:0,0:0:0);
    (A0 => O16) = (0:0:0,0:0:0);
    (A0 => O15) = (0:0:0,0:0:0);
    (A0 => O14) = (0:0:0,0:0:0);
    (A0 => O13) = (0:0:0,0:0:0);
    (A0 => O12) = (0:0:0,0:0:0);
    (A0 => O11) = (0:0:0,0:0:0);
    (A0 => O10) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (B15 => O24) = (0:0:0,0:0:0);
    (B15 => O23) = (0:0:0,0:0:0);
    (B15 => O22) = (0:0:0,0:0:0);
    (B15 => O21) = (0:0:0,0:0:0);
    (B15 => O20) = (0:0:0,0:0:0);
    (B15 => O19) = (0:0:0,0:0:0);
    (B15 => O18) = (0:0:0,0:0:0);
    (B15 => O17) = (0:0:0,0:0:0);
    (B15 => O16) = (0:0:0,0:0:0);
    (B15 => O15) = (0:0:0,0:0:0);
    (B14 => O24) = (0:0:0,0:0:0);
    (B14 => O23) = (0:0:0,0:0:0);
    (B14 => O22) = (0:0:0,0:0:0);
    (B14 => O21) = (0:0:0,0:0:0);
    (B14 => O20) = (0:0:0,0:0:0);
    (B14 => O19) = (0:0:0,0:0:0);
    (B14 => O18) = (0:0:0,0:0:0);
    (B14 => O17) = (0:0:0,0:0:0);
    (B14 => O16) = (0:0:0,0:0:0);
    (B14 => O15) = (0:0:0,0:0:0);
    (B14 => O14) = (0:0:0,0:0:0);
    (B13 => O24) = (0:0:0,0:0:0);
    (B13 => O23) = (0:0:0,0:0:0);
    (B13 => O22) = (0:0:0,0:0:0);
    (B13 => O21) = (0:0:0,0:0:0);
    (B13 => O20) = (0:0:0,0:0:0);
    (B13 => O19) = (0:0:0,0:0:0);
    (B13 => O18) = (0:0:0,0:0:0);
    (B13 => O17) = (0:0:0,0:0:0);
    (B13 => O16) = (0:0:0,0:0:0);
    (B13 => O15) = (0:0:0,0:0:0);
    (B13 => O14) = (0:0:0,0:0:0);
    (B13 => O13) = (0:0:0,0:0:0);
    (B12 => O24) = (0:0:0,0:0:0);
    (B12 => O23) = (0:0:0,0:0:0);
    (B12 => O22) = (0:0:0,0:0:0);
    (B12 => O21) = (0:0:0,0:0:0);
    (B12 => O20) = (0:0:0,0:0:0);
    (B12 => O19) = (0:0:0,0:0:0);
    (B12 => O18) = (0:0:0,0:0:0);
    (B12 => O17) = (0:0:0,0:0:0);
    (B12 => O16) = (0:0:0,0:0:0);
    (B12 => O15) = (0:0:0,0:0:0);
    (B12 => O14) = (0:0:0,0:0:0);
    (B12 => O13) = (0:0:0,0:0:0);
    (B12 => O12) = (0:0:0,0:0:0);
    (B11 => O24) = (0:0:0,0:0:0);
    (B11 => O23) = (0:0:0,0:0:0);
    (B11 => O22) = (0:0:0,0:0:0);
    (B11 => O21) = (0:0:0,0:0:0);
    (B11 => O20) = (0:0:0,0:0:0);
    (B11 => O19) = (0:0:0,0:0:0);
    (B11 => O18) = (0:0:0,0:0:0);
    (B11 => O17) = (0:0:0,0:0:0);
    (B11 => O16) = (0:0:0,0:0:0);
    (B11 => O15) = (0:0:0,0:0:0);
    (B11 => O14) = (0:0:0,0:0:0);
    (B11 => O13) = (0:0:0,0:0:0);
    (B11 => O12) = (0:0:0,0:0:0);
    (B11 => O11) = (0:0:0,0:0:0);
    (B10 => O24) = (0:0:0,0:0:0);
    (B10 => O23) = (0:0:0,0:0:0);
    (B10 => O22) = (0:0:0,0:0:0);
    (B10 => O21) = (0:0:0,0:0:0);
    (B10 => O20) = (0:0:0,0:0:0);
    (B10 => O19) = (0:0:0,0:0:0);
    (B10 => O18) = (0:0:0,0:0:0);
    (B10 => O17) = (0:0:0,0:0:0);
    (B10 => O16) = (0:0:0,0:0:0);
    (B10 => O15) = (0:0:0,0:0:0);
    (B10 => O14) = (0:0:0,0:0:0);
    (B10 => O13) = (0:0:0,0:0:0);
    (B10 => O12) = (0:0:0,0:0:0);
    (B10 => O11) = (0:0:0,0:0:0);
    (B10 => O10) = (0:0:0,0:0:0);
    (B9 => O24) = (0:0:0,0:0:0);
    (B9 => O23) = (0:0:0,0:0:0);
    (B9 => O22) = (0:0:0,0:0:0);
    (B9 => O21) = (0:0:0,0:0:0);
    (B9 => O20) = (0:0:0,0:0:0);
    (B9 => O19) = (0:0:0,0:0:0);
    (B9 => O18) = (0:0:0,0:0:0);
    (B9 => O17) = (0:0:0,0:0:0);
    (B9 => O16) = (0:0:0,0:0:0);
    (B9 => O15) = (0:0:0,0:0:0);
    (B9 => O14) = (0:0:0,0:0:0);
    (B9 => O13) = (0:0:0,0:0:0);
    (B9 => O12) = (0:0:0,0:0:0);
    (B9 => O11) = (0:0:0,0:0:0);
    (B9 => O10) = (0:0:0,0:0:0);
    (B9 => O9) = (0:0:0,0:0:0);
    (B8 => O24) = (0:0:0,0:0:0);
    (B8 => O23) = (0:0:0,0:0:0);
    (B8 => O22) = (0:0:0,0:0:0);
    (B8 => O21) = (0:0:0,0:0:0);
    (B8 => O20) = (0:0:0,0:0:0);
    (B8 => O19) = (0:0:0,0:0:0);
    (B8 => O18) = (0:0:0,0:0:0);
    (B8 => O17) = (0:0:0,0:0:0);
    (B8 => O16) = (0:0:0,0:0:0);
    (B8 => O15) = (0:0:0,0:0:0);
    (B8 => O14) = (0:0:0,0:0:0);
    (B8 => O13) = (0:0:0,0:0:0);
    (B8 => O12) = (0:0:0,0:0:0);
    (B8 => O11) = (0:0:0,0:0:0);
    (B8 => O10) = (0:0:0,0:0:0);
    (B8 => O9) = (0:0:0,0:0:0);
    (B7 => O24) = (0:0:0,0:0:0);
    (B7 => O23) = (0:0:0,0:0:0);
    (B7 => O22) = (0:0:0,0:0:0);
    (B7 => O21) = (0:0:0,0:0:0);
    (B7 => O20) = (0:0:0,0:0:0);
    (B7 => O19) = (0:0:0,0:0:0);
    (B7 => O18) = (0:0:0,0:0:0);
    (B7 => O17) = (0:0:0,0:0:0);
    (B7 => O16) = (0:0:0,0:0:0);
    (B7 => O15) = (0:0:0,0:0:0);
    (B7 => O14) = (0:0:0,0:0:0);
    (B7 => O13) = (0:0:0,0:0:0);
    (B7 => O12) = (0:0:0,0:0:0);
    (B7 => O11) = (0:0:0,0:0:0);
    (B7 => O10) = (0:0:0,0:0:0);
    (B7 => O9) = (0:0:0,0:0:0);
    (B6 => O24) = (0:0:0,0:0:0);
    (B6 => O23) = (0:0:0,0:0:0);
    (B6 => O22) = (0:0:0,0:0:0);
    (B6 => O21) = (0:0:0,0:0:0);
    (B6 => O20) = (0:0:0,0:0:0);
    (B6 => O19) = (0:0:0,0:0:0);
    (B6 => O18) = (0:0:0,0:0:0);
    (B6 => O17) = (0:0:0,0:0:0);
    (B6 => O16) = (0:0:0,0:0:0);
    (B6 => O15) = (0:0:0,0:0:0);
    (B6 => O14) = (0:0:0,0:0:0);
    (B6 => O13) = (0:0:0,0:0:0);
    (B6 => O12) = (0:0:0,0:0:0);
    (B6 => O11) = (0:0:0,0:0:0);
    (B6 => O10) = (0:0:0,0:0:0);
    (B6 => O9) = (0:0:0,0:0:0);
    (B5 => O24) = (0:0:0,0:0:0);
    (B5 => O23) = (0:0:0,0:0:0);
    (B5 => O22) = (0:0:0,0:0:0);
    (B5 => O21) = (0:0:0,0:0:0);
    (B5 => O20) = (0:0:0,0:0:0);
    (B5 => O19) = (0:0:0,0:0:0);
    (B5 => O18) = (0:0:0,0:0:0);
    (B5 => O17) = (0:0:0,0:0:0);
    (B5 => O16) = (0:0:0,0:0:0);
    (B5 => O15) = (0:0:0,0:0:0);
    (B5 => O14) = (0:0:0,0:0:0);
    (B5 => O13) = (0:0:0,0:0:0);
    (B5 => O12) = (0:0:0,0:0:0);
    (B5 => O11) = (0:0:0,0:0:0);
    (B5 => O10) = (0:0:0,0:0:0);
    (B5 => O9) = (0:0:0,0:0:0);
    (B4 => O24) = (0:0:0,0:0:0);
    (B4 => O23) = (0:0:0,0:0:0);
    (B4 => O22) = (0:0:0,0:0:0);
    (B4 => O21) = (0:0:0,0:0:0);
    (B4 => O20) = (0:0:0,0:0:0);
    (B4 => O19) = (0:0:0,0:0:0);
    (B4 => O18) = (0:0:0,0:0:0);
    (B4 => O17) = (0:0:0,0:0:0);
    (B4 => O16) = (0:0:0,0:0:0);
    (B4 => O15) = (0:0:0,0:0:0);
    (B4 => O14) = (0:0:0,0:0:0);
    (B4 => O13) = (0:0:0,0:0:0);
    (B4 => O12) = (0:0:0,0:0:0);
    (B4 => O11) = (0:0:0,0:0:0);
    (B4 => O10) = (0:0:0,0:0:0);
    (B4 => O9) = (0:0:0,0:0:0);
    (B3 => O24) = (0:0:0,0:0:0);
    (B3 => O23) = (0:0:0,0:0:0);
    (B3 => O22) = (0:0:0,0:0:0);
    (B3 => O21) = (0:0:0,0:0:0);
    (B3 => O20) = (0:0:0,0:0:0);
    (B3 => O19) = (0:0:0,0:0:0);
    (B3 => O18) = (0:0:0,0:0:0);
    (B3 => O17) = (0:0:0,0:0:0);
    (B3 => O16) = (0:0:0,0:0:0);
    (B3 => O15) = (0:0:0,0:0:0);
    (B3 => O14) = (0:0:0,0:0:0);
    (B3 => O13) = (0:0:0,0:0:0);
    (B3 => O12) = (0:0:0,0:0:0);
    (B3 => O11) = (0:0:0,0:0:0);
    (B3 => O10) = (0:0:0,0:0:0);
    (B3 => O9) = (0:0:0,0:0:0);
    (B2 => O24) = (0:0:0,0:0:0);
    (B2 => O23) = (0:0:0,0:0:0);
    (B2 => O22) = (0:0:0,0:0:0);
    (B2 => O21) = (0:0:0,0:0:0);
    (B2 => O20) = (0:0:0,0:0:0);
    (B2 => O19) = (0:0:0,0:0:0);
    (B2 => O18) = (0:0:0,0:0:0);
    (B2 => O17) = (0:0:0,0:0:0);
    (B2 => O16) = (0:0:0,0:0:0);
    (B2 => O15) = (0:0:0,0:0:0);
    (B2 => O14) = (0:0:0,0:0:0);
    (B2 => O13) = (0:0:0,0:0:0);
    (B2 => O12) = (0:0:0,0:0:0);
    (B2 => O11) = (0:0:0,0:0:0);
    (B2 => O10) = (0:0:0,0:0:0);
    (B2 => O9) = (0:0:0,0:0:0);
    (B1 => O24) = (0:0:0,0:0:0);
    (B1 => O23) = (0:0:0,0:0:0);
    (B1 => O22) = (0:0:0,0:0:0);
    (B1 => O21) = (0:0:0,0:0:0);
    (B1 => O20) = (0:0:0,0:0:0);
    (B1 => O19) = (0:0:0,0:0:0);
    (B1 => O18) = (0:0:0,0:0:0);
    (B1 => O17) = (0:0:0,0:0:0);
    (B1 => O16) = (0:0:0,0:0:0);
    (B1 => O15) = (0:0:0,0:0:0);
    (B1 => O14) = (0:0:0,0:0:0);
    (B1 => O13) = (0:0:0,0:0:0);
    (B1 => O12) = (0:0:0,0:0:0);
    (B1 => O11) = (0:0:0,0:0:0);
    (B1 => O10) = (0:0:0,0:0:0);
    (B1 => O9) = (0:0:0,0:0:0);
    (B0 => O24) = (0:0:0,0:0:0);
    (B0 => O23) = (0:0:0,0:0:0);
    (B0 => O22) = (0:0:0,0:0:0);
    (B0 => O21) = (0:0:0,0:0:0);
    (B0 => O20) = (0:0:0,0:0:0);
    (B0 => O19) = (0:0:0,0:0:0);
    (B0 => O18) = (0:0:0,0:0:0);
    (B0 => O17) = (0:0:0,0:0:0);
    (B0 => O16) = (0:0:0,0:0:0);
    (B0 => O15) = (0:0:0,0:0:0);
    (B0 => O14) = (0:0:0,0:0:0);
    (B0 => O13) = (0:0:0,0:0:0);
    (B0 => O12) = (0:0:0,0:0:0);
    (B0 => O11) = (0:0:0,0:0:0);
    (B0 => O10) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC16_B ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.A_REG = "0b0";
  defparam INST10.A_SIGNED = "0b1";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTOUTPUT_SELECT = "0b11";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.B_SIGNED = "0b1";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.MODE_8x8 = "0b0";
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b11";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
endmodule

module i_ADC_CS ( output PADDI, input i_ADC_CS );
  wire   GNDI;

  BB_B_B \adc/i_ADC_CS_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(i_ADC_CS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_ADC_CS => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_DAC_SCK ( input PADDO, output o_DAC_SCK );
  wire   VCCI;

  BB_B_B \o_DAC_SCK_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(o_DAC_SCK));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_DAC_SCK) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_DAC_MOSI ( input PADDO, output o_DAC_MOSI );
  wire   VCCI;

  BB_B_B \o_DAC_MOSI_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(o_DAC_MOSI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_DAC_MOSI) = (0:0:0,0:0:0);
  endspecify

endmodule

module test ( input PADDO, output test );
  wire   VCCI;

  BB_B_B \test_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(test));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => test) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug ( input PADDO, output debug );
  wire   VCCI;

  BB_B_B \debug_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(debug));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debug) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_ADC_Clock ( output PADDI, input i_ADC_Clock );
  wire   GNDI;

  BB_B_B \i_ADC_Clock_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(i_ADC_Clock));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_ADC_Clock => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_ADC_Data ( output PADDI, input i_ADC_Data );
  wire   GNDI;

  BB_B_B \i_ADC_Data_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(i_ADC_Data));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_ADC_Data => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_Clock ( output PADDI, input i_Clock );
  wire   GNDI;

  BB_B_B \i_Clock_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(i_Clock));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_Clock => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_DAC_CS ( input PADDO, output o_DAC_CS );
  wire   VCCI;

  BB_B_B \o_DAC_CS_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(o_DAC_CS));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_DAC_CS) = (0:0:0,0:0:0);
  endspecify

endmodule
